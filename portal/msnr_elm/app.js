(function(scope){
'use strict';

function F(arity, fun, wrapper) {
  wrapper.a = arity;
  wrapper.f = fun;
  return wrapper;
}

function F2(fun) {
  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })
}
function F3(fun) {
  return F(3, fun, function(a) {
    return function(b) { return function(c) { return fun(a, b, c); }; };
  });
}
function F4(fun) {
  return F(4, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return fun(a, b, c, d); }; }; };
  });
}
function F5(fun) {
  return F(5, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };
  });
}
function F6(fun) {
  return F(6, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return fun(a, b, c, d, e, f); }; }; }; }; };
  });
}
function F7(fun) {
  return F(7, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };
  });
}
function F8(fun) {
  return F(8, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) {
    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };
  });
}
function F9(fun) {
  return F(9, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) { return function(i) {
    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };
  });
}

function A2(fun, a, b) {
  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);
}
function A3(fun, a, b, c) {
  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);
}
function A4(fun, a, b, c, d) {
  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);
}
function A5(fun, a, b, c, d, e) {
  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);
}
function A6(fun, a, b, c, d, e, f) {
  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);
}
function A7(fun, a, b, c, d, e, f, g) {
  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);
}
function A8(fun, a, b, c, d, e, f, g, h) {
  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);
}
function A9(fun, a, b, c, d, e, f, g, h, i) {
  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
}

console.warn('Compiled in DEV mode. Follow the advice at https://elm-lang.org/0.19.1/optimize for better performance and smaller assets.');


var _JsArray_empty = [];

function _JsArray_singleton(value)
{
    return [value];
}

function _JsArray_length(array)
{
    return array.length;
}

var _JsArray_initialize = F3(function(size, offset, func)
{
    var result = new Array(size);

    for (var i = 0; i < size; i++)
    {
        result[i] = func(offset + i);
    }

    return result;
});

var _JsArray_initializeFromList = F2(function (max, ls)
{
    var result = new Array(max);

    for (var i = 0; i < max && ls.b; i++)
    {
        result[i] = ls.a;
        ls = ls.b;
    }

    result.length = i;
    return _Utils_Tuple2(result, ls);
});

var _JsArray_unsafeGet = F2(function(index, array)
{
    return array[index];
});

var _JsArray_unsafeSet = F3(function(index, value, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[index] = value;
    return result;
});

var _JsArray_push = F2(function(value, array)
{
    var length = array.length;
    var result = new Array(length + 1);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[length] = value;
    return result;
});

var _JsArray_foldl = F3(function(func, acc, array)
{
    var length = array.length;

    for (var i = 0; i < length; i++)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_foldr = F3(function(func, acc, array)
{
    for (var i = array.length - 1; i >= 0; i--)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_map = F2(function(func, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = func(array[i]);
    }

    return result;
});

var _JsArray_indexedMap = F3(function(func, offset, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = A2(func, offset + i, array[i]);
    }

    return result;
});

var _JsArray_slice = F3(function(from, to, array)
{
    return array.slice(from, to);
});

var _JsArray_appendN = F3(function(n, dest, source)
{
    var destLen = dest.length;
    var itemsToCopy = n - destLen;

    if (itemsToCopy > source.length)
    {
        itemsToCopy = source.length;
    }

    var size = destLen + itemsToCopy;
    var result = new Array(size);

    for (var i = 0; i < destLen; i++)
    {
        result[i] = dest[i];
    }

    for (var i = 0; i < itemsToCopy; i++)
    {
        result[i + destLen] = source[i];
    }

    return result;
});



// LOG

var _Debug_log_UNUSED = F2(function(tag, value)
{
	return value;
});

var _Debug_log = F2(function(tag, value)
{
	console.log(tag + ': ' + _Debug_toString(value));
	return value;
});


// TODOS

function _Debug_todo(moduleName, region)
{
	return function(message) {
		_Debug_crash(8, moduleName, region, message);
	};
}

function _Debug_todoCase(moduleName, region, value)
{
	return function(message) {
		_Debug_crash(9, moduleName, region, value, message);
	};
}


// TO STRING

function _Debug_toString_UNUSED(value)
{
	return '<internals>';
}

function _Debug_toString(value)
{
	return _Debug_toAnsiString(false, value);
}

function _Debug_toAnsiString(ansi, value)
{
	if (typeof value === 'function')
	{
		return _Debug_internalColor(ansi, '<function>');
	}

	if (typeof value === 'boolean')
	{
		return _Debug_ctorColor(ansi, value ? 'True' : 'False');
	}

	if (typeof value === 'number')
	{
		return _Debug_numberColor(ansi, value + '');
	}

	if (value instanceof String)
	{
		return _Debug_charColor(ansi, "'" + _Debug_addSlashes(value, true) + "'");
	}

	if (typeof value === 'string')
	{
		return _Debug_stringColor(ansi, '"' + _Debug_addSlashes(value, false) + '"');
	}

	if (typeof value === 'object' && '$' in value)
	{
		var tag = value.$;

		if (typeof tag === 'number')
		{
			return _Debug_internalColor(ansi, '<internals>');
		}

		if (tag[0] === '#')
		{
			var output = [];
			for (var k in value)
			{
				if (k === '$') continue;
				output.push(_Debug_toAnsiString(ansi, value[k]));
			}
			return '(' + output.join(',') + ')';
		}

		if (tag === 'Set_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Set')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));
		}

		if (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Dict')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));
		}

		if (tag === 'Array_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Array')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));
		}

		if (tag === '::' || tag === '[]')
		{
			var output = '[';

			value.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)

			for (; value.b; value = value.b) // WHILE_CONS
			{
				output += ',' + _Debug_toAnsiString(ansi, value.a);
			}
			return output + ']';
		}

		var output = '';
		for (var i in value)
		{
			if (i === '$') continue;
			var str = _Debug_toAnsiString(ansi, value[i]);
			var c0 = str[0];
			var parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
			output += ' ' + (parenless ? str : '(' + str + ')');
		}
		return _Debug_ctorColor(ansi, tag) + output;
	}

	if (typeof DataView === 'function' && value instanceof DataView)
	{
		return _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');
	}

	if (typeof File !== 'undefined' && value instanceof File)
	{
		return _Debug_internalColor(ansi, '<' + value.name + '>');
	}

	if (typeof value === 'object')
	{
		var output = [];
		for (var key in value)
		{
			var field = key[0] === '_' ? key.slice(1) : key;
			output.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));
		}
		if (output.length === 0)
		{
			return '{}';
		}
		return '{ ' + output.join(', ') + ' }';
	}

	return _Debug_internalColor(ansi, '<internals>');
}

function _Debug_addSlashes(str, isChar)
{
	var s = str
		.replace(/\\/g, '\\\\')
		.replace(/\n/g, '\\n')
		.replace(/\t/g, '\\t')
		.replace(/\r/g, '\\r')
		.replace(/\v/g, '\\v')
		.replace(/\0/g, '\\0');

	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}

function _Debug_ctorColor(ansi, string)
{
	return ansi ? '\x1b[96m' + string + '\x1b[0m' : string;
}

function _Debug_numberColor(ansi, string)
{
	return ansi ? '\x1b[95m' + string + '\x1b[0m' : string;
}

function _Debug_stringColor(ansi, string)
{
	return ansi ? '\x1b[93m' + string + '\x1b[0m' : string;
}

function _Debug_charColor(ansi, string)
{
	return ansi ? '\x1b[92m' + string + '\x1b[0m' : string;
}

function _Debug_fadeColor(ansi, string)
{
	return ansi ? '\x1b[37m' + string + '\x1b[0m' : string;
}

function _Debug_internalColor(ansi, string)
{
	return ansi ? '\x1b[36m' + string + '\x1b[0m' : string;
}

function _Debug_toHexDigit(n)
{
	return String.fromCharCode(n < 10 ? 48 + n : 55 + n);
}


// CRASH


function _Debug_crash_UNUSED(identifier)
{
	throw new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');
}


function _Debug_crash(identifier, fact1, fact2, fact3, fact4)
{
	switch(identifier)
	{
		case 0:
			throw new Error('What node should I take over? In JavaScript I need something like:\n\n    Elm.Main.init({\n        node: document.getElementById("elm-node")\n    })\n\nYou need to do this with any Browser.sandbox or Browser.element program.');

		case 1:
			throw new Error('Browser.application programs cannot handle URLs like this:\n\n    ' + document.location.href + '\n\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');

		case 2:
			var jsonErrorString = fact1;
			throw new Error('Problem with the flags given to your Elm program on initialization.\n\n' + jsonErrorString);

		case 3:
			var portName = fact1;
			throw new Error('There can only be one port named `' + portName + '`, but your program has multiple.');

		case 4:
			var portName = fact1;
			var problem = fact2;
			throw new Error('Trying to send an unexpected type of value through port `' + portName + '`:\n' + problem);

		case 5:
			throw new Error('Trying to use `(==)` on functions.\nThere is no way to know if functions are "the same" in the Elm sense.\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');

		case 6:
			var moduleName = fact1;
			throw new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');

		case 8:
			var moduleName = fact1;
			var region = fact2;
			var message = fact3;
			throw new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\n\n' + message);

		case 9:
			var moduleName = fact1;
			var region = fact2;
			var value = fact3;
			var message = fact4;
			throw new Error(
				'TODO in module `' + moduleName + '` from the `case` expression '
				+ _Debug_regionToString(region) + '\n\nIt received the following value:\n\n    '
				+ _Debug_toString(value).replace('\n', '\n    ')
				+ '\n\nBut the branch that handles it says:\n\n    ' + message.replace('\n', '\n    ')
			);

		case 10:
			throw new Error('Bug in https://github.com/elm/virtual-dom/issues');

		case 11:
			throw new Error('Cannot perform mod 0. Division by zero error.');
	}
}

function _Debug_regionToString(region)
{
	if (region.start.line === region.end.line)
	{
		return 'on line ' + region.start.line;
	}
	return 'on lines ' + region.start.line + ' through ' + region.end.line;
}



// EQUALITY

function _Utils_eq(x, y)
{
	for (
		var pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);
		isEqual && (pair = stack.pop());
		isEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)
		)
	{}

	return isEqual;
}

function _Utils_eqHelp(x, y, depth, stack)
{
	if (x === y)
	{
		return true;
	}

	if (typeof x !== 'object' || x === null || y === null)
	{
		typeof x === 'function' && _Debug_crash(5);
		return false;
	}

	if (depth > 100)
	{
		stack.push(_Utils_Tuple2(x,y));
		return true;
	}

	/**/
	if (x.$ === 'Set_elm_builtin')
	{
		x = $elm$core$Set$toList(x);
		y = $elm$core$Set$toList(y);
	}
	if (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	/**_UNUSED/
	if (x.$ < 0)
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	for (var key in x)
	{
		if (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))
		{
			return false;
		}
	}
	return true;
}

var _Utils_equal = F2(_Utils_eq);
var _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });



// COMPARISONS

// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
// the particular integer values assigned to LT, EQ, and GT.

function _Utils_cmp(x, y, ord)
{
	if (typeof x !== 'object')
	{
		return x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;
	}

	/**/
	if (x instanceof String)
	{
		var a = x.valueOf();
		var b = y.valueOf();
		return a === b ? 0 : a < b ? -1 : 1;
	}
	//*/

	/**_UNUSED/
	if (typeof x.$ === 'undefined')
	//*/
	/**/
	if (x.$[0] === '#')
	//*/
	{
		return (ord = _Utils_cmp(x.a, y.a))
			? ord
			: (ord = _Utils_cmp(x.b, y.b))
				? ord
				: _Utils_cmp(x.c, y.c);
	}

	// traverse conses until end of a list or a mismatch
	for (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES
	return ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);
}

var _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });
var _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });
var _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });
var _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });

var _Utils_compare = F2(function(x, y)
{
	var n = _Utils_cmp(x, y);
	return n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;
});


// COMMON VALUES

var _Utils_Tuple0_UNUSED = 0;
var _Utils_Tuple0 = { $: '#0' };

function _Utils_Tuple2_UNUSED(a, b) { return { a: a, b: b }; }
function _Utils_Tuple2(a, b) { return { $: '#2', a: a, b: b }; }

function _Utils_Tuple3_UNUSED(a, b, c) { return { a: a, b: b, c: c }; }
function _Utils_Tuple3(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }

function _Utils_chr_UNUSED(c) { return c; }
function _Utils_chr(c) { return new String(c); }


// RECORDS

function _Utils_update(oldRecord, updatedFields)
{
	var newRecord = {};

	for (var key in oldRecord)
	{
		newRecord[key] = oldRecord[key];
	}

	for (var key in updatedFields)
	{
		newRecord[key] = updatedFields[key];
	}

	return newRecord;
}


// APPEND

var _Utils_append = F2(_Utils_ap);

function _Utils_ap(xs, ys)
{
	// append Strings
	if (typeof xs === 'string')
	{
		return xs + ys;
	}

	// append Lists
	if (!xs.b)
	{
		return ys;
	}
	var root = _List_Cons(xs.a, ys);
	xs = xs.b
	for (var curr = root; xs.b; xs = xs.b) // WHILE_CONS
	{
		curr = curr.b = _List_Cons(xs.a, ys);
	}
	return root;
}



var _List_Nil_UNUSED = { $: 0 };
var _List_Nil = { $: '[]' };

function _List_Cons_UNUSED(hd, tl) { return { $: 1, a: hd, b: tl }; }
function _List_Cons(hd, tl) { return { $: '::', a: hd, b: tl }; }


var _List_cons = F2(_List_Cons);

function _List_fromArray(arr)
{
	var out = _List_Nil;
	for (var i = arr.length; i--; )
	{
		out = _List_Cons(arr[i], out);
	}
	return out;
}

function _List_toArray(xs)
{
	for (var out = []; xs.b; xs = xs.b) // WHILE_CONS
	{
		out.push(xs.a);
	}
	return out;
}

var _List_map2 = F3(function(f, xs, ys)
{
	for (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES
	{
		arr.push(A2(f, xs.a, ys.a));
	}
	return _List_fromArray(arr);
});

var _List_map3 = F4(function(f, xs, ys, zs)
{
	for (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A3(f, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map4 = F5(function(f, ws, xs, ys, zs)
{
	for (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A4(f, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map5 = F6(function(f, vs, ws, xs, ys, zs)
{
	for (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_sortBy = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		return _Utils_cmp(f(a), f(b));
	}));
});

var _List_sortWith = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		var ord = A2(f, a, b);
		return ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;
	}));
});



// MATH

var _Basics_add = F2(function(a, b) { return a + b; });
var _Basics_sub = F2(function(a, b) { return a - b; });
var _Basics_mul = F2(function(a, b) { return a * b; });
var _Basics_fdiv = F2(function(a, b) { return a / b; });
var _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });
var _Basics_pow = F2(Math.pow);

var _Basics_remainderBy = F2(function(b, a) { return a % b; });

// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf
var _Basics_modBy = F2(function(modulus, x)
{
	var answer = x % modulus;
	return modulus === 0
		? _Debug_crash(11)
		:
	((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))
		? answer + modulus
		: answer;
});


// TRIGONOMETRY

var _Basics_pi = Math.PI;
var _Basics_e = Math.E;
var _Basics_cos = Math.cos;
var _Basics_sin = Math.sin;
var _Basics_tan = Math.tan;
var _Basics_acos = Math.acos;
var _Basics_asin = Math.asin;
var _Basics_atan = Math.atan;
var _Basics_atan2 = F2(Math.atan2);


// MORE MATH

function _Basics_toFloat(x) { return x; }
function _Basics_truncate(n) { return n | 0; }
function _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }

var _Basics_ceiling = Math.ceil;
var _Basics_floor = Math.floor;
var _Basics_round = Math.round;
var _Basics_sqrt = Math.sqrt;
var _Basics_log = Math.log;
var _Basics_isNaN = isNaN;


// BOOLEANS

function _Basics_not(bool) { return !bool; }
var _Basics_and = F2(function(a, b) { return a && b; });
var _Basics_or  = F2(function(a, b) { return a || b; });
var _Basics_xor = F2(function(a, b) { return a !== b; });



var _String_cons = F2(function(chr, str)
{
	return chr + str;
});

function _String_uncons(string)
{
	var word = string.charCodeAt(0);
	return !isNaN(word)
		? $elm$core$Maybe$Just(
			0xD800 <= word && word <= 0xDBFF
				? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))
				: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))
		)
		: $elm$core$Maybe$Nothing;
}

var _String_append = F2(function(a, b)
{
	return a + b;
});

function _String_length(str)
{
	return str.length;
}

var _String_map = F2(function(func, string)
{
	var len = string.length;
	var array = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = string.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			array[i] = func(_Utils_chr(string[i] + string[i+1]));
			i += 2;
			continue;
		}
		array[i] = func(_Utils_chr(string[i]));
		i++;
	}
	return array.join('');
});

var _String_filter = F2(function(isGood, str)
{
	var arr = [];
	var len = str.length;
	var i = 0;
	while (i < len)
	{
		var char = str[i];
		var word = str.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += str[i];
			i++;
		}

		if (isGood(_Utils_chr(char)))
		{
			arr.push(char);
		}
	}
	return arr.join('');
});

function _String_reverse(str)
{
	var len = str.length;
	var arr = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = str.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			arr[len - i] = str[i + 1];
			i++;
			arr[len - i] = str[i - 1];
			i++;
		}
		else
		{
			arr[len - i] = str[i];
			i++;
		}
	}
	return arr.join('');
}

var _String_foldl = F3(function(func, state, string)
{
	var len = string.length;
	var i = 0;
	while (i < len)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += string[i];
			i++;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_foldr = F3(function(func, state, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_split = F2(function(sep, str)
{
	return str.split(sep);
});

var _String_join = F2(function(sep, strs)
{
	return strs.join(sep);
});

var _String_slice = F3(function(start, end, str) {
	return str.slice(start, end);
});

function _String_trim(str)
{
	return str.trim();
}

function _String_trimLeft(str)
{
	return str.replace(/^\s+/, '');
}

function _String_trimRight(str)
{
	return str.replace(/\s+$/, '');
}

function _String_words(str)
{
	return _List_fromArray(str.trim().split(/\s+/g));
}

function _String_lines(str)
{
	return _List_fromArray(str.split(/\r\n|\r|\n/g));
}

function _String_toUpper(str)
{
	return str.toUpperCase();
}

function _String_toLower(str)
{
	return str.toLowerCase();
}

var _String_any = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (isGood(_Utils_chr(char)))
		{
			return true;
		}
	}
	return false;
});

var _String_all = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (!isGood(_Utils_chr(char)))
		{
			return false;
		}
	}
	return true;
});

var _String_contains = F2(function(sub, str)
{
	return str.indexOf(sub) > -1;
});

var _String_startsWith = F2(function(sub, str)
{
	return str.indexOf(sub) === 0;
});

var _String_endsWith = F2(function(sub, str)
{
	return str.length >= sub.length &&
		str.lastIndexOf(sub) === str.length - sub.length;
});

var _String_indexes = F2(function(sub, str)
{
	var subLen = sub.length;

	if (subLen < 1)
	{
		return _List_Nil;
	}

	var i = 0;
	var is = [];

	while ((i = str.indexOf(sub, i)) > -1)
	{
		is.push(i);
		i = i + subLen;
	}

	return _List_fromArray(is);
});


// TO STRING

function _String_fromNumber(number)
{
	return number + '';
}


// INT CONVERSIONS

function _String_toInt(str)
{
	var total = 0;
	var code0 = str.charCodeAt(0);
	var start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;

	for (var i = start; i < str.length; ++i)
	{
		var code = str.charCodeAt(i);
		if (code < 0x30 || 0x39 < code)
		{
			return $elm$core$Maybe$Nothing;
		}
		total = 10 * total + code - 0x30;
	}

	return i == start
		? $elm$core$Maybe$Nothing
		: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);
}


// FLOAT CONVERSIONS

function _String_toFloat(s)
{
	// check if it is a hex, octal, or binary number
	if (s.length === 0 || /[\sxbo]/.test(s))
	{
		return $elm$core$Maybe$Nothing;
	}
	var n = +s;
	// faster isNaN check
	return n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;
}

function _String_fromList(chars)
{
	return _List_toArray(chars).join('');
}




function _Char_toCode(char)
{
	var code = char.charCodeAt(0);
	if (0xD800 <= code && code <= 0xDBFF)
	{
		return (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000
	}
	return code;
}

function _Char_fromCode(code)
{
	return _Utils_chr(
		(code < 0 || 0x10FFFF < code)
			? '\uFFFD'
			:
		(code <= 0xFFFF)
			? String.fromCharCode(code)
			:
		(code -= 0x10000,
			String.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)
		)
	);
}

function _Char_toUpper(char)
{
	return _Utils_chr(char.toUpperCase());
}

function _Char_toLower(char)
{
	return _Utils_chr(char.toLowerCase());
}

function _Char_toLocaleUpper(char)
{
	return _Utils_chr(char.toLocaleUpperCase());
}

function _Char_toLocaleLower(char)
{
	return _Utils_chr(char.toLocaleLowerCase());
}



/**/
function _Json_errorToString(error)
{
	return $elm$json$Json$Decode$errorToString(error);
}
//*/


// CORE DECODERS

function _Json_succeed(msg)
{
	return {
		$: 0,
		a: msg
	};
}

function _Json_fail(msg)
{
	return {
		$: 1,
		a: msg
	};
}

function _Json_decodePrim(decoder)
{
	return { $: 2, b: decoder };
}

var _Json_decodeInt = _Json_decodePrim(function(value) {
	return (typeof value !== 'number')
		? _Json_expecting('an INT', value)
		:
	(-2147483647 < value && value < 2147483647 && (value | 0) === value)
		? $elm$core$Result$Ok(value)
		:
	(isFinite(value) && !(value % 1))
		? $elm$core$Result$Ok(value)
		: _Json_expecting('an INT', value);
});

var _Json_decodeBool = _Json_decodePrim(function(value) {
	return (typeof value === 'boolean')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a BOOL', value);
});

var _Json_decodeFloat = _Json_decodePrim(function(value) {
	return (typeof value === 'number')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a FLOAT', value);
});

var _Json_decodeValue = _Json_decodePrim(function(value) {
	return $elm$core$Result$Ok(_Json_wrap(value));
});

var _Json_decodeString = _Json_decodePrim(function(value) {
	return (typeof value === 'string')
		? $elm$core$Result$Ok(value)
		: (value instanceof String)
			? $elm$core$Result$Ok(value + '')
			: _Json_expecting('a STRING', value);
});

function _Json_decodeList(decoder) { return { $: 3, b: decoder }; }
function _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }

function _Json_decodeNull(value) { return { $: 5, c: value }; }

var _Json_decodeField = F2(function(field, decoder)
{
	return {
		$: 6,
		d: field,
		b: decoder
	};
});

var _Json_decodeIndex = F2(function(index, decoder)
{
	return {
		$: 7,
		e: index,
		b: decoder
	};
});

function _Json_decodeKeyValuePairs(decoder)
{
	return {
		$: 8,
		b: decoder
	};
}

function _Json_mapMany(f, decoders)
{
	return {
		$: 9,
		f: f,
		g: decoders
	};
}

var _Json_andThen = F2(function(callback, decoder)
{
	return {
		$: 10,
		b: decoder,
		h: callback
	};
});

function _Json_oneOf(decoders)
{
	return {
		$: 11,
		g: decoders
	};
}


// DECODING OBJECTS

var _Json_map1 = F2(function(f, d1)
{
	return _Json_mapMany(f, [d1]);
});

var _Json_map2 = F3(function(f, d1, d2)
{
	return _Json_mapMany(f, [d1, d2]);
});

var _Json_map3 = F4(function(f, d1, d2, d3)
{
	return _Json_mapMany(f, [d1, d2, d3]);
});

var _Json_map4 = F5(function(f, d1, d2, d3, d4)
{
	return _Json_mapMany(f, [d1, d2, d3, d4]);
});

var _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5]);
});

var _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);
});

var _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);
});

var _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);
});


// DECODE

var _Json_runOnString = F2(function(decoder, string)
{
	try
	{
		var value = JSON.parse(string);
		return _Json_runHelp(decoder, value);
	}
	catch (e)
	{
		return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));
	}
});

var _Json_run = F2(function(decoder, value)
{
	return _Json_runHelp(decoder, _Json_unwrap(value));
});

function _Json_runHelp(decoder, value)
{
	switch (decoder.$)
	{
		case 2:
			return decoder.b(value);

		case 5:
			return (value === null)
				? $elm$core$Result$Ok(decoder.c)
				: _Json_expecting('null', value);

		case 3:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('a LIST', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _List_fromArray);

		case 4:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);

		case 6:
			var field = decoder.d;
			if (typeof value !== 'object' || value === null || !(field in value))
			{
				return _Json_expecting('an OBJECT with a field named `' + field + '`', value);
			}
			var result = _Json_runHelp(decoder.b, value[field]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));

		case 7:
			var index = decoder.e;
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			if (index >= value.length)
			{
				return _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);
			}
			var result = _Json_runHelp(decoder.b, value[index]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));

		case 8:
			if (typeof value !== 'object' || value === null || _Json_isArray(value))
			{
				return _Json_expecting('an OBJECT', value);
			}

			var keyValuePairs = _List_Nil;
			// TODO test perf of Object.keys and switch when support is good enough
			for (var key in value)
			{
				if (value.hasOwnProperty(key))
				{
					var result = _Json_runHelp(decoder.b, value[key]);
					if (!$elm$core$Result$isOk(result))
					{
						return $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));
					}
					keyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);
				}
			}
			return $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));

		case 9:
			var answer = decoder.f;
			var decoders = decoder.g;
			for (var i = 0; i < decoders.length; i++)
			{
				var result = _Json_runHelp(decoders[i], value);
				if (!$elm$core$Result$isOk(result))
				{
					return result;
				}
				answer = answer(result.a);
			}
			return $elm$core$Result$Ok(answer);

		case 10:
			var result = _Json_runHelp(decoder.b, value);
			return (!$elm$core$Result$isOk(result))
				? result
				: _Json_runHelp(decoder.h(result.a), value);

		case 11:
			var errors = _List_Nil;
			for (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS
			{
				var result = _Json_runHelp(temp.a, value);
				if ($elm$core$Result$isOk(result))
				{
					return result;
				}
				errors = _List_Cons(result.a, errors);
			}
			return $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));

		case 1:
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));

		case 0:
			return $elm$core$Result$Ok(decoder.a);
	}
}

function _Json_runArrayDecoder(decoder, value, toElmValue)
{
	var len = value.length;
	var array = new Array(len);
	for (var i = 0; i < len; i++)
	{
		var result = _Json_runHelp(decoder, value[i]);
		if (!$elm$core$Result$isOk(result))
		{
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));
		}
		array[i] = result.a;
	}
	return $elm$core$Result$Ok(toElmValue(array));
}

function _Json_isArray(value)
{
	return Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);
}

function _Json_toElmArray(array)
{
	return A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });
}

function _Json_expecting(type, value)
{
	return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));
}


// EQUALITY

function _Json_equality(x, y)
{
	if (x === y)
	{
		return true;
	}

	if (x.$ !== y.$)
	{
		return false;
	}

	switch (x.$)
	{
		case 0:
		case 1:
			return x.a === y.a;

		case 2:
			return x.b === y.b;

		case 5:
			return x.c === y.c;

		case 3:
		case 4:
		case 8:
			return _Json_equality(x.b, y.b);

		case 6:
			return x.d === y.d && _Json_equality(x.b, y.b);

		case 7:
			return x.e === y.e && _Json_equality(x.b, y.b);

		case 9:
			return x.f === y.f && _Json_listEquality(x.g, y.g);

		case 10:
			return x.h === y.h && _Json_equality(x.b, y.b);

		case 11:
			return _Json_listEquality(x.g, y.g);
	}
}

function _Json_listEquality(aDecoders, bDecoders)
{
	var len = aDecoders.length;
	if (len !== bDecoders.length)
	{
		return false;
	}
	for (var i = 0; i < len; i++)
	{
		if (!_Json_equality(aDecoders[i], bDecoders[i]))
		{
			return false;
		}
	}
	return true;
}


// ENCODE

var _Json_encode = F2(function(indentLevel, value)
{
	return JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';
});

function _Json_wrap(value) { return { $: 0, a: value }; }
function _Json_unwrap(value) { return value.a; }

function _Json_wrap_UNUSED(value) { return value; }
function _Json_unwrap_UNUSED(value) { return value; }

function _Json_emptyArray() { return []; }
function _Json_emptyObject() { return {}; }

var _Json_addField = F3(function(key, value, object)
{
	object[key] = _Json_unwrap(value);
	return object;
});

function _Json_addEntry(func)
{
	return F2(function(entry, array)
	{
		array.push(_Json_unwrap(func(entry)));
		return array;
	});
}

var _Json_encodeNull = _Json_wrap(null);



// TASKS

function _Scheduler_succeed(value)
{
	return {
		$: 0,
		a: value
	};
}

function _Scheduler_fail(error)
{
	return {
		$: 1,
		a: error
	};
}

function _Scheduler_binding(callback)
{
	return {
		$: 2,
		b: callback,
		c: null
	};
}

var _Scheduler_andThen = F2(function(callback, task)
{
	return {
		$: 3,
		b: callback,
		d: task
	};
});

var _Scheduler_onError = F2(function(callback, task)
{
	return {
		$: 4,
		b: callback,
		d: task
	};
});

function _Scheduler_receive(callback)
{
	return {
		$: 5,
		b: callback
	};
}


// PROCESSES

var _Scheduler_guid = 0;

function _Scheduler_rawSpawn(task)
{
	var proc = {
		$: 0,
		e: _Scheduler_guid++,
		f: task,
		g: null,
		h: []
	};

	_Scheduler_enqueue(proc);

	return proc;
}

function _Scheduler_spawn(task)
{
	return _Scheduler_binding(function(callback) {
		callback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));
	});
}

function _Scheduler_rawSend(proc, msg)
{
	proc.h.push(msg);
	_Scheduler_enqueue(proc);
}

var _Scheduler_send = F2(function(proc, msg)
{
	return _Scheduler_binding(function(callback) {
		_Scheduler_rawSend(proc, msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});

function _Scheduler_kill(proc)
{
	return _Scheduler_binding(function(callback) {
		var task = proc.f;
		if (task.$ === 2 && task.c)
		{
			task.c();
		}

		proc.f = null;

		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
}


/* STEP PROCESSES

type alias Process =
  { $ : tag
  , id : unique_id
  , root : Task
  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }
  , mailbox : [msg]
  }

*/


var _Scheduler_working = false;
var _Scheduler_queue = [];


function _Scheduler_enqueue(proc)
{
	_Scheduler_queue.push(proc);
	if (_Scheduler_working)
	{
		return;
	}
	_Scheduler_working = true;
	while (proc = _Scheduler_queue.shift())
	{
		_Scheduler_step(proc);
	}
	_Scheduler_working = false;
}


function _Scheduler_step(proc)
{
	while (proc.f)
	{
		var rootTag = proc.f.$;
		if (rootTag === 0 || rootTag === 1)
		{
			while (proc.g && proc.g.$ !== rootTag)
			{
				proc.g = proc.g.i;
			}
			if (!proc.g)
			{
				return;
			}
			proc.f = proc.g.b(proc.f.a);
			proc.g = proc.g.i;
		}
		else if (rootTag === 2)
		{
			proc.f.c = proc.f.b(function(newRoot) {
				proc.f = newRoot;
				_Scheduler_enqueue(proc);
			});
			return;
		}
		else if (rootTag === 5)
		{
			if (proc.h.length === 0)
			{
				return;
			}
			proc.f = proc.f.b(proc.h.shift());
		}
		else // if (rootTag === 3 || rootTag === 4)
		{
			proc.g = {
				$: rootTag === 3 ? 0 : 1,
				b: proc.f.b,
				i: proc.g
			};
			proc.f = proc.f.d;
		}
	}
}



function _Process_sleep(time)
{
	return _Scheduler_binding(function(callback) {
		var id = setTimeout(function() {
			callback(_Scheduler_succeed(_Utils_Tuple0));
		}, time);

		return function() { clearTimeout(id); };
	});
}




// PROGRAMS


var _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function() { return function() {} }
	);
});



// INITIALIZE A PROGRAM


function _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)
{
	var result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));
	$elm$core$Result$isOk(result) || _Debug_crash(2 /**/, _Json_errorToString(result.a) /**/);
	var managers = {};
	var initPair = init(result.a);
	var model = initPair.a;
	var stepper = stepperBuilder(sendToApp, model);
	var ports = _Platform_setupEffects(managers, sendToApp);

	function sendToApp(msg, viewMetadata)
	{
		var pair = A2(update, msg, model);
		stepper(model = pair.a, viewMetadata);
		_Platform_enqueueEffects(managers, pair.b, subscriptions(model));
	}

	_Platform_enqueueEffects(managers, initPair.b, subscriptions(model));

	return ports ? { ports: ports } : {};
}



// TRACK PRELOADS
//
// This is used by code in elm/browser and elm/http
// to register any HTTP requests that are triggered by init.
//


var _Platform_preload;


function _Platform_registerPreload(url)
{
	_Platform_preload.add(url);
}



// EFFECT MANAGERS


var _Platform_effectManagers = {};


function _Platform_setupEffects(managers, sendToApp)
{
	var ports;

	// setup all necessary effect managers
	for (var key in _Platform_effectManagers)
	{
		var manager = _Platform_effectManagers[key];

		if (manager.a)
		{
			ports = ports || {};
			ports[key] = manager.a(key, sendToApp);
		}

		managers[key] = _Platform_instantiateManager(manager, sendToApp);
	}

	return ports;
}


function _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)
{
	return {
		b: init,
		c: onEffects,
		d: onSelfMsg,
		e: cmdMap,
		f: subMap
	};
}


function _Platform_instantiateManager(info, sendToApp)
{
	var router = {
		g: sendToApp,
		h: undefined
	};

	var onEffects = info.c;
	var onSelfMsg = info.d;
	var cmdMap = info.e;
	var subMap = info.f;

	function loop(state)
	{
		return A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)
		{
			var value = msg.a;

			if (msg.$ === 0)
			{
				return A3(onSelfMsg, router, value, state);
			}

			return cmdMap && subMap
				? A4(onEffects, router, value.i, value.j, state)
				: A3(onEffects, router, cmdMap ? value.i : value.j, state);
		}));
	}

	return router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));
}



// ROUTING


var _Platform_sendToApp = F2(function(router, msg)
{
	return _Scheduler_binding(function(callback)
	{
		router.g(msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});


var _Platform_sendToSelf = F2(function(router, msg)
{
	return A2(_Scheduler_send, router.h, {
		$: 0,
		a: msg
	});
});



// BAGS


function _Platform_leaf(home)
{
	return function(value)
	{
		return {
			$: 1,
			k: home,
			l: value
		};
	};
}


function _Platform_batch(list)
{
	return {
		$: 2,
		m: list
	};
}


var _Platform_map = F2(function(tagger, bag)
{
	return {
		$: 3,
		n: tagger,
		o: bag
	}
});



// PIPE BAGS INTO EFFECT MANAGERS
//
// Effects must be queued!
//
// Say your init contains a synchronous command, like Time.now or Time.here
//
//   - This will produce a batch of effects (FX_1)
//   - The synchronous task triggers the subsequent `update` call
//   - This will produce a batch of effects (FX_2)
//
// If we just start dispatching FX_2, subscriptions from FX_2 can be processed
// before subscriptions from FX_1. No good! Earlier versions of this code had
// this problem, leading to these reports:
//
//   https://github.com/elm/core/issues/980
//   https://github.com/elm/core/pull/981
//   https://github.com/elm/compiler/issues/1776
//
// The queue is necessary to avoid ordering issues for synchronous commands.


// Why use true/false here? Why not just check the length of the queue?
// The goal is to detect "are we currently dispatching effects?" If we
// are, we need to bail and let the ongoing while loop handle things.
//
// Now say the queue has 1 element. When we dequeue the final element,
// the queue will be empty, but we are still actively dispatching effects.
// So you could get queue jumping in a really tricky category of cases.
//
var _Platform_effectsQueue = [];
var _Platform_effectsActive = false;


function _Platform_enqueueEffects(managers, cmdBag, subBag)
{
	_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });

	if (_Platform_effectsActive) return;

	_Platform_effectsActive = true;
	for (var fx; fx = _Platform_effectsQueue.shift(); )
	{
		_Platform_dispatchEffects(fx.p, fx.q, fx.r);
	}
	_Platform_effectsActive = false;
}


function _Platform_dispatchEffects(managers, cmdBag, subBag)
{
	var effectsDict = {};
	_Platform_gatherEffects(true, cmdBag, effectsDict, null);
	_Platform_gatherEffects(false, subBag, effectsDict, null);

	for (var home in managers)
	{
		_Scheduler_rawSend(managers[home], {
			$: 'fx',
			a: effectsDict[home] || { i: _List_Nil, j: _List_Nil }
		});
	}
}


function _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)
{
	switch (bag.$)
	{
		case 1:
			var home = bag.k;
			var effect = _Platform_toEffect(isCmd, home, taggers, bag.l);
			effectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);
			return;

		case 2:
			for (var list = bag.m; list.b; list = list.b) // WHILE_CONS
			{
				_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);
			}
			return;

		case 3:
			_Platform_gatherEffects(isCmd, bag.o, effectsDict, {
				s: bag.n,
				t: taggers
			});
			return;
	}
}


function _Platform_toEffect(isCmd, home, taggers, value)
{
	function applyTaggers(x)
	{
		for (var temp = taggers; temp; temp = temp.t)
		{
			x = temp.s(x);
		}
		return x;
	}

	var map = isCmd
		? _Platform_effectManagers[home].e
		: _Platform_effectManagers[home].f;

	return A2(map, applyTaggers, value)
}


function _Platform_insert(isCmd, newEffect, effects)
{
	effects = effects || { i: _List_Nil, j: _List_Nil };

	isCmd
		? (effects.i = _List_Cons(newEffect, effects.i))
		: (effects.j = _List_Cons(newEffect, effects.j));

	return effects;
}



// PORTS


function _Platform_checkPortName(name)
{
	if (_Platform_effectManagers[name])
	{
		_Debug_crash(3, name)
	}
}



// OUTGOING PORTS


function _Platform_outgoingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		e: _Platform_outgoingPortMap,
		u: converter,
		a: _Platform_setupOutgoingPort
	};
	return _Platform_leaf(name);
}


var _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });


function _Platform_setupOutgoingPort(name)
{
	var subs = [];
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Process_sleep(0);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, cmdList, state)
	{
		for ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS
		{
			// grab a separate reference to subs in case unsubscribe is called
			var currentSubs = subs;
			var value = _Json_unwrap(converter(cmdList.a));
			for (var i = 0; i < currentSubs.length; i++)
			{
				currentSubs[i](value);
			}
		}
		return init;
	});

	// PUBLIC API

	function subscribe(callback)
	{
		subs.push(callback);
	}

	function unsubscribe(callback)
	{
		// copy subs into a new array in case unsubscribe is called within a
		// subscribed callback
		subs = subs.slice();
		var index = subs.indexOf(callback);
		if (index >= 0)
		{
			subs.splice(index, 1);
		}
	}

	return {
		subscribe: subscribe,
		unsubscribe: unsubscribe
	};
}



// INCOMING PORTS


function _Platform_incomingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		f: _Platform_incomingPortMap,
		u: converter,
		a: _Platform_setupIncomingPort
	};
	return _Platform_leaf(name);
}


var _Platform_incomingPortMap = F2(function(tagger, finalTagger)
{
	return function(value)
	{
		return tagger(finalTagger(value));
	};
});


function _Platform_setupIncomingPort(name, sendToApp)
{
	var subs = _List_Nil;
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Scheduler_succeed(null);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, subList, state)
	{
		subs = subList;
		return init;
	});

	// PUBLIC API

	function send(incomingValue)
	{
		var result = A2(_Json_run, converter, _Json_wrap(incomingValue));

		$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);

		var value = result.a;
		for (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS
		{
			sendToApp(temp.a(value));
		}
	}

	return { send: send };
}



// EXPORT ELM MODULES
//
// Have DEBUG and PROD versions so that we can (1) give nicer errors in
// debug mode and (2) not pay for the bits needed for that in prod mode.
//


function _Platform_export_UNUSED(exports)
{
	scope['Elm']
		? _Platform_mergeExportsProd(scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsProd(obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6)
				: _Platform_mergeExportsProd(obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}


function _Platform_export(exports)
{
	scope['Elm']
		? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsDebug(moduleName, obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6, moduleName)
				: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}




// HELPERS


var _VirtualDom_divertHrefToApp;

var _VirtualDom_doc = typeof document !== 'undefined' ? document : {};


function _VirtualDom_appendChild(parent, child)
{
	parent.appendChild(child);
}

var _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)
{
	// NOTE: this function needs _Platform_export available to work

	/**_UNUSED/
	var node = args['node'];
	//*/
	/**/
	var node = args && args['node'] ? args['node'] : _Debug_crash(0);
	//*/

	node.parentNode.replaceChild(
		_VirtualDom_render(virtualNode, function() {}),
		node
	);

	return {};
});



// TEXT


function _VirtualDom_text(string)
{
	return {
		$: 0,
		a: string
	};
}



// NODE


var _VirtualDom_nodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 1,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_node = _VirtualDom_nodeNS(undefined);



// KEYED NODE


var _VirtualDom_keyedNodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 2,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);



// CUSTOM


function _VirtualDom_custom(factList, model, render, diff)
{
	return {
		$: 3,
		d: _VirtualDom_organizeFacts(factList),
		g: model,
		h: render,
		i: diff
	};
}



// MAP


var _VirtualDom_map = F2(function(tagger, node)
{
	return {
		$: 4,
		j: tagger,
		k: node,
		b: 1 + (node.b || 0)
	};
});



// LAZY


function _VirtualDom_thunk(refs, thunk)
{
	return {
		$: 5,
		l: refs,
		m: thunk,
		k: undefined
	};
}

var _VirtualDom_lazy = F2(function(func, a)
{
	return _VirtualDom_thunk([func, a], function() {
		return func(a);
	});
});

var _VirtualDom_lazy2 = F3(function(func, a, b)
{
	return _VirtualDom_thunk([func, a, b], function() {
		return A2(func, a, b);
	});
});

var _VirtualDom_lazy3 = F4(function(func, a, b, c)
{
	return _VirtualDom_thunk([func, a, b, c], function() {
		return A3(func, a, b, c);
	});
});

var _VirtualDom_lazy4 = F5(function(func, a, b, c, d)
{
	return _VirtualDom_thunk([func, a, b, c, d], function() {
		return A4(func, a, b, c, d);
	});
});

var _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)
{
	return _VirtualDom_thunk([func, a, b, c, d, e], function() {
		return A5(func, a, b, c, d, e);
	});
});

var _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f], function() {
		return A6(func, a, b, c, d, e, f);
	});
});

var _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {
		return A7(func, a, b, c, d, e, f, g);
	});
});

var _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {
		return A8(func, a, b, c, d, e, f, g, h);
	});
});



// FACTS


var _VirtualDom_on = F2(function(key, handler)
{
	return {
		$: 'a0',
		n: key,
		o: handler
	};
});
var _VirtualDom_style = F2(function(key, value)
{
	return {
		$: 'a1',
		n: key,
		o: value
	};
});
var _VirtualDom_property = F2(function(key, value)
{
	return {
		$: 'a2',
		n: key,
		o: value
	};
});
var _VirtualDom_attribute = F2(function(key, value)
{
	return {
		$: 'a3',
		n: key,
		o: value
	};
});
var _VirtualDom_attributeNS = F3(function(namespace, key, value)
{
	return {
		$: 'a4',
		n: key,
		o: { f: namespace, o: value }
	};
});



// XSS ATTACK VECTOR CHECKS


function _VirtualDom_noScript(tag)
{
	return tag == 'script' ? 'p' : tag;
}

function _VirtualDom_noOnOrFormAction(key)
{
	return /^(on|formAction$)/i.test(key) ? 'data-' + key : key;
}

function _VirtualDom_noInnerHtmlOrFormAction(key)
{
	return key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;
}

function _VirtualDom_noJavaScriptUri_UNUSED(value)
{
	return /^javascript:/i.test(value.replace(/\s/g,'')) ? '' : value;
}

function _VirtualDom_noJavaScriptUri(value)
{
	return /^javascript:/i.test(value.replace(/\s/g,''))
		? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'
		: value;
}

function _VirtualDom_noJavaScriptOrHtmlUri_UNUSED(value)
{
	return /^\s*(javascript:|data:text\/html)/i.test(value) ? '' : value;
}

function _VirtualDom_noJavaScriptOrHtmlUri(value)
{
	return /^\s*(javascript:|data:text\/html)/i.test(value)
		? 'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'
		: value;
}



// MAP FACTS


var _VirtualDom_mapAttribute = F2(function(func, attr)
{
	return (attr.$ === 'a0')
		? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))
		: attr;
});

function _VirtualDom_mapHandler(func, handler)
{
	var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

	// 0 = Normal
	// 1 = MayStopPropagation
	// 2 = MayPreventDefault
	// 3 = Custom

	return {
		$: handler.$,
		a:
			!tag
				? A2($elm$json$Json$Decode$map, func, handler.a)
				:
			A3($elm$json$Json$Decode$map2,
				tag < 3
					? _VirtualDom_mapEventTuple
					: _VirtualDom_mapEventRecord,
				$elm$json$Json$Decode$succeed(func),
				handler.a
			)
	};
}

var _VirtualDom_mapEventTuple = F2(function(func, tuple)
{
	return _Utils_Tuple2(func(tuple.a), tuple.b);
});

var _VirtualDom_mapEventRecord = F2(function(func, record)
{
	return {
		message: func(record.message),
		stopPropagation: record.stopPropagation,
		preventDefault: record.preventDefault
	}
});



// ORGANIZE FACTS


function _VirtualDom_organizeFacts(factList)
{
	for (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS
	{
		var entry = factList.a;

		var tag = entry.$;
		var key = entry.n;
		var value = entry.o;

		if (tag === 'a2')
		{
			(key === 'className')
				? _VirtualDom_addClass(facts, key, _Json_unwrap(value))
				: facts[key] = _Json_unwrap(value);

			continue;
		}

		var subFacts = facts[tag] || (facts[tag] = {});
		(tag === 'a3' && key === 'class')
			? _VirtualDom_addClass(subFacts, key, value)
			: subFacts[key] = value;
	}

	return facts;
}

function _VirtualDom_addClass(object, key, newClass)
{
	var classes = object[key];
	object[key] = classes ? classes + ' ' + newClass : newClass;
}



// RENDER


function _VirtualDom_render(vNode, eventNode)
{
	var tag = vNode.$;

	if (tag === 5)
	{
		return _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);
	}

	if (tag === 0)
	{
		return _VirtualDom_doc.createTextNode(vNode.a);
	}

	if (tag === 4)
	{
		var subNode = vNode.k;
		var tagger = vNode.j;

		while (subNode.$ === 4)
		{
			typeof tagger !== 'object'
				? tagger = [tagger, subNode.j]
				: tagger.push(subNode.j);

			subNode = subNode.k;
		}

		var subEventRoot = { j: tagger, p: eventNode };
		var domNode = _VirtualDom_render(subNode, subEventRoot);
		domNode.elm_event_node_ref = subEventRoot;
		return domNode;
	}

	if (tag === 3)
	{
		var domNode = vNode.h(vNode.g);
		_VirtualDom_applyFacts(domNode, eventNode, vNode.d);
		return domNode;
	}

	// at this point `tag` must be 1 or 2

	var domNode = vNode.f
		? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)
		: _VirtualDom_doc.createElement(vNode.c);

	if (_VirtualDom_divertHrefToApp && vNode.c == 'a')
	{
		domNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));
	}

	_VirtualDom_applyFacts(domNode, eventNode, vNode.d);

	for (var kids = vNode.e, i = 0; i < kids.length; i++)
	{
		_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));
	}

	return domNode;
}



// APPLY FACTS


function _VirtualDom_applyFacts(domNode, eventNode, facts)
{
	for (var key in facts)
	{
		var value = facts[key];

		key === 'a1'
			? _VirtualDom_applyStyles(domNode, value)
			:
		key === 'a0'
			? _VirtualDom_applyEvents(domNode, eventNode, value)
			:
		key === 'a3'
			? _VirtualDom_applyAttrs(domNode, value)
			:
		key === 'a4'
			? _VirtualDom_applyAttrsNS(domNode, value)
			:
		((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);
	}
}



// APPLY STYLES


function _VirtualDom_applyStyles(domNode, styles)
{
	var domNodeStyle = domNode.style;

	for (var key in styles)
	{
		domNodeStyle[key] = styles[key];
	}
}



// APPLY ATTRS


function _VirtualDom_applyAttrs(domNode, attrs)
{
	for (var key in attrs)
	{
		var value = attrs[key];
		typeof value !== 'undefined'
			? domNode.setAttribute(key, value)
			: domNode.removeAttribute(key);
	}
}



// APPLY NAMESPACED ATTRS


function _VirtualDom_applyAttrsNS(domNode, nsAttrs)
{
	for (var key in nsAttrs)
	{
		var pair = nsAttrs[key];
		var namespace = pair.f;
		var value = pair.o;

		typeof value !== 'undefined'
			? domNode.setAttributeNS(namespace, key, value)
			: domNode.removeAttributeNS(namespace, key);
	}
}



// APPLY EVENTS


function _VirtualDom_applyEvents(domNode, eventNode, events)
{
	var allCallbacks = domNode.elmFs || (domNode.elmFs = {});

	for (var key in events)
	{
		var newHandler = events[key];
		var oldCallback = allCallbacks[key];

		if (!newHandler)
		{
			domNode.removeEventListener(key, oldCallback);
			allCallbacks[key] = undefined;
			continue;
		}

		if (oldCallback)
		{
			var oldHandler = oldCallback.q;
			if (oldHandler.$ === newHandler.$)
			{
				oldCallback.q = newHandler;
				continue;
			}
			domNode.removeEventListener(key, oldCallback);
		}

		oldCallback = _VirtualDom_makeCallback(eventNode, newHandler);
		domNode.addEventListener(key, oldCallback,
			_VirtualDom_passiveSupported
			&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }
		);
		allCallbacks[key] = oldCallback;
	}
}



// PASSIVE EVENTS


var _VirtualDom_passiveSupported;

try
{
	window.addEventListener('t', null, Object.defineProperty({}, 'passive', {
		get: function() { _VirtualDom_passiveSupported = true; }
	}));
}
catch(e) {}



// EVENT HANDLERS


function _VirtualDom_makeCallback(eventNode, initialHandler)
{
	function callback(event)
	{
		var handler = callback.q;
		var result = _Json_runHelp(handler.a, event);

		if (!$elm$core$Result$isOk(result))
		{
			return;
		}

		var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

		// 0 = Normal
		// 1 = MayStopPropagation
		// 2 = MayPreventDefault
		// 3 = Custom

		var value = result.a;
		var message = !tag ? value : tag < 3 ? value.a : value.message;
		var stopPropagation = tag == 1 ? value.b : tag == 3 && value.stopPropagation;
		var currentEventNode = (
			stopPropagation && event.stopPropagation(),
			(tag == 2 ? value.b : tag == 3 && value.preventDefault) && event.preventDefault(),
			eventNode
		);
		var tagger;
		var i;
		while (tagger = currentEventNode.j)
		{
			if (typeof tagger == 'function')
			{
				message = tagger(message);
			}
			else
			{
				for (var i = tagger.length; i--; )
				{
					message = tagger[i](message);
				}
			}
			currentEventNode = currentEventNode.p;
		}
		currentEventNode(message, stopPropagation); // stopPropagation implies isSync
	}

	callback.q = initialHandler;

	return callback;
}

function _VirtualDom_equalEvents(x, y)
{
	return x.$ == y.$ && _Json_equality(x.a, y.a);
}



// DIFF


// TODO: Should we do patches like in iOS?
//
// type Patch
//   = At Int Patch
//   | Batch (List Patch)
//   | Change ...
//
// How could it not be better?
//
function _VirtualDom_diff(x, y)
{
	var patches = [];
	_VirtualDom_diffHelp(x, y, patches, 0);
	return patches;
}


function _VirtualDom_pushPatch(patches, type, index, data)
{
	var patch = {
		$: type,
		r: index,
		s: data,
		t: undefined,
		u: undefined
	};
	patches.push(patch);
	return patch;
}


function _VirtualDom_diffHelp(x, y, patches, index)
{
	if (x === y)
	{
		return;
	}

	var xType = x.$;
	var yType = y.$;

	// Bail if you run into different types of nodes. Implies that the
	// structure has changed significantly and it's not worth a diff.
	if (xType !== yType)
	{
		if (xType === 1 && yType === 2)
		{
			y = _VirtualDom_dekey(y);
			yType = 1;
		}
		else
		{
			_VirtualDom_pushPatch(patches, 0, index, y);
			return;
		}
	}

	// Now we know that both nodes are the same $.
	switch (yType)
	{
		case 5:
			var xRefs = x.l;
			var yRefs = y.l;
			var i = xRefs.length;
			var same = i === yRefs.length;
			while (same && i--)
			{
				same = xRefs[i] === yRefs[i];
			}
			if (same)
			{
				y.k = x.k;
				return;
			}
			y.k = y.m();
			var subPatches = [];
			_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);
			subPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);
			return;

		case 4:
			// gather nested taggers
			var xTaggers = x.j;
			var yTaggers = y.j;
			var nesting = false;

			var xSubNode = x.k;
			while (xSubNode.$ === 4)
			{
				nesting = true;

				typeof xTaggers !== 'object'
					? xTaggers = [xTaggers, xSubNode.j]
					: xTaggers.push(xSubNode.j);

				xSubNode = xSubNode.k;
			}

			var ySubNode = y.k;
			while (ySubNode.$ === 4)
			{
				nesting = true;

				typeof yTaggers !== 'object'
					? yTaggers = [yTaggers, ySubNode.j]
					: yTaggers.push(ySubNode.j);

				ySubNode = ySubNode.k;
			}

			// Just bail if different numbers of taggers. This implies the
			// structure of the virtual DOM has changed.
			if (nesting && xTaggers.length !== yTaggers.length)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			// check if taggers are "the same"
			if (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)
			{
				_VirtualDom_pushPatch(patches, 2, index, yTaggers);
			}

			// diff everything below the taggers
			_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);
			return;

		case 0:
			if (x.a !== y.a)
			{
				_VirtualDom_pushPatch(patches, 3, index, y.a);
			}
			return;

		case 1:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);
			return;

		case 2:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);
			return;

		case 3:
			if (x.h !== y.h)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
			factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

			var patch = y.i(x.g, y.g);
			patch && _VirtualDom_pushPatch(patches, 5, index, patch);

			return;
	}
}

// assumes the incoming arrays are the same length
function _VirtualDom_pairwiseRefEqual(as, bs)
{
	for (var i = 0; i < as.length; i++)
	{
		if (as[i] !== bs[i])
		{
			return false;
		}
	}

	return true;
}

function _VirtualDom_diffNodes(x, y, patches, index, diffKids)
{
	// Bail if obvious indicators have changed. Implies more serious
	// structural changes such that it's not worth it to diff.
	if (x.c !== y.c || x.f !== y.f)
	{
		_VirtualDom_pushPatch(patches, 0, index, y);
		return;
	}

	var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
	factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

	diffKids(x, y, patches, index);
}



// DIFF FACTS


// TODO Instead of creating a new diff object, it's possible to just test if
// there *is* a diff. During the actual patch, do the diff again and make the
// modifications directly. This way, there's no new allocations. Worth it?
function _VirtualDom_diffFacts(x, y, category)
{
	var diff;

	// look for changes and removals
	for (var xKey in x)
	{
		if (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')
		{
			var subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);
			if (subDiff)
			{
				diff = diff || {};
				diff[xKey] = subDiff;
			}
			continue;
		}

		// remove if not in the new facts
		if (!(xKey in y))
		{
			diff = diff || {};
			diff[xKey] =
				!category
					? (typeof x[xKey] === 'string' ? '' : null)
					:
				(category === 'a1')
					? ''
					:
				(category === 'a0' || category === 'a3')
					? undefined
					:
				{ f: x[xKey].f, o: undefined };

			continue;
		}

		var xValue = x[xKey];
		var yValue = y[xKey];

		// reference equal, so don't worry about it
		if (xValue === yValue && xKey !== 'value' && xKey !== 'checked'
			|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))
		{
			continue;
		}

		diff = diff || {};
		diff[xKey] = yValue;
	}

	// add new stuff
	for (var yKey in y)
	{
		if (!(yKey in x))
		{
			diff = diff || {};
			diff[yKey] = y[yKey];
		}
	}

	return diff;
}



// DIFF KIDS


function _VirtualDom_diffKids(xParent, yParent, patches, index)
{
	var xKids = xParent.e;
	var yKids = yParent.e;

	var xLen = xKids.length;
	var yLen = yKids.length;

	// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS

	if (xLen > yLen)
	{
		_VirtualDom_pushPatch(patches, 6, index, {
			v: yLen,
			i: xLen - yLen
		});
	}
	else if (xLen < yLen)
	{
		_VirtualDom_pushPatch(patches, 7, index, {
			v: xLen,
			e: yKids
		});
	}

	// PAIRWISE DIFF EVERYTHING ELSE

	for (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)
	{
		var xKid = xKids[i];
		_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);
		index += xKid.b || 0;
	}
}



// KEYED DIFF


function _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)
{
	var localPatches = [];

	var changes = {}; // Dict String Entry
	var inserts = []; // Array { index : Int, entry : Entry }
	// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }

	var xKids = xParent.e;
	var yKids = yParent.e;
	var xLen = xKids.length;
	var yLen = yKids.length;
	var xIndex = 0;
	var yIndex = 0;

	var index = rootIndex;

	while (xIndex < xLen && yIndex < yLen)
	{
		var x = xKids[xIndex];
		var y = yKids[yIndex];

		var xKey = x.a;
		var yKey = y.a;
		var xNode = x.b;
		var yNode = y.b;

		var newMatch = undefined;
		var oldMatch = undefined;

		// check if keys match

		if (xKey === yKey)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNode, localPatches, index);
			index += xNode.b || 0;

			xIndex++;
			yIndex++;
			continue;
		}

		// look ahead 1 to detect insertions and removals.

		var xNext = xKids[xIndex + 1];
		var yNext = yKids[yIndex + 1];

		if (xNext)
		{
			var xNextKey = xNext.a;
			var xNextNode = xNext.b;
			oldMatch = yKey === xNextKey;
		}

		if (yNext)
		{
			var yNextKey = yNext.a;
			var yNextNode = yNext.b;
			newMatch = xKey === yNextKey;
		}


		// swap x and y
		if (newMatch && oldMatch)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		// insert y
		if (newMatch)
		{
			index++;
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			index += xNode.b || 0;

			xIndex += 1;
			yIndex += 2;
			continue;
		}

		// remove x
		if (oldMatch)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 1;
			continue;
		}

		// remove x, insert y
		if (xNext && xNextKey === yNextKey)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		break;
	}

	// eat up any remaining nodes with removeNode and insertNode

	while (xIndex < xLen)
	{
		index++;
		var x = xKids[xIndex];
		var xNode = x.b;
		_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);
		index += xNode.b || 0;
		xIndex++;
	}

	while (yIndex < yLen)
	{
		var endInserts = endInserts || [];
		var y = yKids[yIndex];
		_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);
		yIndex++;
	}

	if (localPatches.length > 0 || inserts.length > 0 || endInserts)
	{
		_VirtualDom_pushPatch(patches, 8, rootIndex, {
			w: localPatches,
			x: inserts,
			y: endInserts
		});
	}
}



// CHANGES FROM KEYED DIFF


var _VirtualDom_POSTFIX = '_elmW6BL';


function _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		entry = {
			c: 0,
			z: vnode,
			r: yIndex,
			s: undefined
		};

		inserts.push({ r: yIndex, A: entry });
		changes[key] = entry;

		return;
	}

	// this key was removed earlier, a match!
	if (entry.c === 1)
	{
		inserts.push({ r: yIndex, A: entry });

		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);
		entry.r = yIndex;
		entry.s.s = {
			w: subPatches,
			A: entry
		};

		return;
	}

	// this key has already been inserted or moved, a duplicate!
	_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);
}


function _VirtualDom_removeNode(changes, localPatches, key, vnode, index)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		var patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);

		changes[key] = {
			c: 1,
			z: vnode,
			r: index,
			s: patch
		};

		return;
	}

	// this key was inserted earlier, a match!
	if (entry.c === 0)
	{
		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);

		_VirtualDom_pushPatch(localPatches, 9, index, {
			w: subPatches,
			A: entry
		});

		return;
	}

	// this key has already been removed or moved, a duplicate!
	_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);
}



// ADD DOM NODES
//
// Each DOM node has an "index" assigned in order of traversal. It is important
// to minimize our crawl over the actual DOM, so these indexes (along with the
// descendantsCount of virtual nodes) let us skip touching entire subtrees of
// the DOM if we know there are no patches there.


function _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)
{
	_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);
}


// assumes `patches` is non-empty and indexes increase monotonically.
function _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)
{
	var patch = patches[i];
	var index = patch.r;

	while (index === low)
	{
		var patchType = patch.$;

		if (patchType === 1)
		{
			_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);
		}
		else if (patchType === 8)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var subPatches = patch.s.w;
			if (subPatches.length > 0)
			{
				_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
			}
		}
		else if (patchType === 9)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var data = patch.s;
			if (data)
			{
				data.A.s = domNode;
				var subPatches = data.w;
				if (subPatches.length > 0)
				{
					_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
				}
			}
		}
		else
		{
			patch.t = domNode;
			patch.u = eventNode;
		}

		i++;

		if (!(patch = patches[i]) || (index = patch.r) > high)
		{
			return i;
		}
	}

	var tag = vNode.$;

	if (tag === 4)
	{
		var subNode = vNode.k;

		while (subNode.$ === 4)
		{
			subNode = subNode.k;
		}

		return _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);
	}

	// tag must be 1 or 2 at this point

	var vKids = vNode.e;
	var childNodes = domNode.childNodes;
	for (var j = 0; j < vKids.length; j++)
	{
		low++;
		var vKid = tag === 1 ? vKids[j] : vKids[j].b;
		var nextLow = low + (vKid.b || 0);
		if (low <= index && index <= nextLow)
		{
			i = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);
			if (!(patch = patches[i]) || (index = patch.r) > high)
			{
				return i;
			}
		}
		low = nextLow;
	}
	return i;
}



// APPLY PATCHES


function _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)
{
	if (patches.length === 0)
	{
		return rootDomNode;
	}

	_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);
	return _VirtualDom_applyPatchesHelp(rootDomNode, patches);
}

function _VirtualDom_applyPatchesHelp(rootDomNode, patches)
{
	for (var i = 0; i < patches.length; i++)
	{
		var patch = patches[i];
		var localDomNode = patch.t
		var newNode = _VirtualDom_applyPatch(localDomNode, patch);
		if (localDomNode === rootDomNode)
		{
			rootDomNode = newNode;
		}
	}
	return rootDomNode;
}

function _VirtualDom_applyPatch(domNode, patch)
{
	switch (patch.$)
	{
		case 0:
			return _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);

		case 4:
			_VirtualDom_applyFacts(domNode, patch.u, patch.s);
			return domNode;

		case 3:
			domNode.replaceData(0, domNode.length, patch.s);
			return domNode;

		case 1:
			return _VirtualDom_applyPatchesHelp(domNode, patch.s);

		case 2:
			if (domNode.elm_event_node_ref)
			{
				domNode.elm_event_node_ref.j = patch.s;
			}
			else
			{
				domNode.elm_event_node_ref = { j: patch.s, p: patch.u };
			}
			return domNode;

		case 6:
			var data = patch.s;
			for (var i = 0; i < data.i; i++)
			{
				domNode.removeChild(domNode.childNodes[data.v]);
			}
			return domNode;

		case 7:
			var data = patch.s;
			var kids = data.e;
			var i = data.v;
			var theEnd = domNode.childNodes[i];
			for (; i < kids.length; i++)
			{
				domNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);
			}
			return domNode;

		case 9:
			var data = patch.s;
			if (!data)
			{
				domNode.parentNode.removeChild(domNode);
				return domNode;
			}
			var entry = data.A;
			if (typeof entry.r !== 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
			}
			entry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);
			return domNode;

		case 8:
			return _VirtualDom_applyPatchReorder(domNode, patch);

		case 5:
			return patch.s(domNode);

		default:
			_Debug_crash(10); // 'Ran into an unknown patch!'
	}
}


function _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)
{
	var parentNode = domNode.parentNode;
	var newNode = _VirtualDom_render(vNode, eventNode);

	if (!newNode.elm_event_node_ref)
	{
		newNode.elm_event_node_ref = domNode.elm_event_node_ref;
	}

	if (parentNode && newNode !== domNode)
	{
		parentNode.replaceChild(newNode, domNode);
	}
	return newNode;
}


function _VirtualDom_applyPatchReorder(domNode, patch)
{
	var data = patch.s;

	// remove end inserts
	var frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);

	// removals
	domNode = _VirtualDom_applyPatchesHelp(domNode, data.w);

	// inserts
	var inserts = data.x;
	for (var i = 0; i < inserts.length; i++)
	{
		var insert = inserts[i];
		var entry = insert.A;
		var node = entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u);
		domNode.insertBefore(node, domNode.childNodes[insert.r]);
	}

	// add end inserts
	if (frag)
	{
		_VirtualDom_appendChild(domNode, frag);
	}

	return domNode;
}


function _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)
{
	if (!endInserts)
	{
		return;
	}

	var frag = _VirtualDom_doc.createDocumentFragment();
	for (var i = 0; i < endInserts.length; i++)
	{
		var insert = endInserts[i];
		var entry = insert.A;
		_VirtualDom_appendChild(frag, entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u)
		);
	}
	return frag;
}


function _VirtualDom_virtualize(node)
{
	// TEXT NODES

	if (node.nodeType === 3)
	{
		return _VirtualDom_text(node.textContent);
	}


	// WEIRD NODES

	if (node.nodeType !== 1)
	{
		return _VirtualDom_text('');
	}


	// ELEMENT NODES

	var attrList = _List_Nil;
	var attrs = node.attributes;
	for (var i = attrs.length; i--; )
	{
		var attr = attrs[i];
		var name = attr.name;
		var value = attr.value;
		attrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );
	}

	var tag = node.tagName.toLowerCase();
	var kidList = _List_Nil;
	var kids = node.childNodes;

	for (var i = kids.length; i--; )
	{
		kidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);
	}
	return A3(_VirtualDom_node, tag, attrList, kidList);
}

function _VirtualDom_dekey(keyedNode)
{
	var keyedKids = keyedNode.e;
	var len = keyedKids.length;
	var kids = new Array(len);
	for (var i = 0; i < len; i++)
	{
		kids[i] = keyedKids[i].b;
	}

	return {
		$: 1,
		c: keyedNode.c,
		d: keyedNode.d,
		e: kids,
		f: keyedNode.f,
		b: keyedNode.b
	};
}




// ELEMENT


var _Debugger_element;

var _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function(sendToApp, initialModel) {
			var view = impl.view;
			/**_UNUSED/
			var domNode = args['node'];
			//*/
			/**/
			var domNode = args && args['node'] ? args['node'] : _Debug_crash(0);
			//*/
			var currNode = _VirtualDom_virtualize(domNode);

			return _Browser_makeAnimator(initialModel, function(model)
			{
				var nextNode = view(model);
				var patches = _VirtualDom_diff(currNode, nextNode);
				domNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);
				currNode = nextNode;
			});
		}
	);
});



// DOCUMENT


var _Debugger_document;

var _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function(sendToApp, initialModel) {
			var divertHrefToApp = impl.setup && impl.setup(sendToApp)
			var view = impl.view;
			var title = _VirtualDom_doc.title;
			var bodyNode = _VirtualDom_doc.body;
			var currNode = _VirtualDom_virtualize(bodyNode);
			return _Browser_makeAnimator(initialModel, function(model)
			{
				_VirtualDom_divertHrefToApp = divertHrefToApp;
				var doc = view(model);
				var nextNode = _VirtualDom_node('body')(_List_Nil)(doc.body);
				var patches = _VirtualDom_diff(currNode, nextNode);
				bodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);
				currNode = nextNode;
				_VirtualDom_divertHrefToApp = 0;
				(title !== doc.title) && (_VirtualDom_doc.title = title = doc.title);
			});
		}
	);
});



// ANIMATION


var _Browser_cancelAnimationFrame =
	typeof cancelAnimationFrame !== 'undefined'
		? cancelAnimationFrame
		: function(id) { clearTimeout(id); };

var _Browser_requestAnimationFrame =
	typeof requestAnimationFrame !== 'undefined'
		? requestAnimationFrame
		: function(callback) { return setTimeout(callback, 1000 / 60); };


function _Browser_makeAnimator(model, draw)
{
	draw(model);

	var state = 0;

	function updateIfNeeded()
	{
		state = state === 1
			? 0
			: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );
	}

	return function(nextModel, isSync)
	{
		model = nextModel;

		isSync
			? ( draw(model),
				state === 2 && (state = 1)
				)
			: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),
				state = 2
				);
	};
}



// APPLICATION


function _Browser_application(impl)
{
	var onUrlChange = impl.onUrlChange;
	var onUrlRequest = impl.onUrlRequest;
	var key = function() { key.a(onUrlChange(_Browser_getUrl())); };

	return _Browser_document({
		setup: function(sendToApp)
		{
			key.a = sendToApp;
			_Browser_window.addEventListener('popstate', key);
			_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);

			return F2(function(domNode, event)
			{
				if (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))
				{
					event.preventDefault();
					var href = domNode.href;
					var curr = _Browser_getUrl();
					var next = $elm$url$Url$fromString(href).a;
					sendToApp(onUrlRequest(
						(next
							&& curr.protocol === next.protocol
							&& curr.host === next.host
							&& curr.port_.a === next.port_.a
						)
							? $elm$browser$Browser$Internal(next)
							: $elm$browser$Browser$External(href)
					));
				}
			});
		},
		init: function(flags)
		{
			return A3(impl.init, flags, _Browser_getUrl(), key);
		},
		view: impl.view,
		update: impl.update,
		subscriptions: impl.subscriptions
	});
}

function _Browser_getUrl()
{
	return $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);
}

var _Browser_go = F2(function(key, n)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		n && history.go(n);
		key();
	}));
});

var _Browser_pushUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.pushState({}, '', url);
		key();
	}));
});

var _Browser_replaceUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.replaceState({}, '', url);
		key();
	}));
});



// GLOBAL EVENTS


var _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };
var _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;
var _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;

var _Browser_on = F3(function(node, eventName, sendToSelf)
{
	return _Scheduler_spawn(_Scheduler_binding(function(callback)
	{
		function handler(event)	{ _Scheduler_rawSpawn(sendToSelf(event)); }
		node.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });
		return function() { node.removeEventListener(eventName, handler); };
	}));
});

var _Browser_decodeEvent = F2(function(decoder, event)
{
	var result = _Json_runHelp(decoder, event);
	return $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;
});



// PAGE VISIBILITY


function _Browser_visibilityInfo()
{
	return (typeof _VirtualDom_doc.hidden !== 'undefined')
		? { hidden: 'hidden', change: 'visibilitychange' }
		:
	(typeof _VirtualDom_doc.mozHidden !== 'undefined')
		? { hidden: 'mozHidden', change: 'mozvisibilitychange' }
		:
	(typeof _VirtualDom_doc.msHidden !== 'undefined')
		? { hidden: 'msHidden', change: 'msvisibilitychange' }
		:
	(typeof _VirtualDom_doc.webkitHidden !== 'undefined')
		? { hidden: 'webkitHidden', change: 'webkitvisibilitychange' }
		: { hidden: 'hidden', change: 'visibilitychange' };
}



// ANIMATION FRAMES


function _Browser_rAF()
{
	return _Scheduler_binding(function(callback)
	{
		var id = _Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(Date.now()));
		});

		return function() {
			_Browser_cancelAnimationFrame(id);
		};
	});
}


function _Browser_now()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(Date.now()));
	});
}



// DOM STUFF


function _Browser_withNode(id, doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			var node = document.getElementById(id);
			callback(node
				? _Scheduler_succeed(doStuff(node))
				: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))
			);
		});
	});
}


function _Browser_withWindow(doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(doStuff()));
		});
	});
}


// FOCUS and BLUR


var _Browser_call = F2(function(functionName, id)
{
	return _Browser_withNode(id, function(node) {
		node[functionName]();
		return _Utils_Tuple0;
	});
});



// WINDOW VIEWPORT


function _Browser_getViewport()
{
	return {
		scene: _Browser_getScene(),
		viewport: {
			x: _Browser_window.pageXOffset,
			y: _Browser_window.pageYOffset,
			width: _Browser_doc.documentElement.clientWidth,
			height: _Browser_doc.documentElement.clientHeight
		}
	};
}

function _Browser_getScene()
{
	var body = _Browser_doc.body;
	var elem = _Browser_doc.documentElement;
	return {
		width: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),
		height: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)
	};
}

var _Browser_setViewport = F2(function(x, y)
{
	return _Browser_withWindow(function()
	{
		_Browser_window.scroll(x, y);
		return _Utils_Tuple0;
	});
});



// ELEMENT VIEWPORT


function _Browser_getViewportOf(id)
{
	return _Browser_withNode(id, function(node)
	{
		return {
			scene: {
				width: node.scrollWidth,
				height: node.scrollHeight
			},
			viewport: {
				x: node.scrollLeft,
				y: node.scrollTop,
				width: node.clientWidth,
				height: node.clientHeight
			}
		};
	});
}


var _Browser_setViewportOf = F3(function(id, x, y)
{
	return _Browser_withNode(id, function(node)
	{
		node.scrollLeft = x;
		node.scrollTop = y;
		return _Utils_Tuple0;
	});
});



// ELEMENT


function _Browser_getElement(id)
{
	return _Browser_withNode(id, function(node)
	{
		var rect = node.getBoundingClientRect();
		var x = _Browser_window.pageXOffset;
		var y = _Browser_window.pageYOffset;
		return {
			scene: _Browser_getScene(),
			viewport: {
				x: x,
				y: y,
				width: _Browser_doc.documentElement.clientWidth,
				height: _Browser_doc.documentElement.clientHeight
			},
			element: {
				x: x + rect.left,
				y: y + rect.top,
				width: rect.width,
				height: rect.height
			}
		};
	});
}



// LOAD and RELOAD


function _Browser_reload(skipCache)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		_VirtualDom_doc.location.reload(skipCache);
	}));
}

function _Browser_load(url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		try
		{
			_Browser_window.location = url;
		}
		catch(err)
		{
			// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.
			// Other browsers reload the page, so let's be consistent about that.
			_VirtualDom_doc.location.reload(false);
		}
	}));
}


function _Url_percentEncode(string)
{
	return encodeURIComponent(string);
}

function _Url_percentDecode(string)
{
	try
	{
		return $elm$core$Maybe$Just(decodeURIComponent(string));
	}
	catch (e)
	{
		return $elm$core$Maybe$Nothing;
	}
}


// SEND REQUEST

var _Http_toTask = F3(function(router, toTask, request)
{
	return _Scheduler_binding(function(callback)
	{
		function done(response) {
			callback(toTask(request.expect.a(response)));
		}

		var xhr = new XMLHttpRequest();
		xhr.addEventListener('error', function() { done($elm$http$Http$NetworkError_); });
		xhr.addEventListener('timeout', function() { done($elm$http$Http$Timeout_); });
		xhr.addEventListener('load', function() { done(_Http_toResponse(request.expect.b, xhr)); });
		$elm$core$Maybe$isJust(request.tracker) && _Http_track(router, xhr, request.tracker.a);

		try {
			xhr.open(request.method, request.url, true);
		} catch (e) {
			return done($elm$http$Http$BadUrl_(request.url));
		}

		_Http_configureRequest(xhr, request);

		request.body.a && xhr.setRequestHeader('Content-Type', request.body.a);
		xhr.send(request.body.b);

		return function() { xhr.c = true; xhr.abort(); };
	});
});


// CONFIGURE

function _Http_configureRequest(xhr, request)
{
	for (var headers = request.headers; headers.b; headers = headers.b) // WHILE_CONS
	{
		xhr.setRequestHeader(headers.a.a, headers.a.b);
	}
	xhr.timeout = request.timeout.a || 0;
	xhr.responseType = request.expect.d;
	xhr.withCredentials = request.allowCookiesFromOtherDomains;
}


// RESPONSES

function _Http_toResponse(toBody, xhr)
{
	return A2(
		200 <= xhr.status && xhr.status < 300 ? $elm$http$Http$GoodStatus_ : $elm$http$Http$BadStatus_,
		_Http_toMetadata(xhr),
		toBody(xhr.response)
	);
}


// METADATA

function _Http_toMetadata(xhr)
{
	return {
		url: xhr.responseURL,
		statusCode: xhr.status,
		statusText: xhr.statusText,
		headers: _Http_parseHeaders(xhr.getAllResponseHeaders())
	};
}


// HEADERS

function _Http_parseHeaders(rawHeaders)
{
	if (!rawHeaders)
	{
		return $elm$core$Dict$empty;
	}

	var headers = $elm$core$Dict$empty;
	var headerPairs = rawHeaders.split('\r\n');
	for (var i = headerPairs.length; i--; )
	{
		var headerPair = headerPairs[i];
		var index = headerPair.indexOf(': ');
		if (index > 0)
		{
			var key = headerPair.substring(0, index);
			var value = headerPair.substring(index + 2);

			headers = A3($elm$core$Dict$update, key, function(oldValue) {
				return $elm$core$Maybe$Just($elm$core$Maybe$isJust(oldValue)
					? value + ', ' + oldValue.a
					: value
				);
			}, headers);
		}
	}
	return headers;
}


// EXPECT

var _Http_expect = F3(function(type, toBody, toValue)
{
	return {
		$: 0,
		d: type,
		b: toBody,
		a: toValue
	};
});

var _Http_mapExpect = F2(function(func, expect)
{
	return {
		$: 0,
		d: expect.d,
		b: expect.b,
		a: function(x) { return func(expect.a(x)); }
	};
});

function _Http_toDataView(arrayBuffer)
{
	return new DataView(arrayBuffer);
}


// BODY and PARTS

var _Http_emptyBody = { $: 0 };
var _Http_pair = F2(function(a, b) { return { $: 0, a: a, b: b }; });

function _Http_toFormData(parts)
{
	for (var formData = new FormData(); parts.b; parts = parts.b) // WHILE_CONS
	{
		var part = parts.a;
		formData.append(part.a, part.b);
	}
	return formData;
}

var _Http_bytesToBlob = F2(function(mime, bytes)
{
	return new Blob([bytes], { type: mime });
});


// PROGRESS

function _Http_track(router, xhr, tracker)
{
	// TODO check out lengthComputable on loadstart event

	xhr.upload.addEventListener('progress', function(event) {
		if (xhr.c) { return; }
		_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Sending({
			sent: event.loaded,
			size: event.total
		}))));
	});
	xhr.addEventListener('progress', function(event) {
		if (xhr.c) { return; }
		_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Receiving({
			received: event.loaded,
			size: event.lengthComputable ? $elm$core$Maybe$Just(event.total) : $elm$core$Maybe$Nothing
		}))));
	});
}


function _Time_now(millisToPosix)
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(millisToPosix(Date.now())));
	});
}

var _Time_setInterval = F2(function(interval, task)
{
	return _Scheduler_binding(function(callback)
	{
		var id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);
		return function() { clearInterval(id); };
	});
});

function _Time_here()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(
			A2($elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)
		));
	});
}


function _Time_getZoneName()
{
	return _Scheduler_binding(function(callback)
	{
		try
		{
			var name = $elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);
		}
		catch (e)
		{
			var name = $elm$time$Time$Offset(new Date().getTimezoneOffset());
		}
		callback(_Scheduler_succeed(name));
	});
}



var _Bitwise_and = F2(function(a, b)
{
	return a & b;
});

var _Bitwise_or = F2(function(a, b)
{
	return a | b;
});

var _Bitwise_xor = F2(function(a, b)
{
	return a ^ b;
});

function _Bitwise_complement(a)
{
	return ~a;
};

var _Bitwise_shiftLeftBy = F2(function(offset, a)
{
	return a << offset;
});

var _Bitwise_shiftRightBy = F2(function(offset, a)
{
	return a >> offset;
});

var _Bitwise_shiftRightZfBy = F2(function(offset, a)
{
	return a >>> offset;
});



// DECODER

var _File_decoder = _Json_decodePrim(function(value) {
	// NOTE: checks if `File` exists in case this is run on node
	return (typeof File !== 'undefined' && value instanceof File)
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a FILE', value);
});


// METADATA

function _File_name(file) { return file.name; }
function _File_mime(file) { return file.type; }
function _File_size(file) { return file.size; }

function _File_lastModified(file)
{
	return $elm$time$Time$millisToPosix(file.lastModified);
}


// DOWNLOAD

var _File_downloadNode;

function _File_getDownloadNode()
{
	return _File_downloadNode || (_File_downloadNode = document.createElement('a'));
}

var _File_download = F3(function(name, mime, content)
{
	return _Scheduler_binding(function(callback)
	{
		var blob = new Blob([content], {type: mime});

		// for IE10+
		if (navigator.msSaveOrOpenBlob)
		{
			navigator.msSaveOrOpenBlob(blob, name);
			return;
		}

		// for HTML5
		var node = _File_getDownloadNode();
		var objectUrl = URL.createObjectURL(blob);
		node.href = objectUrl;
		node.download = name;
		_File_click(node);
		URL.revokeObjectURL(objectUrl);
	});
});

function _File_downloadUrl(href)
{
	return _Scheduler_binding(function(callback)
	{
		var node = _File_getDownloadNode();
		node.href = href;
		node.download = '';
		node.origin === location.origin || (node.target = '_blank');
		_File_click(node);
	});
}


// IE COMPATIBILITY

function _File_makeBytesSafeForInternetExplorer(bytes)
{
	// only needed by IE10 and IE11 to fix https://github.com/elm/file/issues/10
	// all other browsers can just run `new Blob([bytes])` directly with no problem
	//
	return new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);
}

function _File_click(node)
{
	// only needed by IE10 and IE11 to fix https://github.com/elm/file/issues/11
	// all other browsers have MouseEvent and do not need this conditional stuff
	//
	if (typeof MouseEvent === 'function')
	{
		node.dispatchEvent(new MouseEvent('click'));
	}
	else
	{
		var event = document.createEvent('MouseEvents');
		event.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
		document.body.appendChild(node);
		node.dispatchEvent(event);
		document.body.removeChild(node);
	}
}


// UPLOAD

var _File_node;

function _File_uploadOne(mimes)
{
	return _Scheduler_binding(function(callback)
	{
		_File_node = document.createElement('input');
		_File_node.type = 'file';
		_File_node.accept = A2($elm$core$String$join, ',', mimes);
		_File_node.addEventListener('change', function(event)
		{
			callback(_Scheduler_succeed(event.target.files[0]));
		});
		_File_click(_File_node);
	});
}

function _File_uploadOneOrMore(mimes)
{
	return _Scheduler_binding(function(callback)
	{
		_File_node = document.createElement('input');
		_File_node.type = 'file';
		_File_node.multiple = true;
		_File_node.accept = A2($elm$core$String$join, ',', mimes);
		_File_node.addEventListener('change', function(event)
		{
			var elmFiles = _List_fromArray(event.target.files);
			callback(_Scheduler_succeed(_Utils_Tuple2(elmFiles.a, elmFiles.b)));
		});
		_File_click(_File_node);
	});
}


// CONTENT

function _File_toString(blob)
{
	return _Scheduler_binding(function(callback)
	{
		var reader = new FileReader();
		reader.addEventListener('loadend', function() {
			callback(_Scheduler_succeed(reader.result));
		});
		reader.readAsText(blob);
		return function() { reader.abort(); };
	});
}

function _File_toBytes(blob)
{
	return _Scheduler_binding(function(callback)
	{
		var reader = new FileReader();
		reader.addEventListener('loadend', function() {
			callback(_Scheduler_succeed(new DataView(reader.result)));
		});
		reader.readAsArrayBuffer(blob);
		return function() { reader.abort(); };
	});
}

function _File_toUrl(blob)
{
	return _Scheduler_binding(function(callback)
	{
		var reader = new FileReader();
		reader.addEventListener('loadend', function() {
			callback(_Scheduler_succeed(reader.result));
		});
		reader.readAsDataURL(blob);
		return function() { reader.abort(); };
	});
}



// CREATE

var _Regex_never = /.^/;

var _Regex_fromStringWith = F2(function(options, string)
{
	var flags = 'g';
	if (options.multiline) { flags += 'm'; }
	if (options.caseInsensitive) { flags += 'i'; }

	try
	{
		return $elm$core$Maybe$Just(new RegExp(string, flags));
	}
	catch(error)
	{
		return $elm$core$Maybe$Nothing;
	}
});


// USE

var _Regex_contains = F2(function(re, string)
{
	return string.match(re) !== null;
});


var _Regex_findAtMost = F3(function(n, re, str)
{
	var out = [];
	var number = 0;
	var string = str;
	var lastIndex = re.lastIndex;
	var prevLastIndex = -1;
	var result;
	while (number++ < n && (result = re.exec(string)))
	{
		if (prevLastIndex == re.lastIndex) break;
		var i = result.length - 1;
		var subs = new Array(i);
		while (i > 0)
		{
			var submatch = result[i];
			subs[--i] = submatch
				? $elm$core$Maybe$Just(submatch)
				: $elm$core$Maybe$Nothing;
		}
		out.push(A4($elm$regex$Regex$Match, result[0], result.index, number, _List_fromArray(subs)));
		prevLastIndex = re.lastIndex;
	}
	re.lastIndex = lastIndex;
	return _List_fromArray(out);
});


var _Regex_replaceAtMost = F4(function(n, re, replacer, string)
{
	var count = 0;
	function jsReplacer(match)
	{
		if (count++ >= n)
		{
			return match;
		}
		var i = arguments.length - 3;
		var submatches = new Array(i);
		while (i > 0)
		{
			var submatch = arguments[i];
			submatches[--i] = submatch
				? $elm$core$Maybe$Just(submatch)
				: $elm$core$Maybe$Nothing;
		}
		return replacer(A4($elm$regex$Regex$Match, match, arguments[arguments.length - 2], count, _List_fromArray(submatches)));
	}
	return string.replace(re, jsReplacer);
});

var _Regex_splitAtMost = F3(function(n, re, str)
{
	var string = str;
	var out = [];
	var start = re.lastIndex;
	var restoreLastIndex = re.lastIndex;
	while (n--)
	{
		var result = re.exec(string);
		if (!result) break;
		out.push(string.slice(start, result.index));
		start = re.lastIndex;
	}
	out.push(string.slice(start));
	re.lastIndex = restoreLastIndex;
	return _List_fromArray(out);
});

var _Regex_infinity = Infinity;
var $author$project$Main$ChangedUrl = function (a) {
	return {$: 'ChangedUrl', a: a};
};
var $author$project$Main$ClickedLink = function (a) {
	return {$: 'ClickedLink', a: a};
};
var $elm$core$List$cons = _List_cons;
var $elm$core$Elm$JsArray$foldr = _JsArray_foldr;
var $elm$core$Array$foldr = F3(
	function (func, baseCase, _v0) {
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = F2(
			function (node, acc) {
				if (node.$ === 'SubTree') {
					var subTree = node.a;
					return A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);
				} else {
					var values = node.a;
					return A3($elm$core$Elm$JsArray$foldr, func, acc, values);
				}
			});
		return A3(
			$elm$core$Elm$JsArray$foldr,
			helper,
			A3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),
			tree);
	});
var $elm$core$Array$toList = function (array) {
	return A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);
};
var $elm$core$Dict$foldr = F3(
	function (func, acc, t) {
		foldr:
		while (true) {
			if (t.$ === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var key = t.b;
				var value = t.c;
				var left = t.d;
				var right = t.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldr, func, acc, right)),
					$temp$t = left;
				func = $temp$func;
				acc = $temp$acc;
				t = $temp$t;
				continue foldr;
			}
		}
	});
var $elm$core$Dict$toList = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, list) {
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2(key, value),
					list);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Dict$keys = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, keyList) {
				return A2($elm$core$List$cons, key, keyList);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Set$toList = function (_v0) {
	var dict = _v0.a;
	return $elm$core$Dict$keys(dict);
};
var $elm$core$Basics$EQ = {$: 'EQ'};
var $elm$core$Basics$GT = {$: 'GT'};
var $elm$core$Basics$LT = {$: 'LT'};
var $elm$core$Result$Err = function (a) {
	return {$: 'Err', a: a};
};
var $elm$json$Json$Decode$Failure = F2(
	function (a, b) {
		return {$: 'Failure', a: a, b: b};
	});
var $elm$json$Json$Decode$Field = F2(
	function (a, b) {
		return {$: 'Field', a: a, b: b};
	});
var $elm$json$Json$Decode$Index = F2(
	function (a, b) {
		return {$: 'Index', a: a, b: b};
	});
var $elm$core$Result$Ok = function (a) {
	return {$: 'Ok', a: a};
};
var $elm$json$Json$Decode$OneOf = function (a) {
	return {$: 'OneOf', a: a};
};
var $elm$core$Basics$False = {$: 'False'};
var $elm$core$Basics$add = _Basics_add;
var $elm$core$Maybe$Just = function (a) {
	return {$: 'Just', a: a};
};
var $elm$core$Maybe$Nothing = {$: 'Nothing'};
var $elm$core$String$all = _String_all;
var $elm$core$Basics$and = _Basics_and;
var $elm$core$Basics$append = _Utils_append;
var $elm$json$Json$Encode$encode = _Json_encode;
var $elm$core$String$fromInt = _String_fromNumber;
var $elm$core$String$join = F2(
	function (sep, chunks) {
		return A2(
			_String_join,
			sep,
			_List_toArray(chunks));
	});
var $elm$core$String$split = F2(
	function (sep, string) {
		return _List_fromArray(
			A2(_String_split, sep, string));
	});
var $elm$json$Json$Decode$indent = function (str) {
	return A2(
		$elm$core$String$join,
		'\n    ',
		A2($elm$core$String$split, '\n', str));
};
var $elm$core$List$foldl = F3(
	function (func, acc, list) {
		foldl:
		while (true) {
			if (!list.b) {
				return acc;
			} else {
				var x = list.a;
				var xs = list.b;
				var $temp$func = func,
					$temp$acc = A2(func, x, acc),
					$temp$list = xs;
				func = $temp$func;
				acc = $temp$acc;
				list = $temp$list;
				continue foldl;
			}
		}
	});
var $elm$core$List$length = function (xs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, i) {
				return i + 1;
			}),
		0,
		xs);
};
var $elm$core$List$map2 = _List_map2;
var $elm$core$Basics$le = _Utils_le;
var $elm$core$Basics$sub = _Basics_sub;
var $elm$core$List$rangeHelp = F3(
	function (lo, hi, list) {
		rangeHelp:
		while (true) {
			if (_Utils_cmp(lo, hi) < 1) {
				var $temp$lo = lo,
					$temp$hi = hi - 1,
					$temp$list = A2($elm$core$List$cons, hi, list);
				lo = $temp$lo;
				hi = $temp$hi;
				list = $temp$list;
				continue rangeHelp;
			} else {
				return list;
			}
		}
	});
var $elm$core$List$range = F2(
	function (lo, hi) {
		return A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);
	});
var $elm$core$List$indexedMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$map2,
			f,
			A2(
				$elm$core$List$range,
				0,
				$elm$core$List$length(xs) - 1),
			xs);
	});
var $elm$core$Char$toCode = _Char_toCode;
var $elm$core$Char$isLower = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (97 <= code) && (code <= 122);
};
var $elm$core$Char$isUpper = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 90) && (65 <= code);
};
var $elm$core$Basics$or = _Basics_or;
var $elm$core$Char$isAlpha = function (_char) {
	return $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);
};
var $elm$core$Char$isDigit = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 57) && (48 <= code);
};
var $elm$core$Char$isAlphaNum = function (_char) {
	return $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));
};
var $elm$core$List$reverse = function (list) {
	return A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);
};
var $elm$core$String$uncons = _String_uncons;
var $elm$json$Json$Decode$errorOneOf = F2(
	function (i, error) {
		return '\n\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(
			$elm$json$Json$Decode$errorToString(error))));
	});
var $elm$json$Json$Decode$errorToString = function (error) {
	return A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);
};
var $elm$json$Json$Decode$errorToStringHelp = F2(
	function (error, context) {
		errorToStringHelp:
		while (true) {
			switch (error.$) {
				case 'Field':
					var f = error.a;
					var err = error.b;
					var isSimple = function () {
						var _v1 = $elm$core$String$uncons(f);
						if (_v1.$ === 'Nothing') {
							return false;
						} else {
							var _v2 = _v1.a;
							var _char = _v2.a;
							var rest = _v2.b;
							return $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);
						}
					}();
					var fieldName = isSimple ? ('.' + f) : ('[\'' + (f + '\']'));
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, fieldName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 'Index':
					var i = error.a;
					var err = error.b;
					var indexName = '[' + ($elm$core$String$fromInt(i) + ']');
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, indexName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 'OneOf':
					var errors = error.a;
					if (!errors.b) {
						return 'Ran into a Json.Decode.oneOf with no possibilities' + function () {
							if (!context.b) {
								return '!';
							} else {
								return ' at json' + A2(
									$elm$core$String$join,
									'',
									$elm$core$List$reverse(context));
							}
						}();
					} else {
						if (!errors.b.b) {
							var err = errors.a;
							var $temp$error = err,
								$temp$context = context;
							error = $temp$error;
							context = $temp$context;
							continue errorToStringHelp;
						} else {
							var starter = function () {
								if (!context.b) {
									return 'Json.Decode.oneOf';
								} else {
									return 'The Json.Decode.oneOf at json' + A2(
										$elm$core$String$join,
										'',
										$elm$core$List$reverse(context));
								}
							}();
							var introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(
								$elm$core$List$length(errors)) + ' ways:'));
							return A2(
								$elm$core$String$join,
								'\n\n',
								A2(
									$elm$core$List$cons,
									introduction,
									A2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));
						}
					}
				default:
					var msg = error.a;
					var json = error.b;
					var introduction = function () {
						if (!context.b) {
							return 'Problem with the given value:\n\n';
						} else {
							return 'Problem with the value at json' + (A2(
								$elm$core$String$join,
								'',
								$elm$core$List$reverse(context)) + ':\n\n    ');
						}
					}();
					return introduction + ($elm$json$Json$Decode$indent(
						A2($elm$json$Json$Encode$encode, 4, json)) + ('\n\n' + msg));
			}
		}
	});
var $elm$core$Array$branchFactor = 32;
var $elm$core$Array$Array_elm_builtin = F4(
	function (a, b, c, d) {
		return {$: 'Array_elm_builtin', a: a, b: b, c: c, d: d};
	});
var $elm$core$Elm$JsArray$empty = _JsArray_empty;
var $elm$core$Basics$ceiling = _Basics_ceiling;
var $elm$core$Basics$fdiv = _Basics_fdiv;
var $elm$core$Basics$logBase = F2(
	function (base, number) {
		return _Basics_log(number) / _Basics_log(base);
	});
var $elm$core$Basics$toFloat = _Basics_toFloat;
var $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(
	A2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));
var $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);
var $elm$core$Elm$JsArray$initialize = _JsArray_initialize;
var $elm$core$Array$Leaf = function (a) {
	return {$: 'Leaf', a: a};
};
var $elm$core$Basics$apL = F2(
	function (f, x) {
		return f(x);
	});
var $elm$core$Basics$apR = F2(
	function (x, f) {
		return f(x);
	});
var $elm$core$Basics$eq = _Utils_equal;
var $elm$core$Basics$floor = _Basics_floor;
var $elm$core$Elm$JsArray$length = _JsArray_length;
var $elm$core$Basics$gt = _Utils_gt;
var $elm$core$Basics$max = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) > 0) ? x : y;
	});
var $elm$core$Basics$mul = _Basics_mul;
var $elm$core$Array$SubTree = function (a) {
	return {$: 'SubTree', a: a};
};
var $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;
var $elm$core$Array$compressNodes = F2(
	function (nodes, acc) {
		compressNodes:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);
			var node = _v0.a;
			var remainingNodes = _v0.b;
			var newAcc = A2(
				$elm$core$List$cons,
				$elm$core$Array$SubTree(node),
				acc);
			if (!remainingNodes.b) {
				return $elm$core$List$reverse(newAcc);
			} else {
				var $temp$nodes = remainingNodes,
					$temp$acc = newAcc;
				nodes = $temp$nodes;
				acc = $temp$acc;
				continue compressNodes;
			}
		}
	});
var $elm$core$Tuple$first = function (_v0) {
	var x = _v0.a;
	return x;
};
var $elm$core$Array$treeFromBuilder = F2(
	function (nodeList, nodeListSize) {
		treeFromBuilder:
		while (true) {
			var newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);
			if (newNodeSize === 1) {
				return A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;
			} else {
				var $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),
					$temp$nodeListSize = newNodeSize;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue treeFromBuilder;
			}
		}
	});
var $elm$core$Array$builderToArray = F2(
	function (reverseNodeList, builder) {
		if (!builder.nodeListSize) {
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.tail),
				$elm$core$Array$shiftStep,
				$elm$core$Elm$JsArray$empty,
				builder.tail);
		} else {
			var treeLen = builder.nodeListSize * $elm$core$Array$branchFactor;
			var depth = $elm$core$Basics$floor(
				A2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));
			var correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.nodeList) : builder.nodeList;
			var tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.nodeListSize);
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.tail) + treeLen,
				A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),
				tree,
				builder.tail);
		}
	});
var $elm$core$Basics$idiv = _Basics_idiv;
var $elm$core$Basics$lt = _Utils_lt;
var $elm$core$Array$initializeHelp = F5(
	function (fn, fromIndex, len, nodeList, tail) {
		initializeHelp:
		while (true) {
			if (fromIndex < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					false,
					{nodeList: nodeList, nodeListSize: (len / $elm$core$Array$branchFactor) | 0, tail: tail});
			} else {
				var leaf = $elm$core$Array$Leaf(
					A3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));
				var $temp$fn = fn,
					$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,
					$temp$len = len,
					$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),
					$temp$tail = tail;
				fn = $temp$fn;
				fromIndex = $temp$fromIndex;
				len = $temp$len;
				nodeList = $temp$nodeList;
				tail = $temp$tail;
				continue initializeHelp;
			}
		}
	});
var $elm$core$Basics$remainderBy = _Basics_remainderBy;
var $elm$core$Array$initialize = F2(
	function (len, fn) {
		if (len <= 0) {
			return $elm$core$Array$empty;
		} else {
			var tailLen = len % $elm$core$Array$branchFactor;
			var tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);
			var initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;
			return A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);
		}
	});
var $elm$core$Basics$True = {$: 'True'};
var $elm$core$Result$isOk = function (result) {
	if (result.$ === 'Ok') {
		return true;
	} else {
		return false;
	}
};
var $elm$json$Json$Decode$andThen = _Json_andThen;
var $elm$json$Json$Decode$map = _Json_map1;
var $elm$json$Json$Decode$map2 = _Json_map2;
var $elm$json$Json$Decode$succeed = _Json_succeed;
var $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {
	switch (handler.$) {
		case 'Normal':
			return 0;
		case 'MayStopPropagation':
			return 1;
		case 'MayPreventDefault':
			return 2;
		default:
			return 3;
	}
};
var $elm$browser$Browser$External = function (a) {
	return {$: 'External', a: a};
};
var $elm$browser$Browser$Internal = function (a) {
	return {$: 'Internal', a: a};
};
var $elm$core$Basics$identity = function (x) {
	return x;
};
var $elm$browser$Browser$Dom$NotFound = function (a) {
	return {$: 'NotFound', a: a};
};
var $elm$url$Url$Http = {$: 'Http'};
var $elm$url$Url$Https = {$: 'Https'};
var $elm$url$Url$Url = F6(
	function (protocol, host, port_, path, query, fragment) {
		return {fragment: fragment, host: host, path: path, port_: port_, protocol: protocol, query: query};
	});
var $elm$core$String$contains = _String_contains;
var $elm$core$String$length = _String_length;
var $elm$core$String$slice = _String_slice;
var $elm$core$String$dropLeft = F2(
	function (n, string) {
		return (n < 1) ? string : A3(
			$elm$core$String$slice,
			n,
			$elm$core$String$length(string),
			string);
	});
var $elm$core$String$indexes = _String_indexes;
var $elm$core$String$isEmpty = function (string) {
	return string === '';
};
var $elm$core$String$left = F2(
	function (n, string) {
		return (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);
	});
var $elm$core$String$toInt = _String_toInt;
var $elm$url$Url$chompBeforePath = F5(
	function (protocol, path, params, frag, str) {
		if ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, ':', str);
			if (!_v0.b) {
				return $elm$core$Maybe$Just(
					A6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));
			} else {
				if (!_v0.b.b) {
					var i = _v0.a;
					var _v1 = $elm$core$String$toInt(
						A2($elm$core$String$dropLeft, i + 1, str));
					if (_v1.$ === 'Nothing') {
						return $elm$core$Maybe$Nothing;
					} else {
						var port_ = _v1;
						return $elm$core$Maybe$Just(
							A6(
								$elm$url$Url$Url,
								protocol,
								A2($elm$core$String$left, i, str),
								port_,
								path,
								params,
								frag));
					}
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}
		}
	});
var $elm$url$Url$chompBeforeQuery = F4(
	function (protocol, params, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '/', str);
			if (!_v0.b) {
				return A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);
			} else {
				var i = _v0.a;
				return A5(
					$elm$url$Url$chompBeforePath,
					protocol,
					A2($elm$core$String$dropLeft, i, str),
					params,
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompBeforeFragment = F3(
	function (protocol, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '?', str);
			if (!_v0.b) {
				return A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);
			} else {
				var i = _v0.a;
				return A4(
					$elm$url$Url$chompBeforeQuery,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompAfterProtocol = F2(
	function (protocol, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '#', str);
			if (!_v0.b) {
				return A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);
			} else {
				var i = _v0.a;
				return A3(
					$elm$url$Url$chompBeforeFragment,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$core$String$startsWith = _String_startsWith;
var $elm$url$Url$fromString = function (str) {
	return A2($elm$core$String$startsWith, 'http://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		$elm$url$Url$Http,
		A2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		$elm$url$Url$Https,
		A2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);
};
var $elm$core$Basics$never = function (_v0) {
	never:
	while (true) {
		var nvr = _v0.a;
		var $temp$_v0 = nvr;
		_v0 = $temp$_v0;
		continue never;
	}
};
var $elm$core$Task$Perform = function (a) {
	return {$: 'Perform', a: a};
};
var $elm$core$Task$succeed = _Scheduler_succeed;
var $elm$core$Task$init = $elm$core$Task$succeed(_Utils_Tuple0);
var $elm$core$List$foldrHelper = F4(
	function (fn, acc, ctr, ls) {
		if (!ls.b) {
			return acc;
		} else {
			var a = ls.a;
			var r1 = ls.b;
			if (!r1.b) {
				return A2(fn, a, acc);
			} else {
				var b = r1.a;
				var r2 = r1.b;
				if (!r2.b) {
					return A2(
						fn,
						a,
						A2(fn, b, acc));
				} else {
					var c = r2.a;
					var r3 = r2.b;
					if (!r3.b) {
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(fn, c, acc)));
					} else {
						var d = r3.a;
						var r4 = r3.b;
						var res = (ctr > 500) ? A3(
							$elm$core$List$foldl,
							fn,
							acc,
							$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(
									fn,
									c,
									A2(fn, d, res))));
					}
				}
			}
		}
	});
var $elm$core$List$foldr = F3(
	function (fn, acc, ls) {
		return A4($elm$core$List$foldrHelper, fn, acc, 0, ls);
	});
var $elm$core$List$map = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, acc) {
					return A2(
						$elm$core$List$cons,
						f(x),
						acc);
				}),
			_List_Nil,
			xs);
	});
var $elm$core$Task$andThen = _Scheduler_andThen;
var $elm$core$Task$map = F2(
	function (func, taskA) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return $elm$core$Task$succeed(
					func(a));
			},
			taskA);
	});
var $elm$core$Task$map2 = F3(
	function (func, taskA, taskB) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return A2(
					$elm$core$Task$andThen,
					function (b) {
						return $elm$core$Task$succeed(
							A2(func, a, b));
					},
					taskB);
			},
			taskA);
	});
var $elm$core$Task$sequence = function (tasks) {
	return A3(
		$elm$core$List$foldr,
		$elm$core$Task$map2($elm$core$List$cons),
		$elm$core$Task$succeed(_List_Nil),
		tasks);
};
var $elm$core$Platform$sendToApp = _Platform_sendToApp;
var $elm$core$Task$spawnCmd = F2(
	function (router, _v0) {
		var task = _v0.a;
		return _Scheduler_spawn(
			A2(
				$elm$core$Task$andThen,
				$elm$core$Platform$sendToApp(router),
				task));
	});
var $elm$core$Task$onEffects = F3(
	function (router, commands, state) {
		return A2(
			$elm$core$Task$map,
			function (_v0) {
				return _Utils_Tuple0;
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Task$spawnCmd(router),
					commands)));
	});
var $elm$core$Task$onSelfMsg = F3(
	function (_v0, _v1, _v2) {
		return $elm$core$Task$succeed(_Utils_Tuple0);
	});
var $elm$core$Task$cmdMap = F2(
	function (tagger, _v0) {
		var task = _v0.a;
		return $elm$core$Task$Perform(
			A2($elm$core$Task$map, tagger, task));
	});
_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);
var $elm$core$Task$command = _Platform_leaf('Task');
var $elm$core$Task$perform = F2(
	function (toMessage, task) {
		return $elm$core$Task$command(
			$elm$core$Task$Perform(
				A2($elm$core$Task$map, toMessage, task)));
	});
var $elm$browser$Browser$application = _Browser_application;
var $elm$json$Json$Decode$field = _Json_decodeField;
var $author$project$Main$GotInitSessionMsg = function (a) {
	return {$: 'GotInitSessionMsg', a: a};
};
var $author$project$UserType$Guest = {$: 'Guest'};
var $author$project$Main$NoContent = {$: 'NoContent'};
var $author$project$Page$HomePage = {$: 'HomePage'};
var $author$project$Page$LoginPage = function (a) {
	return {$: 'LoginPage', a: a};
};
var $author$project$Page$NotFoundPage = {$: 'NotFoundPage'};
var $author$project$Page$ProfessorPage = {$: 'ProfessorPage'};
var $author$project$Page$RegistrationPage = function (a) {
	return {$: 'RegistrationPage', a: a};
};
var $author$project$Page$SetPasswordPage = function (a) {
	return {$: 'SetPasswordPage', a: a};
};
var $author$project$Page$StudentPage = {$: 'StudentPage'};
var $author$project$LoginPage$Model = F6(
	function (apiBaseUrl, email, password, showPassword, error, processing) {
		return {apiBaseUrl: apiBaseUrl, email: email, error: error, password: password, processing: processing, showPassword: showPassword};
	});
var $author$project$LoginPage$init = function (apiBaseUrl) {
	return A6($author$project$LoginPage$Model, apiBaseUrl, '', '', false, $elm$core$Maybe$Nothing, false);
};
var $author$project$RegistrationPage$Init = {$: 'Init'};
var $author$project$RegistrationPage$Model = F7(
	function (apiBaseUrl, firstName, lastName, email, indexNumber, state, dismissedMsg) {
		return {apiBaseUrl: apiBaseUrl, dismissedMsg: dismissedMsg, email: email, firstName: firstName, indexNumber: indexNumber, lastName: lastName, state: state};
	});
var $author$project$RegistrationPage$init = function (apiBaseUrl) {
	return A7($author$project$RegistrationPage$Model, apiBaseUrl, '', '', '', '', $author$project$RegistrationPage$Init, false);
};
var $author$project$SetPasswordPage$Model = F8(
	function (apiBaseUrl, uuid, email, password, confirmPassword, processing, showPassword1, showPassword2) {
		return {apiBaseUrl: apiBaseUrl, confirmPassword: confirmPassword, email: email, password: password, processing: processing, showPassword1: showPassword1, showPassword2: showPassword2, uuid: uuid};
	});
var $author$project$SetPasswordPage$init = F2(
	function (apiBaseUrl, uuid) {
		return A8($author$project$SetPasswordPage$Model, apiBaseUrl, uuid, '', '', '', false, false, false);
	});
var $author$project$Page$forRoute = F2(
	function (route, apiBaseUrl) {
		switch (route.$) {
			case 'Home':
				return $author$project$Page$HomePage;
			case 'Login':
				return $author$project$Page$LoginPage(
					$author$project$LoginPage$init(apiBaseUrl));
			case 'Registration':
				return $author$project$Page$RegistrationPage(
					$author$project$RegistrationPage$init(apiBaseUrl));
			case 'SetPassword':
				var uuid = route.a;
				return $author$project$Page$SetPasswordPage(
					A2($author$project$SetPasswordPage$init, apiBaseUrl, uuid));
			case 'Professor':
				return $author$project$Page$ProfessorPage;
			case 'Student':
				return $author$project$Page$StudentPage;
			default:
				return $author$project$Page$NotFoundPage;
		}
	});
var $author$project$Route$NotFound = {$: 'NotFound'};
var $elm$core$Basics$composeL = F3(
	function (g, f, x) {
		return g(
			f(x));
	});
var $elm$url$Url$Parser$State = F5(
	function (visited, unvisited, params, frag, value) {
		return {frag: frag, params: params, unvisited: unvisited, value: value, visited: visited};
	});
var $elm$url$Url$Parser$getFirstMatch = function (states) {
	getFirstMatch:
	while (true) {
		if (!states.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var state = states.a;
			var rest = states.b;
			var _v1 = state.unvisited;
			if (!_v1.b) {
				return $elm$core$Maybe$Just(state.value);
			} else {
				if ((_v1.a === '') && (!_v1.b.b)) {
					return $elm$core$Maybe$Just(state.value);
				} else {
					var $temp$states = rest;
					states = $temp$states;
					continue getFirstMatch;
				}
			}
		}
	}
};
var $elm$url$Url$Parser$removeFinalEmpty = function (segments) {
	if (!segments.b) {
		return _List_Nil;
	} else {
		if ((segments.a === '') && (!segments.b.b)) {
			return _List_Nil;
		} else {
			var segment = segments.a;
			var rest = segments.b;
			return A2(
				$elm$core$List$cons,
				segment,
				$elm$url$Url$Parser$removeFinalEmpty(rest));
		}
	}
};
var $elm$url$Url$Parser$preparePath = function (path) {
	var _v0 = A2($elm$core$String$split, '/', path);
	if (_v0.b && (_v0.a === '')) {
		var segments = _v0.b;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	} else {
		var segments = _v0;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	}
};
var $elm$url$Url$Parser$addToParametersHelp = F2(
	function (value, maybeList) {
		if (maybeList.$ === 'Nothing') {
			return $elm$core$Maybe$Just(
				_List_fromArray(
					[value]));
		} else {
			var list = maybeList.a;
			return $elm$core$Maybe$Just(
				A2($elm$core$List$cons, value, list));
		}
	});
var $elm$url$Url$percentDecode = _Url_percentDecode;
var $elm$core$Basics$compare = _Utils_compare;
var $elm$core$Dict$get = F2(
	function (targetKey, dict) {
		get:
		while (true) {
			if (dict.$ === 'RBEmpty_elm_builtin') {
				return $elm$core$Maybe$Nothing;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var _v1 = A2($elm$core$Basics$compare, targetKey, key);
				switch (_v1.$) {
					case 'LT':
						var $temp$targetKey = targetKey,
							$temp$dict = left;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
					case 'EQ':
						return $elm$core$Maybe$Just(value);
					default:
						var $temp$targetKey = targetKey,
							$temp$dict = right;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
				}
			}
		}
	});
var $elm$core$Dict$Black = {$: 'Black'};
var $elm$core$Dict$RBNode_elm_builtin = F5(
	function (a, b, c, d, e) {
		return {$: 'RBNode_elm_builtin', a: a, b: b, c: c, d: d, e: e};
	});
var $elm$core$Dict$RBEmpty_elm_builtin = {$: 'RBEmpty_elm_builtin'};
var $elm$core$Dict$Red = {$: 'Red'};
var $elm$core$Dict$balance = F5(
	function (color, key, value, left, right) {
		if ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Red')) {
			var _v1 = right.a;
			var rK = right.b;
			var rV = right.c;
			var rLeft = right.d;
			var rRight = right.e;
			if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {
				var _v3 = left.a;
				var lK = left.b;
				var lV = left.c;
				var lLeft = left.d;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Red,
					key,
					value,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					rK,
					rV,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, left, rLeft),
					rRight);
			}
		} else {
			if ((((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) && (left.d.$ === 'RBNode_elm_builtin')) && (left.d.a.$ === 'Red')) {
				var _v5 = left.a;
				var lK = left.b;
				var lV = left.c;
				var _v6 = left.d;
				var _v7 = _v6.a;
				var llK = _v6.b;
				var llV = _v6.c;
				var llLeft = _v6.d;
				var llRight = _v6.e;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Red,
					lK,
					lV,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, key, value, lRight, right));
			} else {
				return A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);
			}
		}
	});
var $elm$core$Dict$insertHelp = F3(
	function (key, value, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
		} else {
			var nColor = dict.a;
			var nKey = dict.b;
			var nValue = dict.c;
			var nLeft = dict.d;
			var nRight = dict.e;
			var _v1 = A2($elm$core$Basics$compare, key, nKey);
			switch (_v1.$) {
				case 'LT':
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						A3($elm$core$Dict$insertHelp, key, value, nLeft),
						nRight);
				case 'EQ':
					return A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);
				default:
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						nLeft,
						A3($elm$core$Dict$insertHelp, key, value, nRight));
			}
		}
	});
var $elm$core$Dict$insert = F3(
	function (key, value, dict) {
		var _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);
		if ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$core$Dict$getMin = function (dict) {
	getMin:
	while (true) {
		if ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {
			var left = dict.d;
			var $temp$dict = left;
			dict = $temp$dict;
			continue getMin;
		} else {
			return dict;
		}
	}
};
var $elm$core$Dict$moveRedLeft = function (dict) {
	if (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {
		if ((dict.e.d.$ === 'RBNode_elm_builtin') && (dict.e.d.a.$ === 'Red')) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var lLeft = _v1.d;
			var lRight = _v1.e;
			var _v2 = dict.e;
			var rClr = _v2.a;
			var rK = _v2.b;
			var rV = _v2.c;
			var rLeft = _v2.d;
			var _v3 = rLeft.a;
			var rlK = rLeft.b;
			var rlV = rLeft.c;
			var rlL = rLeft.d;
			var rlR = rLeft.e;
			var rRight = _v2.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				$elm$core$Dict$Red,
				rlK,
				rlV,
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					rlL),
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rlR, rRight));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v4 = dict.d;
			var lClr = _v4.a;
			var lK = _v4.b;
			var lV = _v4.c;
			var lLeft = _v4.d;
			var lRight = _v4.e;
			var _v5 = dict.e;
			var rClr = _v5.a;
			var rK = _v5.b;
			var rV = _v5.c;
			var rLeft = _v5.d;
			var rRight = _v5.e;
			if (clr.$ === 'Black') {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$moveRedRight = function (dict) {
	if (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {
		if ((dict.d.d.$ === 'RBNode_elm_builtin') && (dict.d.d.a.$ === 'Red')) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var _v2 = _v1.d;
			var _v3 = _v2.a;
			var llK = _v2.b;
			var llV = _v2.c;
			var llLeft = _v2.d;
			var llRight = _v2.e;
			var lRight = _v1.e;
			var _v4 = dict.e;
			var rClr = _v4.a;
			var rK = _v4.b;
			var rV = _v4.c;
			var rLeft = _v4.d;
			var rRight = _v4.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				$elm$core$Dict$Red,
				lK,
				lV,
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					lRight,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight)));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v5 = dict.d;
			var lClr = _v5.a;
			var lK = _v5.b;
			var lV = _v5.c;
			var lLeft = _v5.d;
			var lRight = _v5.e;
			var _v6 = dict.e;
			var rClr = _v6.a;
			var rK = _v6.b;
			var rV = _v6.c;
			var rLeft = _v6.d;
			var rRight = _v6.e;
			if (clr.$ === 'Black') {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$removeHelpPrepEQGT = F7(
	function (targetKey, dict, color, key, value, left, right) {
		if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {
			var _v1 = left.a;
			var lK = left.b;
			var lV = left.c;
			var lLeft = left.d;
			var lRight = left.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				lK,
				lV,
				lLeft,
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, lRight, right));
		} else {
			_v2$2:
			while (true) {
				if ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Black')) {
					if (right.d.$ === 'RBNode_elm_builtin') {
						if (right.d.a.$ === 'Black') {
							var _v3 = right.a;
							var _v4 = right.d;
							var _v5 = _v4.a;
							return $elm$core$Dict$moveRedRight(dict);
						} else {
							break _v2$2;
						}
					} else {
						var _v6 = right.a;
						var _v7 = right.d;
						return $elm$core$Dict$moveRedRight(dict);
					}
				} else {
					break _v2$2;
				}
			}
			return dict;
		}
	});
var $elm$core$Dict$removeMin = function (dict) {
	if ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {
		var color = dict.a;
		var key = dict.b;
		var value = dict.c;
		var left = dict.d;
		var lColor = left.a;
		var lLeft = left.d;
		var right = dict.e;
		if (lColor.$ === 'Black') {
			if ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {
				var _v3 = lLeft.a;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					key,
					value,
					$elm$core$Dict$removeMin(left),
					right);
			} else {
				var _v4 = $elm$core$Dict$moveRedLeft(dict);
				if (_v4.$ === 'RBNode_elm_builtin') {
					var nColor = _v4.a;
					var nKey = _v4.b;
					var nValue = _v4.c;
					var nLeft = _v4.d;
					var nRight = _v4.e;
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						$elm$core$Dict$removeMin(nLeft),
						nRight);
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			}
		} else {
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				value,
				$elm$core$Dict$removeMin(left),
				right);
		}
	} else {
		return $elm$core$Dict$RBEmpty_elm_builtin;
	}
};
var $elm$core$Dict$removeHelp = F2(
	function (targetKey, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_cmp(targetKey, key) < 0) {
				if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Black')) {
					var _v4 = left.a;
					var lLeft = left.d;
					if ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {
						var _v6 = lLeft.a;
						return A5(
							$elm$core$Dict$RBNode_elm_builtin,
							color,
							key,
							value,
							A2($elm$core$Dict$removeHelp, targetKey, left),
							right);
					} else {
						var _v7 = $elm$core$Dict$moveRedLeft(dict);
						if (_v7.$ === 'RBNode_elm_builtin') {
							var nColor = _v7.a;
							var nKey = _v7.b;
							var nValue = _v7.c;
							var nLeft = _v7.d;
							var nRight = _v7.e;
							return A5(
								$elm$core$Dict$balance,
								nColor,
								nKey,
								nValue,
								A2($elm$core$Dict$removeHelp, targetKey, nLeft),
								nRight);
						} else {
							return $elm$core$Dict$RBEmpty_elm_builtin;
						}
					}
				} else {
					return A5(
						$elm$core$Dict$RBNode_elm_builtin,
						color,
						key,
						value,
						A2($elm$core$Dict$removeHelp, targetKey, left),
						right);
				}
			} else {
				return A2(
					$elm$core$Dict$removeHelpEQGT,
					targetKey,
					A7($elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));
			}
		}
	});
var $elm$core$Dict$removeHelpEQGT = F2(
	function (targetKey, dict) {
		if (dict.$ === 'RBNode_elm_builtin') {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_eq(targetKey, key)) {
				var _v1 = $elm$core$Dict$getMin(right);
				if (_v1.$ === 'RBNode_elm_builtin') {
					var minKey = _v1.b;
					var minValue = _v1.c;
					return A5(
						$elm$core$Dict$balance,
						color,
						minKey,
						minValue,
						left,
						$elm$core$Dict$removeMin(right));
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			} else {
				return A5(
					$elm$core$Dict$balance,
					color,
					key,
					value,
					left,
					A2($elm$core$Dict$removeHelp, targetKey, right));
			}
		} else {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		}
	});
var $elm$core$Dict$remove = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$removeHelp, key, dict);
		if ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$core$Dict$update = F3(
	function (targetKey, alter, dictionary) {
		var _v0 = alter(
			A2($elm$core$Dict$get, targetKey, dictionary));
		if (_v0.$ === 'Just') {
			var value = _v0.a;
			return A3($elm$core$Dict$insert, targetKey, value, dictionary);
		} else {
			return A2($elm$core$Dict$remove, targetKey, dictionary);
		}
	});
var $elm$url$Url$Parser$addParam = F2(
	function (segment, dict) {
		var _v0 = A2($elm$core$String$split, '=', segment);
		if ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {
			var rawKey = _v0.a;
			var _v1 = _v0.b;
			var rawValue = _v1.a;
			var _v2 = $elm$url$Url$percentDecode(rawKey);
			if (_v2.$ === 'Nothing') {
				return dict;
			} else {
				var key = _v2.a;
				var _v3 = $elm$url$Url$percentDecode(rawValue);
				if (_v3.$ === 'Nothing') {
					return dict;
				} else {
					var value = _v3.a;
					return A3(
						$elm$core$Dict$update,
						key,
						$elm$url$Url$Parser$addToParametersHelp(value),
						dict);
				}
			}
		} else {
			return dict;
		}
	});
var $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;
var $elm$url$Url$Parser$prepareQuery = function (maybeQuery) {
	if (maybeQuery.$ === 'Nothing') {
		return $elm$core$Dict$empty;
	} else {
		var qry = maybeQuery.a;
		return A3(
			$elm$core$List$foldr,
			$elm$url$Url$Parser$addParam,
			$elm$core$Dict$empty,
			A2($elm$core$String$split, '&', qry));
	}
};
var $elm$url$Url$Parser$parse = F2(
	function (_v0, url) {
		var parser = _v0.a;
		return $elm$url$Url$Parser$getFirstMatch(
			parser(
				A5(
					$elm$url$Url$Parser$State,
					_List_Nil,
					$elm$url$Url$Parser$preparePath(url.path),
					$elm$url$Url$Parser$prepareQuery(url.query),
					url.fragment,
					$elm$core$Basics$identity)));
	});
var $author$project$Route$Home = {$: 'Home'};
var $author$project$Route$Login = {$: 'Login'};
var $author$project$Route$Professor = function (a) {
	return {$: 'Professor', a: a};
};
var $author$project$Route$Registration = {$: 'Registration'};
var $author$project$Route$SetPassword = function (a) {
	return {$: 'SetPassword', a: a};
};
var $author$project$Route$Student = {$: 'Student'};
var $elm$url$Url$Parser$Parser = function (a) {
	return {$: 'Parser', a: a};
};
var $elm$url$Url$Parser$mapState = F2(
	function (func, _v0) {
		var visited = _v0.visited;
		var unvisited = _v0.unvisited;
		var params = _v0.params;
		var frag = _v0.frag;
		var value = _v0.value;
		return A5(
			$elm$url$Url$Parser$State,
			visited,
			unvisited,
			params,
			frag,
			func(value));
	});
var $elm$url$Url$Parser$map = F2(
	function (subValue, _v0) {
		var parseArg = _v0.a;
		return $elm$url$Url$Parser$Parser(
			function (_v1) {
				var visited = _v1.visited;
				var unvisited = _v1.unvisited;
				var params = _v1.params;
				var frag = _v1.frag;
				var value = _v1.value;
				return A2(
					$elm$core$List$map,
					$elm$url$Url$Parser$mapState(value),
					parseArg(
						A5($elm$url$Url$Parser$State, visited, unvisited, params, frag, subValue)));
			});
	});
var $elm$core$List$append = F2(
	function (xs, ys) {
		if (!ys.b) {
			return xs;
		} else {
			return A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);
		}
	});
var $elm$core$List$concat = function (lists) {
	return A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);
};
var $elm$core$List$concatMap = F2(
	function (f, list) {
		return $elm$core$List$concat(
			A2($elm$core$List$map, f, list));
	});
var $elm$url$Url$Parser$oneOf = function (parsers) {
	return $elm$url$Url$Parser$Parser(
		function (state) {
			return A2(
				$elm$core$List$concatMap,
				function (_v0) {
					var parser = _v0.a;
					return parser(state);
				},
				parsers);
		});
};
var $author$project$Route$Activities = {$: 'Activities'};
var $author$project$Route$ActivityAssignments = function (a) {
	return {$: 'ActivityAssignments', a: a};
};
var $author$project$Route$Groups = {$: 'Groups'};
var $author$project$Route$RegistrationRequests = {$: 'RegistrationRequests'};
var $author$project$Route$Topics = {$: 'Topics'};
var $elm$url$Url$Parser$custom = F2(
	function (tipe, stringToSomething) {
		return $elm$url$Url$Parser$Parser(
			function (_v0) {
				var visited = _v0.visited;
				var unvisited = _v0.unvisited;
				var params = _v0.params;
				var frag = _v0.frag;
				var value = _v0.value;
				if (!unvisited.b) {
					return _List_Nil;
				} else {
					var next = unvisited.a;
					var rest = unvisited.b;
					var _v2 = stringToSomething(next);
					if (_v2.$ === 'Just') {
						var nextValue = _v2.a;
						return _List_fromArray(
							[
								A5(
								$elm$url$Url$Parser$State,
								A2($elm$core$List$cons, next, visited),
								rest,
								params,
								frag,
								value(nextValue))
							]);
					} else {
						return _List_Nil;
					}
				}
			});
	});
var $elm$url$Url$Parser$int = A2($elm$url$Url$Parser$custom, 'NUMBER', $elm$core$String$toInt);
var $elm$url$Url$Parser$s = function (str) {
	return $elm$url$Url$Parser$Parser(
		function (_v0) {
			var visited = _v0.visited;
			var unvisited = _v0.unvisited;
			var params = _v0.params;
			var frag = _v0.frag;
			var value = _v0.value;
			if (!unvisited.b) {
				return _List_Nil;
			} else {
				var next = unvisited.a;
				var rest = unvisited.b;
				return _Utils_eq(next, str) ? _List_fromArray(
					[
						A5(
						$elm$url$Url$Parser$State,
						A2($elm$core$List$cons, next, visited),
						rest,
						params,
						frag,
						value)
					]) : _List_Nil;
			}
		});
};
var $elm$url$Url$Parser$slash = F2(
	function (_v0, _v1) {
		var parseBefore = _v0.a;
		var parseAfter = _v1.a;
		return $elm$url$Url$Parser$Parser(
			function (state) {
				return A2(
					$elm$core$List$concatMap,
					parseAfter,
					parseBefore(state));
			});
	});
var $author$project$Route$professorParser = $elm$url$Url$Parser$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$RegistrationRequests,
			$elm$url$Url$Parser$s('registrations')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Activities,
			$elm$url$Url$Parser$s('activities')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$ActivityAssignments,
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('activities'),
				A2(
					$elm$url$Url$Parser$slash,
					$elm$url$Url$Parser$int,
					$elm$url$Url$Parser$s('assignments')))),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Topics,
			$elm$url$Url$Parser$s('topics')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Groups,
			$elm$url$Url$Parser$s('groups'))
		]));
var $elm$url$Url$Parser$string = A2($elm$url$Url$Parser$custom, 'STRING', $elm$core$Maybe$Just);
var $elm$url$Url$Parser$top = $elm$url$Url$Parser$Parser(
	function (state) {
		return _List_fromArray(
			[state]);
	});
var $author$project$Route$parser = $elm$url$Url$Parser$oneOf(
	_List_fromArray(
		[
			A2($elm$url$Url$Parser$map, $author$project$Route$Home, $elm$url$Url$Parser$top),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Student,
			$elm$url$Url$Parser$s('student')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Login,
			$elm$url$Url$Parser$s('login')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Registration,
			$elm$url$Url$Parser$s('register')),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$Professor,
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('professor'),
				$author$project$Route$professorParser)),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$SetPassword,
			A2(
				$elm$url$Url$Parser$slash,
				$elm$url$Url$Parser$s('setPassword'),
				$elm$url$Url$Parser$string)),
			A2(
			$elm$url$Url$Parser$map,
			$author$project$Route$NotFound,
			$elm$url$Url$Parser$s('notFound'))
		]));
var $elm$core$Maybe$withDefault = F2(
	function (_default, maybe) {
		if (maybe.$ === 'Just') {
			var value = maybe.a;
			return value;
		} else {
			return _default;
		}
	});
var $author$project$Route$fromUrl = A2(
	$elm$core$Basics$composeL,
	$elm$core$Maybe$withDefault($author$project$Route$NotFound),
	$elm$url$Url$Parser$parse($author$project$Route$parser));
var $elm$core$Platform$Cmd$map = _Platform_map;
var $author$project$Session$GotTokenResult = function (a) {
	return {$: 'GotTokenResult', a: a};
};
var $author$project$Session$Session = F5(
	function (accessToken, expiresIn, userInfo, semesterId, studentInfo) {
		return {accessToken: accessToken, expiresIn: expiresIn, semesterId: semesterId, studentInfo: studentInfo, userInfo: userInfo};
	});
var $author$project$Session$StudentInfo = F2(
	function (groupId, indexNumber) {
		return {groupId: groupId, indexNumber: indexNumber};
	});
var $elm$json$Json$Decode$int = _Json_decodeInt;
var $elm$json$Json$Decode$null = _Json_decodeNull;
var $elm$json$Json$Decode$oneOf = _Json_oneOf;
var $elm$json$Json$Decode$nullable = function (decoder) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				$elm$json$Json$Decode$null($elm$core$Maybe$Nothing),
				A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder)
			]));
};
var $elm$json$Json$Decode$string = _Json_decodeString;
var $author$project$Session$decodeStudentInfo = A3(
	$elm$json$Json$Decode$map2,
	$author$project$Session$StudentInfo,
	A2(
		$elm$json$Json$Decode$field,
		'group_id',
		$elm$json$Json$Decode$nullable($elm$json$Json$Decode$int)),
	A2($elm$json$Json$Decode$field, 'index_number', $elm$json$Json$Decode$string));
var $author$project$Session$UserInfo = F5(
	function (id, email, firstName, lastName, role) {
		return {email: email, firstName: firstName, id: id, lastName: lastName, role: role};
	});
var $elm$json$Json$Decode$map5 = _Json_map5;
var $author$project$Session$decodeUser = A6(
	$elm$json$Json$Decode$map5,
	$author$project$Session$UserInfo,
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'email', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'first_name', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'last_name', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'role', $elm$json$Json$Decode$string));
var $elm$json$Json$Decode$float = _Json_decodeFloat;
var $elm$json$Json$Decode$maybe = function (decoder) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder),
				$elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing)
			]));
};
var $author$project$Session$decodeSession = A6(
	$elm$json$Json$Decode$map5,
	$author$project$Session$Session,
	A2($elm$json$Json$Decode$field, 'access_token', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'expires_in', $elm$json$Json$Decode$float),
	A2($elm$json$Json$Decode$field, 'user', $author$project$Session$decodeUser),
	A2($elm$json$Json$Decode$field, 'semester_id', $elm$json$Json$Decode$int),
	$elm$json$Json$Decode$maybe(
		A2($elm$json$Json$Decode$field, 'student_info', $author$project$Session$decodeStudentInfo)));
var $elm$url$Url$Builder$toQueryPair = function (_v0) {
	var key = _v0.a;
	var value = _v0.b;
	return key + ('=' + value);
};
var $elm$url$Url$Builder$toQuery = function (parameters) {
	if (!parameters.b) {
		return '';
	} else {
		return '?' + A2(
			$elm$core$String$join,
			'&',
			A2($elm$core$List$map, $elm$url$Url$Builder$toQueryPair, parameters));
	}
};
var $elm$url$Url$Builder$relative = F2(
	function (pathSegments, parameters) {
		return _Utils_ap(
			A2($elm$core$String$join, '/', pathSegments),
			$elm$url$Url$Builder$toQuery(parameters));
	});
var $author$project$Api$relativeUrl = function (pathList) {
	return A2($elm$url$Url$Builder$relative, pathList, _List_Nil);
};
var $author$project$Api$endpoints = {
	activities: function (semId) {
		return $author$project$Api$relativeUrl(
			_List_fromArray(
				[
					'semesters',
					$elm$core$String$fromInt(semId),
					'activities'
				]));
	},
	activity: function (id) {
		return $author$project$Api$relativeUrl(
			_List_fromArray(
				[
					'activities',
					$elm$core$String$fromInt(id)
				]));
	},
	activityTypes: $author$project$Api$relativeUrl(
		_List_fromArray(
			['activity-types'])),
	assignment: function (id) {
		return $author$project$Api$relativeUrl(
			_List_fromArray(
				[
					'assignments',
					$elm$core$String$fromInt(id)
				]));
	},
	assignments: function (semId) {
		return $author$project$Api$relativeUrl(
			_List_fromArray(
				[
					'semesters',
					$elm$core$String$fromInt(semId),
					'assignments'
				]));
	},
	document: function (id) {
		return $author$project$Api$relativeUrl(
			_List_fromArray(
				[
					'documents',
					$elm$core$String$fromInt(id)
				]));
	},
	documents: function (actId) {
		return $author$project$Api$relativeUrl(
			_List_fromArray(
				[
					'assignments',
					$elm$core$String$fromInt(actId),
					'documents'
				]));
	},
	group: function (groupId) {
		return $author$project$Api$relativeUrl(
			_List_fromArray(
				[
					'groups',
					$elm$core$String$fromInt(groupId)
				]));
	},
	groups: function (semId) {
		return $author$project$Api$relativeUrl(
			_List_fromArray(
				[
					'semesters',
					$elm$core$String$fromInt(semId),
					'groups'
				]));
	},
	login: $author$project$Api$relativeUrl(
		_List_fromArray(
			['auth', 'login'])),
	logout: $author$project$Api$relativeUrl(
		_List_fromArray(
			['auth', 'logout'])),
	password: function (uuid) {
		return $author$project$Api$relativeUrl(
			_List_fromArray(
				['passwords', uuid]));
	},
	refreshToken: $author$project$Api$relativeUrl(
		_List_fromArray(
			['auth', 'refresh'])),
	registration: function (id) {
		return $author$project$Api$relativeUrl(
			_List_fromArray(
				[
					'registrations',
					$elm$core$String$fromInt(id)
				]));
	},
	registrations: 'registrations',
	registrationsPerSemester: function (id) {
		return $author$project$Api$relativeUrl(
			_List_fromArray(
				[
					'semesters',
					$elm$core$String$fromInt(id),
					'registrations'
				]));
	},
	signup: function (id) {
		return $author$project$Api$relativeUrl(
			_List_fromArray(
				[
					'signups',
					$elm$core$String$fromInt(id)
				]));
	},
	student: F2(
		function (semId, studId) {
			return $author$project$Api$relativeUrl(
				_List_fromArray(
					[
						'semesters',
						$elm$core$String$fromInt(semId),
						'students',
						$elm$core$String$fromInt(studId)
					]));
		}),
	students: function (id) {
		return $author$project$Api$relativeUrl(
			_List_fromArray(
				[
					'semesters',
					$elm$core$String$fromInt(id),
					'students'
				]));
	},
	topics: function (semId) {
		return $author$project$Api$relativeUrl(
			_List_fromArray(
				[
					'semesters',
					$elm$core$String$fromInt(semId),
					'topics'
				]));
	}
};
var $elm$json$Json$Decode$decodeString = _Json_runOnString;
var $elm$http$Http$BadStatus_ = F2(
	function (a, b) {
		return {$: 'BadStatus_', a: a, b: b};
	});
var $elm$http$Http$BadUrl_ = function (a) {
	return {$: 'BadUrl_', a: a};
};
var $elm$http$Http$GoodStatus_ = F2(
	function (a, b) {
		return {$: 'GoodStatus_', a: a, b: b};
	});
var $elm$http$Http$NetworkError_ = {$: 'NetworkError_'};
var $elm$http$Http$Receiving = function (a) {
	return {$: 'Receiving', a: a};
};
var $elm$http$Http$Sending = function (a) {
	return {$: 'Sending', a: a};
};
var $elm$http$Http$Timeout_ = {$: 'Timeout_'};
var $elm$core$Maybe$isJust = function (maybe) {
	if (maybe.$ === 'Just') {
		return true;
	} else {
		return false;
	}
};
var $elm$core$Platform$sendToSelf = _Platform_sendToSelf;
var $elm$core$Basics$composeR = F3(
	function (f, g, x) {
		return g(
			f(x));
	});
var $elm$http$Http$expectStringResponse = F2(
	function (toMsg, toResult) {
		return A3(
			_Http_expect,
			'',
			$elm$core$Basics$identity,
			A2($elm$core$Basics$composeR, toResult, toMsg));
	});
var $elm$core$Result$mapError = F2(
	function (f, result) {
		if (result.$ === 'Ok') {
			var v = result.a;
			return $elm$core$Result$Ok(v);
		} else {
			var e = result.a;
			return $elm$core$Result$Err(
				f(e));
		}
	});
var $elm$http$Http$BadBody = function (a) {
	return {$: 'BadBody', a: a};
};
var $elm$http$Http$BadStatus = function (a) {
	return {$: 'BadStatus', a: a};
};
var $elm$http$Http$BadUrl = function (a) {
	return {$: 'BadUrl', a: a};
};
var $elm$http$Http$NetworkError = {$: 'NetworkError'};
var $elm$http$Http$Timeout = {$: 'Timeout'};
var $elm$http$Http$resolve = F2(
	function (toResult, response) {
		switch (response.$) {
			case 'BadUrl_':
				var url = response.a;
				return $elm$core$Result$Err(
					$elm$http$Http$BadUrl(url));
			case 'Timeout_':
				return $elm$core$Result$Err($elm$http$Http$Timeout);
			case 'NetworkError_':
				return $elm$core$Result$Err($elm$http$Http$NetworkError);
			case 'BadStatus_':
				var metadata = response.a;
				return $elm$core$Result$Err(
					$elm$http$Http$BadStatus(metadata.statusCode));
			default:
				var body = response.b;
				return A2(
					$elm$core$Result$mapError,
					$elm$http$Http$BadBody,
					toResult(body));
		}
	});
var $elm$http$Http$expectJson = F2(
	function (toMsg, decoder) {
		return A2(
			$elm$http$Http$expectStringResponse,
			toMsg,
			$elm$http$Http$resolve(
				function (string) {
					return A2(
						$elm$core$Result$mapError,
						$elm$json$Json$Decode$errorToString,
						A2($elm$json$Json$Decode$decodeString, decoder, string));
				}));
	});
var $elm$http$Http$emptyBody = _Http_emptyBody;
var $author$project$Api$requestParams = F5(
	function (method, headers, url, body, expect) {
		return {body: body, expect: expect, headers: headers, method: method, timeout: $elm$core$Maybe$Nothing, tracker: $elm$core$Maybe$Nothing, url: url};
	});
var $elm$http$Http$Request = function (a) {
	return {$: 'Request', a: a};
};
var $elm$http$Http$State = F2(
	function (reqs, subs) {
		return {reqs: reqs, subs: subs};
	});
var $elm$http$Http$init = $elm$core$Task$succeed(
	A2($elm$http$Http$State, $elm$core$Dict$empty, _List_Nil));
var $elm$core$Process$kill = _Scheduler_kill;
var $elm$core$Process$spawn = _Scheduler_spawn;
var $elm$http$Http$updateReqs = F3(
	function (router, cmds, reqs) {
		updateReqs:
		while (true) {
			if (!cmds.b) {
				return $elm$core$Task$succeed(reqs);
			} else {
				var cmd = cmds.a;
				var otherCmds = cmds.b;
				if (cmd.$ === 'Cancel') {
					var tracker = cmd.a;
					var _v2 = A2($elm$core$Dict$get, tracker, reqs);
					if (_v2.$ === 'Nothing') {
						var $temp$router = router,
							$temp$cmds = otherCmds,
							$temp$reqs = reqs;
						router = $temp$router;
						cmds = $temp$cmds;
						reqs = $temp$reqs;
						continue updateReqs;
					} else {
						var pid = _v2.a;
						return A2(
							$elm$core$Task$andThen,
							function (_v3) {
								return A3(
									$elm$http$Http$updateReqs,
									router,
									otherCmds,
									A2($elm$core$Dict$remove, tracker, reqs));
							},
							$elm$core$Process$kill(pid));
					}
				} else {
					var req = cmd.a;
					return A2(
						$elm$core$Task$andThen,
						function (pid) {
							var _v4 = req.tracker;
							if (_v4.$ === 'Nothing') {
								return A3($elm$http$Http$updateReqs, router, otherCmds, reqs);
							} else {
								var tracker = _v4.a;
								return A3(
									$elm$http$Http$updateReqs,
									router,
									otherCmds,
									A3($elm$core$Dict$insert, tracker, pid, reqs));
							}
						},
						$elm$core$Process$spawn(
							A3(
								_Http_toTask,
								router,
								$elm$core$Platform$sendToApp(router),
								req)));
				}
			}
		}
	});
var $elm$http$Http$onEffects = F4(
	function (router, cmds, subs, state) {
		return A2(
			$elm$core$Task$andThen,
			function (reqs) {
				return $elm$core$Task$succeed(
					A2($elm$http$Http$State, reqs, subs));
			},
			A3($elm$http$Http$updateReqs, router, cmds, state.reqs));
	});
var $elm$core$List$maybeCons = F3(
	function (f, mx, xs) {
		var _v0 = f(mx);
		if (_v0.$ === 'Just') {
			var x = _v0.a;
			return A2($elm$core$List$cons, x, xs);
		} else {
			return xs;
		}
	});
var $elm$core$List$filterMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			$elm$core$List$maybeCons(f),
			_List_Nil,
			xs);
	});
var $elm$http$Http$maybeSend = F4(
	function (router, desiredTracker, progress, _v0) {
		var actualTracker = _v0.a;
		var toMsg = _v0.b;
		return _Utils_eq(desiredTracker, actualTracker) ? $elm$core$Maybe$Just(
			A2(
				$elm$core$Platform$sendToApp,
				router,
				toMsg(progress))) : $elm$core$Maybe$Nothing;
	});
var $elm$http$Http$onSelfMsg = F3(
	function (router, _v0, state) {
		var tracker = _v0.a;
		var progress = _v0.b;
		return A2(
			$elm$core$Task$andThen,
			function (_v1) {
				return $elm$core$Task$succeed(state);
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$filterMap,
					A3($elm$http$Http$maybeSend, router, tracker, progress),
					state.subs)));
	});
var $elm$http$Http$Cancel = function (a) {
	return {$: 'Cancel', a: a};
};
var $elm$http$Http$cmdMap = F2(
	function (func, cmd) {
		if (cmd.$ === 'Cancel') {
			var tracker = cmd.a;
			return $elm$http$Http$Cancel(tracker);
		} else {
			var r = cmd.a;
			return $elm$http$Http$Request(
				{
					allowCookiesFromOtherDomains: r.allowCookiesFromOtherDomains,
					body: r.body,
					expect: A2(_Http_mapExpect, func, r.expect),
					headers: r.headers,
					method: r.method,
					timeout: r.timeout,
					tracker: r.tracker,
					url: r.url
				});
		}
	});
var $elm$http$Http$MySub = F2(
	function (a, b) {
		return {$: 'MySub', a: a, b: b};
	});
var $elm$http$Http$subMap = F2(
	function (func, _v0) {
		var tracker = _v0.a;
		var toMsg = _v0.b;
		return A2(
			$elm$http$Http$MySub,
			tracker,
			A2($elm$core$Basics$composeR, toMsg, func));
	});
_Platform_effectManagers['Http'] = _Platform_createManager($elm$http$Http$init, $elm$http$Http$onEffects, $elm$http$Http$onSelfMsg, $elm$http$Http$cmdMap, $elm$http$Http$subMap);
var $elm$http$Http$command = _Platform_leaf('Http');
var $elm$http$Http$subscription = _Platform_leaf('Http');
var $elm$http$Http$riskyRequest = function (r) {
	return $elm$http$Http$command(
		$elm$http$Http$Request(
			{allowCookiesFromOtherDomains: true, body: r.body, expect: r.expect, headers: r.headers, method: r.method, timeout: r.timeout, tracker: r.tracker, url: r.url}));
};
var $author$project$Api$getWithCredentials = function (_v0) {
	var apiBaseUrl = _v0.apiBaseUrl;
	var endpoint = _v0.endpoint;
	var expect = _v0.expect;
	var url = $author$project$Api$relativeUrl(
		_List_fromArray(
			[apiBaseUrl, endpoint]));
	return $elm$http$Http$riskyRequest(
		A5($author$project$Api$requestParams, 'GET', _List_Nil, url, $elm$http$Http$emptyBody, expect));
};
var $author$project$Session$silentTokenRefresh = function (apiBaseUrl) {
	return $author$project$Api$getWithCredentials(
		{
			apiBaseUrl: apiBaseUrl,
			endpoint: $author$project$Api$endpoints.refreshToken,
			expect: A2($elm$http$Http$expectJson, $author$project$Session$GotTokenResult, $author$project$Session$decodeSession)
		});
};
var $author$project$Main$init = F3(
	function (_v0, url, key) {
		var apiBaseUrl = _v0.apiBaseUrl;
		var sessionCheck = A2(
			$elm$core$Platform$Cmd$map,
			$author$project$Main$GotInitSessionMsg,
			$author$project$Session$silentTokenRefresh(apiBaseUrl));
		var route = $author$project$Route$fromUrl(url);
		return _Utils_Tuple2(
			{
				accessTokenExpiresIn: 0,
				apiBaseUrl: apiBaseUrl,
				currentPage: A2($author$project$Page$forRoute, route, apiBaseUrl),
				currentRoute: route,
				currentUser: $author$project$UserType$Guest,
				initalLoading: true,
				key: key,
				mainContent: $author$project$Main$NoContent
			},
			sessionCheck);
	});
var $author$project$Main$RefreshTick = function (a) {
	return {$: 'RefreshTick', a: a};
};
var $elm$core$Platform$Sub$batch = _Platform_batch;
var $elm$time$Time$Every = F2(
	function (a, b) {
		return {$: 'Every', a: a, b: b};
	});
var $elm$time$Time$State = F2(
	function (taggers, processes) {
		return {processes: processes, taggers: taggers};
	});
var $elm$time$Time$init = $elm$core$Task$succeed(
	A2($elm$time$Time$State, $elm$core$Dict$empty, $elm$core$Dict$empty));
var $elm$time$Time$addMySub = F2(
	function (_v0, state) {
		var interval = _v0.a;
		var tagger = _v0.b;
		var _v1 = A2($elm$core$Dict$get, interval, state);
		if (_v1.$ === 'Nothing') {
			return A3(
				$elm$core$Dict$insert,
				interval,
				_List_fromArray(
					[tagger]),
				state);
		} else {
			var taggers = _v1.a;
			return A3(
				$elm$core$Dict$insert,
				interval,
				A2($elm$core$List$cons, tagger, taggers),
				state);
		}
	});
var $elm$core$Dict$foldl = F3(
	function (func, acc, dict) {
		foldl:
		while (true) {
			if (dict.$ === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldl, func, acc, left)),
					$temp$dict = right;
				func = $temp$func;
				acc = $temp$acc;
				dict = $temp$dict;
				continue foldl;
			}
		}
	});
var $elm$core$Dict$merge = F6(
	function (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {
		var stepState = F3(
			function (rKey, rValue, _v0) {
				stepState:
				while (true) {
					var list = _v0.a;
					var result = _v0.b;
					if (!list.b) {
						return _Utils_Tuple2(
							list,
							A3(rightStep, rKey, rValue, result));
					} else {
						var _v2 = list.a;
						var lKey = _v2.a;
						var lValue = _v2.b;
						var rest = list.b;
						if (_Utils_cmp(lKey, rKey) < 0) {
							var $temp$rKey = rKey,
								$temp$rValue = rValue,
								$temp$_v0 = _Utils_Tuple2(
								rest,
								A3(leftStep, lKey, lValue, result));
							rKey = $temp$rKey;
							rValue = $temp$rValue;
							_v0 = $temp$_v0;
							continue stepState;
						} else {
							if (_Utils_cmp(lKey, rKey) > 0) {
								return _Utils_Tuple2(
									list,
									A3(rightStep, rKey, rValue, result));
							} else {
								return _Utils_Tuple2(
									rest,
									A4(bothStep, lKey, lValue, rValue, result));
							}
						}
					}
				}
			});
		var _v3 = A3(
			$elm$core$Dict$foldl,
			stepState,
			_Utils_Tuple2(
				$elm$core$Dict$toList(leftDict),
				initialResult),
			rightDict);
		var leftovers = _v3.a;
		var intermediateResult = _v3.b;
		return A3(
			$elm$core$List$foldl,
			F2(
				function (_v4, result) {
					var k = _v4.a;
					var v = _v4.b;
					return A3(leftStep, k, v, result);
				}),
			intermediateResult,
			leftovers);
	});
var $elm$time$Time$Name = function (a) {
	return {$: 'Name', a: a};
};
var $elm$time$Time$Offset = function (a) {
	return {$: 'Offset', a: a};
};
var $elm$time$Time$Zone = F2(
	function (a, b) {
		return {$: 'Zone', a: a, b: b};
	});
var $elm$time$Time$customZone = $elm$time$Time$Zone;
var $elm$time$Time$setInterval = _Time_setInterval;
var $elm$time$Time$spawnHelp = F3(
	function (router, intervals, processes) {
		if (!intervals.b) {
			return $elm$core$Task$succeed(processes);
		} else {
			var interval = intervals.a;
			var rest = intervals.b;
			var spawnTimer = $elm$core$Process$spawn(
				A2(
					$elm$time$Time$setInterval,
					interval,
					A2($elm$core$Platform$sendToSelf, router, interval)));
			var spawnRest = function (id) {
				return A3(
					$elm$time$Time$spawnHelp,
					router,
					rest,
					A3($elm$core$Dict$insert, interval, id, processes));
			};
			return A2($elm$core$Task$andThen, spawnRest, spawnTimer);
		}
	});
var $elm$time$Time$onEffects = F3(
	function (router, subs, _v0) {
		var processes = _v0.processes;
		var rightStep = F3(
			function (_v6, id, _v7) {
				var spawns = _v7.a;
				var existing = _v7.b;
				var kills = _v7.c;
				return _Utils_Tuple3(
					spawns,
					existing,
					A2(
						$elm$core$Task$andThen,
						function (_v5) {
							return kills;
						},
						$elm$core$Process$kill(id)));
			});
		var newTaggers = A3($elm$core$List$foldl, $elm$time$Time$addMySub, $elm$core$Dict$empty, subs);
		var leftStep = F3(
			function (interval, taggers, _v4) {
				var spawns = _v4.a;
				var existing = _v4.b;
				var kills = _v4.c;
				return _Utils_Tuple3(
					A2($elm$core$List$cons, interval, spawns),
					existing,
					kills);
			});
		var bothStep = F4(
			function (interval, taggers, id, _v3) {
				var spawns = _v3.a;
				var existing = _v3.b;
				var kills = _v3.c;
				return _Utils_Tuple3(
					spawns,
					A3($elm$core$Dict$insert, interval, id, existing),
					kills);
			});
		var _v1 = A6(
			$elm$core$Dict$merge,
			leftStep,
			bothStep,
			rightStep,
			newTaggers,
			processes,
			_Utils_Tuple3(
				_List_Nil,
				$elm$core$Dict$empty,
				$elm$core$Task$succeed(_Utils_Tuple0)));
		var spawnList = _v1.a;
		var existingDict = _v1.b;
		var killTask = _v1.c;
		return A2(
			$elm$core$Task$andThen,
			function (newProcesses) {
				return $elm$core$Task$succeed(
					A2($elm$time$Time$State, newTaggers, newProcesses));
			},
			A2(
				$elm$core$Task$andThen,
				function (_v2) {
					return A3($elm$time$Time$spawnHelp, router, spawnList, existingDict);
				},
				killTask));
	});
var $elm$time$Time$Posix = function (a) {
	return {$: 'Posix', a: a};
};
var $elm$time$Time$millisToPosix = $elm$time$Time$Posix;
var $elm$time$Time$now = _Time_now($elm$time$Time$millisToPosix);
var $elm$time$Time$onSelfMsg = F3(
	function (router, interval, state) {
		var _v0 = A2($elm$core$Dict$get, interval, state.taggers);
		if (_v0.$ === 'Nothing') {
			return $elm$core$Task$succeed(state);
		} else {
			var taggers = _v0.a;
			var tellTaggers = function (time) {
				return $elm$core$Task$sequence(
					A2(
						$elm$core$List$map,
						function (tagger) {
							return A2(
								$elm$core$Platform$sendToApp,
								router,
								tagger(time));
						},
						taggers));
			};
			return A2(
				$elm$core$Task$andThen,
				function (_v1) {
					return $elm$core$Task$succeed(state);
				},
				A2($elm$core$Task$andThen, tellTaggers, $elm$time$Time$now));
		}
	});
var $elm$time$Time$subMap = F2(
	function (f, _v0) {
		var interval = _v0.a;
		var tagger = _v0.b;
		return A2(
			$elm$time$Time$Every,
			interval,
			A2($elm$core$Basics$composeL, f, tagger));
	});
_Platform_effectManagers['Time'] = _Platform_createManager($elm$time$Time$init, $elm$time$Time$onEffects, $elm$time$Time$onSelfMsg, 0, $elm$time$Time$subMap);
var $elm$time$Time$subscription = _Platform_leaf('Time');
var $elm$time$Time$every = F2(
	function (interval, tagger) {
		return $elm$time$Time$subscription(
			A2($elm$time$Time$Every, interval, tagger));
	});
var $elm$core$Platform$Sub$none = $elm$core$Platform$Sub$batch(_List_Nil);
var $author$project$Main$subscriptions = function (_v0) {
	var currentUser = _v0.currentUser;
	var accessTokenExpiresIn = _v0.accessTokenExpiresIn;
	var refreshTick = function () {
		if (currentUser.$ === 'Guest') {
			return $elm$core$Platform$Sub$none;
		} else {
			return A2($elm$time$Time$every, 1000 * (accessTokenExpiresIn - 5), $author$project$Main$RefreshTick);
		}
	}();
	return $elm$core$Platform$Sub$batch(
		_List_fromArray(
			[refreshTick]));
};
var $author$project$Main$GotPasswordMsg = function (a) {
	return {$: 'GotPasswordMsg', a: a};
};
var $author$project$Main$GotProfessorMsg = function (a) {
	return {$: 'GotProfessorMsg', a: a};
};
var $author$project$Main$GotRegistrationMsg = function (a) {
	return {$: 'GotRegistrationMsg', a: a};
};
var $author$project$Main$GotSessionMsg = function (a) {
	return {$: 'GotSessionMsg', a: a};
};
var $author$project$Main$GotStudentMsg = function (a) {
	return {$: 'GotStudentMsg', a: a};
};
var $author$project$Main$ProfessorModel = function (a) {
	return {$: 'ProfessorModel', a: a};
};
var $author$project$Main$StudentModel = function (a) {
	return {$: 'StudentModel', a: a};
};
var $elm$core$Platform$Cmd$batch = _Platform_batch;
var $elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;
var $author$project$Route$professorSubRouteToString = function (route) {
	switch (route.$) {
		case 'RegistrationRequests':
			return '/registrations';
		case 'Activities':
			return '/activities';
		case 'ActivityAssignments':
			var activityId = route.a;
			return '/activities/' + ($elm$core$String$fromInt(activityId) + '/assignments');
		case 'Topics':
			return '/topics';
		default:
			return '/groups';
	}
};
var $author$project$Route$toString = function (route) {
	switch (route.$) {
		case 'Home':
			return '/';
		case 'Student':
			return '/student';
		case 'Login':
			return '/login';
		case 'Registration':
			return '/register';
		case 'Professor':
			var subRoute = route.a;
			return '/professor' + $author$project$Route$professorSubRouteToString(subRoute);
		case 'SetPassword':
			var uuid = route.a;
			return '/setPassword/' + uuid;
		default:
			return '/notFound';
	}
};
var $author$project$Route$redirectTo = F2(
	function (key, route) {
		return A2(
			$elm$browser$Browser$Navigation$pushUrl,
			key,
			$author$project$Route$toString(route));
	});
var $author$project$Route$guard = F3(
	function (user, route, key) {
		var redirectWithKey = $author$project$Route$redirectTo(key);
		var _v0 = _Utils_Tuple2(user, route);
		switch (_v0.a.$) {
			case 'Guest':
				switch (_v0.b.$) {
					case 'Home':
						var _v1 = _v0.a;
						var _v2 = _v0.b;
						return $elm$core$Maybe$Nothing;
					case 'Login':
						var _v3 = _v0.a;
						var _v4 = _v0.b;
						return $elm$core$Maybe$Nothing;
					case 'Registration':
						var _v5 = _v0.a;
						var _v6 = _v0.b;
						return $elm$core$Maybe$Nothing;
					case 'SetPassword':
						var _v7 = _v0.a;
						return $elm$core$Maybe$Nothing;
					default:
						return $elm$core$Maybe$Just(
							redirectWithKey($author$project$Route$NotFound));
				}
			case 'Student':
				if (_v0.b.$ === 'Student') {
					var _v8 = _v0.b;
					return $elm$core$Maybe$Nothing;
				} else {
					return $elm$core$Maybe$Just(
						redirectWithKey($author$project$Route$Home));
				}
			default:
				if (_v0.b.$ === 'Professor') {
					return $elm$core$Maybe$Nothing;
				} else {
					return $elm$core$Maybe$Just(
						redirectWithKey($author$project$Route$Home));
				}
		}
	});
var $author$project$ProfessorPage$AdjustTimeZone = function (a) {
	return {$: 'AdjustTimeZone', a: a};
};
var $author$project$ProfessorPage$GotRequestsMsg = function (a) {
	return {$: 'GotRequestsMsg', a: a};
};
var $author$project$ProfessorPage$GotTopicsMsg = function (a) {
	return {$: 'GotTopicsMsg', a: a};
};
var $author$project$ProfessorPage$LoadedActivities = function (a) {
	return {$: 'LoadedActivities', a: a};
};
var $author$project$Activity$Activity = F6(
	function (id, activityTypeId, startDate, endDate, isSignup, points) {
		return {activityTypeId: activityTypeId, endDate: endDate, id: id, isSignup: isSignup, points: points, startDate: startDate};
	});
var $elm$json$Json$Decode$bool = _Json_decodeBool;
var $elm$json$Json$Decode$map6 = _Json_map6;
var $author$project$Activity$decoder = A7(
	$elm$json$Json$Decode$map6,
	$author$project$Activity$Activity,
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'activity_type_id', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'start_date', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'end_date', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'is_signup', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'points', $elm$json$Json$Decode$int));
var $elm$http$Http$Header = F2(
	function (a, b) {
		return {$: 'Header', a: a, b: b};
	});
var $elm$http$Http$header = $elm$http$Http$Header;
var $author$project$Api$authHeader = function (token) {
	return A2($elm$http$Http$header, 'Authorization', 'Bearer ' + token);
};
var $elm$http$Http$request = function (r) {
	return $elm$http$Http$command(
		$elm$http$Http$Request(
			{allowCookiesFromOtherDomains: false, body: r.body, expect: r.expect, headers: r.headers, method: r.method, timeout: r.timeout, tracker: r.tracker, url: r.url}));
};
var $author$project$Api$get = function (_v0) {
	var apiBaseUrl = _v0.apiBaseUrl;
	var endpoint = _v0.endpoint;
	var token = _v0.token;
	var expect = _v0.expect;
	var url = $author$project$Api$relativeUrl(
		_List_fromArray(
			[apiBaseUrl, endpoint]));
	return $elm$http$Http$request(
		A5(
			$author$project$Api$requestParams,
			'GET',
			_List_fromArray(
				[
					$author$project$Api$authHeader(token)
				]),
			url,
			$elm$http$Http$emptyBody,
			expect));
};
var $elm$json$Json$Decode$list = _Json_decodeList;
var $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);
var $author$project$ProfessorPage$getActivities = function (_v0) {
	var currentSemesterId = _v0.currentSemesterId;
	var apiBaseUrl = _v0.apiBaseUrl;
	var accessToken = _v0.accessToken;
	var loadingActivities = _v0.loadingActivities;
	return loadingActivities ? $author$project$Api$get(
		{
			apiBaseUrl: apiBaseUrl,
			endpoint: $author$project$Api$endpoints.activities(currentSemesterId),
			expect: A2(
				$elm$http$Http$expectJson,
				$author$project$ProfessorPage$LoadedActivities,
				A2(
					$elm$json$Json$Decode$field,
					'data',
					$elm$json$Json$Decode$list($author$project$Activity$decoder))),
			token: accessToken
		}) : $elm$core$Platform$Cmd$none;
};
var $author$project$ProfessorPage$LoadedActivityTypes = function (a) {
	return {$: 'LoadedActivityTypes', a: a};
};
var $author$project$ActivityType$ActivityType = F7(
	function (id, name, code, description, isGroup, hasSignup, content) {
		return {code: code, content: content, description: description, hasSignup: hasSignup, id: id, isGroup: isGroup, name: name};
	});
var $author$project$ActivityType$Group = {$: 'Group'};
var $author$project$ActivityType$Other = {$: 'Other'};
var $author$project$ActivityType$Topic = {$: 'Topic'};
var $author$project$ActivityType$codeDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (code) {
		switch (code) {
			case 'group':
				return $elm$json$Json$Decode$succeed($author$project$ActivityType$Group);
			case 'topic':
				return $elm$json$Json$Decode$succeed($author$project$ActivityType$Topic);
			default:
				return $elm$json$Json$Decode$succeed($author$project$ActivityType$Other);
		}
	},
	$elm$json$Json$Decode$string);
var $author$project$ActivityType$Empty = {$: 'Empty'};
var $author$project$ActivityType$Files = function (a) {
	return {$: 'Files', a: a};
};
var $author$project$ActivityType$FileUploadInfo = F2(
	function (name, extension) {
		return {extension: extension, name: name};
	});
var $author$project$ActivityType$fileUploadDecoder = A3(
	$elm$json$Json$Decode$map2,
	$author$project$ActivityType$FileUploadInfo,
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'extension', $elm$json$Json$Decode$string));
var $author$project$ActivityType$contentDecoder = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$map,
			$author$project$ActivityType$Files,
			A2(
				$elm$json$Json$Decode$field,
				'files',
				$elm$json$Json$Decode$list($author$project$ActivityType$fileUploadDecoder))),
			$elm$json$Json$Decode$succeed($author$project$ActivityType$Empty)
		]));
var $elm$json$Json$Decode$map7 = _Json_map7;
var $author$project$ActivityType$decoder = A8(
	$elm$json$Json$Decode$map7,
	$author$project$ActivityType$ActivityType,
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'code', $author$project$ActivityType$codeDecoder),
	A2($elm$json$Json$Decode$field, 'description', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'is_group', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'has_signup', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'content', $author$project$ActivityType$contentDecoder));
var $author$project$ProfessorPage$getActivityTypes = function (_v0) {
	var apiBaseUrl = _v0.apiBaseUrl;
	var accessToken = _v0.accessToken;
	var loadingActivityTypes = _v0.loadingActivityTypes;
	return loadingActivityTypes ? $author$project$Api$get(
		{
			apiBaseUrl: apiBaseUrl,
			endpoint: $author$project$Api$endpoints.activityTypes,
			expect: A2(
				$elm$http$Http$expectJson,
				$author$project$ProfessorPage$LoadedActivityTypes,
				A2(
					$elm$json$Json$Decode$field,
					'data',
					$elm$json$Json$Decode$list($author$project$ActivityType$decoder))),
			token: accessToken
		}) : $elm$core$Platform$Cmd$none;
};
var $author$project$ProfessorPage$LoadedAssignments = function (a) {
	return {$: 'LoadedAssignments', a: a};
};
var $author$project$Assignment$ShallowAssignment = F7(
	function (id, activityId, studentId, groupId, grade, comment, completed) {
		return {activityId: activityId, comment: comment, completed: completed, grade: grade, groupId: groupId, id: id, studentId: studentId};
	});
var $author$project$Assignment$shallowDecoder = A8(
	$elm$json$Json$Decode$map7,
	$author$project$Assignment$ShallowAssignment,
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'activity_id', $elm$json$Json$Decode$int),
	A2(
		$elm$json$Json$Decode$field,
		'student_id',
		$elm$json$Json$Decode$nullable($elm$json$Json$Decode$int)),
	A2(
		$elm$json$Json$Decode$field,
		'group_id',
		$elm$json$Json$Decode$nullable($elm$json$Json$Decode$int)),
	A2(
		$elm$json$Json$Decode$field,
		'grade',
		$elm$json$Json$Decode$nullable($elm$json$Json$Decode$int)),
	A2(
		$elm$json$Json$Decode$field,
		'comment',
		$elm$json$Json$Decode$nullable($elm$json$Json$Decode$string)),
	A2($elm$json$Json$Decode$field, 'completed', $elm$json$Json$Decode$bool));
var $author$project$ProfessorPage$getAssignments = function (_v0) {
	var apiBaseUrl = _v0.apiBaseUrl;
	var accessToken = _v0.accessToken;
	var currentSemesterId = _v0.currentSemesterId;
	var loadingAssignment = _v0.loadingAssignment;
	return loadingAssignment ? $author$project$Api$get(
		{
			apiBaseUrl: apiBaseUrl,
			endpoint: $author$project$Api$endpoints.assignments(currentSemesterId),
			expect: A2(
				$elm$http$Http$expectJson,
				$author$project$ProfessorPage$LoadedAssignments,
				A2(
					$elm$json$Json$Decode$field,
					'data',
					$elm$json$Json$Decode$list($author$project$Assignment$shallowDecoder))),
			token: accessToken
		}) : $elm$core$Platform$Cmd$none;
};
var $author$project$ProfessorPage$LoadedGroups = function (a) {
	return {$: 'LoadedGroups', a: a};
};
var $author$project$Group$Group = F3(
	function (id, students, topic) {
		return {id: id, students: students, topic: topic};
	});
var $author$project$Student$Student = F6(
	function (id, email, firstName, lastName, indexNumber, groupId) {
		return {email: email, firstName: firstName, groupId: groupId, id: id, indexNumber: indexNumber, lastName: lastName};
	});
var $author$project$Student$decoder = A7(
	$elm$json$Json$Decode$map6,
	$author$project$Student$Student,
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'email', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'first_name', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'last_name', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'index_number', $elm$json$Json$Decode$string),
	A2(
		$elm$json$Json$Decode$field,
		'group_id',
		$elm$json$Json$Decode$nullable($elm$json$Json$Decode$int)));
var $author$project$Topic$Topic = F3(
	function (id, title, number) {
		return {id: id, number: number, title: title};
	});
var $elm$json$Json$Decode$map3 = _Json_map3;
var $author$project$Topic$decoder = A4(
	$elm$json$Json$Decode$map3,
	$author$project$Topic$Topic,
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'title', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'number', $elm$json$Json$Decode$int));
var $author$project$Group$decoder = A4(
	$elm$json$Json$Decode$map3,
	$author$project$Group$Group,
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
	A2(
		$elm$json$Json$Decode$field,
		'students',
		$elm$json$Json$Decode$list($author$project$Student$decoder)),
	A2(
		$elm$json$Json$Decode$field,
		'topic',
		$elm$json$Json$Decode$nullable($author$project$Topic$decoder)));
var $author$project$ProfessorPage$getGroups = function (_v0) {
	var apiBaseUrl = _v0.apiBaseUrl;
	var accessToken = _v0.accessToken;
	var currentSemesterId = _v0.currentSemesterId;
	var loadingGroups = _v0.loadingGroups;
	return loadingGroups ? $author$project$Api$get(
		{
			apiBaseUrl: apiBaseUrl,
			endpoint: $author$project$Api$endpoints.groups(currentSemesterId),
			expect: A2(
				$elm$http$Http$expectJson,
				$author$project$ProfessorPage$LoadedGroups,
				A2(
					$elm$json$Json$Decode$field,
					'data',
					$elm$json$Json$Decode$list($author$project$Group$decoder))),
			token: accessToken
		}) : $elm$core$Platform$Cmd$none;
};
var $author$project$ProfessorPage$LoadedStudents = function (a) {
	return {$: 'LoadedStudents', a: a};
};
var $author$project$ProfessorPage$getStudents = function (_v0) {
	var apiBaseUrl = _v0.apiBaseUrl;
	var accessToken = _v0.accessToken;
	var currentSemesterId = _v0.currentSemesterId;
	var loadingStudents = _v0.loadingStudents;
	return loadingStudents ? $author$project$Api$get(
		{
			apiBaseUrl: apiBaseUrl,
			endpoint: $author$project$Api$endpoints.students(currentSemesterId),
			expect: A2(
				$elm$http$Http$expectJson,
				$author$project$ProfessorPage$LoadedStudents,
				A2(
					$elm$json$Json$Decode$field,
					'data',
					$elm$json$Json$Decode$list($author$project$Student$decoder))),
			token: accessToken
		}) : $elm$core$Platform$Cmd$none;
};
var $elm$time$Time$here = _Time_here(_Utils_Tuple0);
var $author$project$ProfessorPage$RegistrationRequestsPage$GotLoadingResult = function (a) {
	return {$: 'GotLoadingResult', a: a};
};
var $author$project$ProfessorPage$RegistrationRequestsPage$RegistrationRequest = F6(
	function (id, firstName, lastName, email, index, status) {
		return {email: email, firstName: firstName, id: id, index: index, lastName: lastName, status: status};
	});
var $author$project$ProfessorPage$RegistrationRequestsPage$requestDecoder = A7(
	$elm$json$Json$Decode$map6,
	$author$project$ProfessorPage$RegistrationRequestsPage$RegistrationRequest,
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'first_name', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'last_name', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'email', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'index_number', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'status', $elm$json$Json$Decode$string));
var $author$project$ProfessorPage$RegistrationRequestsPage$requestsListDecoder = A2(
	$elm$json$Json$Decode$field,
	'data',
	$elm$json$Json$Decode$list($author$project$ProfessorPage$RegistrationRequestsPage$requestDecoder));
var $author$project$ProfessorPage$RegistrationRequestsPage$loadRequests = F2(
	function (model, _v0) {
		var currentSemesterId = _v0.currentSemesterId;
		var apiBaseUrl = _v0.apiBaseUrl;
		var accessToken = _v0.accessToken;
		return model.isInitialized ? $elm$core$Platform$Cmd$none : $author$project$Api$get(
			{
				apiBaseUrl: apiBaseUrl,
				endpoint: $author$project$Api$endpoints.registrationsPerSemester(currentSemesterId),
				expect: A2($elm$http$Http$expectJson, $author$project$ProfessorPage$RegistrationRequestsPage$GotLoadingResult, $author$project$ProfessorPage$RegistrationRequestsPage$requestsListDecoder),
				token: accessToken
			});
	});
var $author$project$ProfessorPage$TopicsPage$TopicsLoaded = function (a) {
	return {$: 'TopicsLoaded', a: a};
};
var $author$project$Topic$loadTopics = function (_v0) {
	var semesterId = _v0.semesterId;
	var token = _v0.token;
	var apiBaseUrl = _v0.apiBaseUrl;
	var msg = _v0.msg;
	var onlyAvailable = _v0.onlyAvailable;
	var endpoint = _Utils_ap(
		$author$project$Api$endpoints.topics(semesterId),
		onlyAvailable ? '?available=true' : '');
	return $author$project$Api$get(
		{
			apiBaseUrl: apiBaseUrl,
			endpoint: endpoint,
			expect: A2(
				$elm$http$Http$expectJson,
				msg,
				A2(
					$elm$json$Json$Decode$field,
					'data',
					$elm$json$Json$Decode$list($author$project$Topic$decoder))),
			token: token
		});
};
var $author$project$ProfessorPage$TopicsPage$loadTopicsIfUnitialized = F2(
	function (model, _v0) {
		var accessToken = _v0.accessToken;
		var currentSemesterId = _v0.currentSemesterId;
		var apiBaseUrl = _v0.apiBaseUrl;
		return model.isInitialized ? $elm$core$Platform$Cmd$none : $author$project$Topic$loadTopics(
			{apiBaseUrl: apiBaseUrl, msg: $author$project$ProfessorPage$TopicsPage$TopicsLoaded, onlyAvailable: false, semesterId: currentSemesterId, token: accessToken});
	});
var $author$project$ProfessorPage$initCmd = F2(
	function (model, route) {
		var activitiesCmd = $elm$core$Platform$Cmd$batch(
			_List_fromArray(
				[
					A2($elm$core$Task$perform, $author$project$ProfessorPage$AdjustTimeZone, $elm$time$Time$here),
					$author$project$ProfessorPage$getActivities(model),
					$author$project$ProfessorPage$getActivityTypes(model)
				]));
		switch (route.$) {
			case 'RegistrationRequests':
				return A2(
					$elm$core$Platform$Cmd$map,
					$author$project$ProfessorPage$GotRequestsMsg,
					A2($author$project$ProfessorPage$RegistrationRequestsPage$loadRequests, model.requstesModel, model));
			case 'Topics':
				return A2(
					$elm$core$Platform$Cmd$map,
					$author$project$ProfessorPage$GotTopicsMsg,
					A2($author$project$ProfessorPage$TopicsPage$loadTopicsIfUnitialized, model.topicsModel, model));
			case 'ActivityAssignments':
				return $elm$core$Platform$Cmd$batch(
					_List_fromArray(
						[
							activitiesCmd,
							$author$project$ProfessorPage$getAssignments(model),
							$author$project$ProfessorPage$getStudents(model),
							$author$project$ProfessorPage$getGroups(model)
						]));
			case 'Activities':
				return activitiesCmd;
			default:
				return $author$project$ProfessorPage$getGroups(model);
		}
	});
var $author$project$StudentPage$AdjustTimeZone = function (a) {
	return {$: 'AdjustTimeZone', a: a};
};
var $author$project$StudentPage$CurrentTime = function (a) {
	return {$: 'CurrentTime', a: a};
};
var $author$project$StudentPage$LoadedAssignments = function (a) {
	return {$: 'LoadedAssignments', a: a};
};
var $elm$json$Json$Decode$array = _Json_decodeArray;
var $author$project$Assignment$Assignment = F6(
	function (id, grade, completed, comment, activity, activityType) {
		return {activity: activity, activityType: activityType, comment: comment, completed: completed, grade: grade, id: id};
	});
var $author$project$Assignment$decoder = A7(
	$elm$json$Json$Decode$map6,
	$author$project$Assignment$Assignment,
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
	A2(
		$elm$json$Json$Decode$field,
		'grade',
		$elm$json$Json$Decode$nullable($elm$json$Json$Decode$int)),
	A2($elm$json$Json$Decode$field, 'completed', $elm$json$Json$Decode$bool),
	A2(
		$elm$json$Json$Decode$field,
		'comment',
		$elm$json$Json$Decode$nullable($elm$json$Json$Decode$string)),
	A2($elm$json$Json$Decode$field, 'activity', $author$project$Activity$decoder),
	A2($elm$json$Json$Decode$field, 'activity_type', $author$project$ActivityType$decoder));
var $author$project$StudentPage$getAssignments = function (_v0) {
	var accessToken = _v0.accessToken;
	var semesterId = _v0.semesterId;
	var studentId = _v0.studentId;
	var apiBaseUrl = _v0.apiBaseUrl;
	return $author$project$Api$get(
		{
			apiBaseUrl: apiBaseUrl,
			endpoint: A2($author$project$Api$endpoints.student, semesterId, studentId) + '/assignments',
			expect: A2(
				$elm$http$Http$expectJson,
				$author$project$StudentPage$LoadedAssignments,
				A2(
					$elm$json$Json$Decode$field,
					'data',
					$elm$json$Json$Decode$array($author$project$Assignment$decoder))),
			token: accessToken
		});
};
var $elm$core$Array$isEmpty = function (_v0) {
	var len = _v0.a;
	return !len;
};
var $author$project$StudentPage$loadAssignmentsCmd = function (model) {
	return $elm$core$Array$isEmpty(model.assignments) ? $author$project$StudentPage$getAssignments(model) : $elm$core$Platform$Cmd$none;
};
var $author$project$StudentPage$LoadedGroup = function (a) {
	return {$: 'LoadedGroup', a: a};
};
var $author$project$StudentPage$loadGroup = function (_v0) {
	var groupId = _v0.groupId;
	var accessToken = _v0.accessToken;
	var apiBaseUrl = _v0.apiBaseUrl;
	if (groupId.$ === 'Just') {
		var id = groupId.a;
		return $author$project$Api$get(
			{
				apiBaseUrl: apiBaseUrl,
				endpoint: $author$project$Api$endpoints.group(id),
				expect: A2(
					$elm$http$Http$expectJson,
					$author$project$StudentPage$LoadedGroup,
					A2($elm$json$Json$Decode$field, 'data', $author$project$Group$decoder)),
				token: accessToken
			});
	} else {
		return $elm$core$Platform$Cmd$none;
	}
};
var $author$project$StudentPage$initCmd = function (model) {
	return $elm$core$Platform$Cmd$batch(
		_List_fromArray(
			[
				A2($elm$core$Task$perform, $author$project$StudentPage$AdjustTimeZone, $elm$time$Time$here),
				A2($elm$core$Task$perform, $author$project$StudentPage$CurrentTime, $elm$time$Time$now),
				$author$project$StudentPage$loadAssignmentsCmd(model),
				$author$project$StudentPage$loadGroup(model)
			]));
};
var $author$project$Main$initCommand = function (_v0) {
	var currentRoute = _v0.currentRoute;
	var mainContent = _v0.mainContent;
	var _v1 = _Utils_Tuple2(currentRoute, mainContent);
	_v1$2:
	while (true) {
		switch (_v1.a.$) {
			case 'Professor':
				if (_v1.b.$ === 'ProfessorModel') {
					var profRoute = _v1.a.a;
					var profModel = _v1.b.a;
					return A2(
						$elm$core$Platform$Cmd$map,
						$author$project$Main$GotProfessorMsg,
						A2($author$project$ProfessorPage$initCmd, profModel, profRoute));
				} else {
					break _v1$2;
				}
			case 'Student':
				if (_v1.b.$ === 'StudentModel') {
					var _v2 = _v1.a;
					var studentModel = _v1.b.a;
					return A2(
						$elm$core$Platform$Cmd$map,
						$author$project$Main$GotStudentMsg,
						$author$project$StudentPage$initCmd(studentModel));
				} else {
					break _v1$2;
				}
			default:
				break _v1$2;
		}
	}
	return $elm$core$Platform$Cmd$none;
};
var $elm$browser$Browser$Navigation$load = _Browser_load;
var $author$project$Session$DeleteSessionResult = function (a) {
	return {$: 'DeleteSessionResult', a: a};
};
var $elm$http$Http$expectBytesResponse = F2(
	function (toMsg, toResult) {
		return A3(
			_Http_expect,
			'arraybuffer',
			_Http_toDataView,
			A2($elm$core$Basics$composeR, toResult, toMsg));
	});
var $elm$http$Http$expectWhatever = function (toMsg) {
	return A2(
		$elm$http$Http$expectBytesResponse,
		toMsg,
		$elm$http$Http$resolve(
			function (_v0) {
				return $elm$core$Result$Ok(_Utils_Tuple0);
			}));
};
var $author$project$Session$logout = function (apiBaseUrl) {
	return $author$project$Api$getWithCredentials(
		{
			apiBaseUrl: apiBaseUrl,
			endpoint: $author$project$Api$endpoints.logout,
			expect: $elm$http$Http$expectWhatever($author$project$Session$DeleteSessionResult)
		});
};
var $author$project$Main$toPageWithModel = F4(
	function (page, toMsg, model, _v0) {
		var pageModel = _v0.a;
		var pageCmd = _v0.b;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{
					currentPage: page(pageModel)
				}),
			A2($elm$core$Platform$Cmd$map, toMsg, pageCmd));
	});
var $elm$url$Url$addPort = F2(
	function (maybePort, starter) {
		if (maybePort.$ === 'Nothing') {
			return starter;
		} else {
			var port_ = maybePort.a;
			return starter + (':' + $elm$core$String$fromInt(port_));
		}
	});
var $elm$url$Url$addPrefixed = F3(
	function (prefix, maybeSegment, starter) {
		if (maybeSegment.$ === 'Nothing') {
			return starter;
		} else {
			var segment = maybeSegment.a;
			return _Utils_ap(
				starter,
				_Utils_ap(prefix, segment));
		}
	});
var $elm$url$Url$toString = function (url) {
	var http = function () {
		var _v0 = url.protocol;
		if (_v0.$ === 'Http') {
			return 'http://';
		} else {
			return 'https://';
		}
	}();
	return A3(
		$elm$url$Url$addPrefixed,
		'#',
		url.fragment,
		A3(
			$elm$url$Url$addPrefixed,
			'?',
			url.query,
			_Utils_ap(
				A2(
					$elm$url$Url$addPort,
					url.port_,
					_Utils_ap(http, url.host)),
				url.path)));
};
var $author$project$Session$GotSessionResult = function (a) {
	return {$: 'GotSessionResult', a: a};
};
var $elm$http$Http$jsonBody = function (value) {
	return A2(
		_Http_pair,
		'application/json',
		A2($elm$json$Json$Encode$encode, 0, value));
};
var $elm$json$Json$Encode$object = function (pairs) {
	return _Json_wrap(
		A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, obj) {
					var k = _v0.a;
					var v = _v0.b;
					return A3(_Json_addField, k, v, obj);
				}),
			_Json_emptyObject(_Utils_Tuple0),
			pairs));
};
var $author$project$Api$postWithCredentials = function (_v0) {
	var apiBaseUrl = _v0.apiBaseUrl;
	var endpoint = _v0.endpoint;
	var body = _v0.body;
	var expect = _v0.expect;
	var url = $author$project$Api$relativeUrl(
		_List_fromArray(
			[apiBaseUrl, endpoint]));
	return $elm$http$Http$riskyRequest(
		A5($author$project$Api$requestParams, 'POST', _List_Nil, url, body, expect));
};
var $elm$json$Json$Encode$string = _Json_wrap;
var $author$project$Session$getSession = function (_v0) {
	var email = _v0.email;
	var password = _v0.password;
	var apiBaseUrl = _v0.apiBaseUrl;
	var body = $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'email',
				$elm$json$Json$Encode$string(email)),
				_Utils_Tuple2(
				'password',
				$elm$json$Json$Encode$string(password))
			]));
	return $author$project$Api$postWithCredentials(
		{
			apiBaseUrl: apiBaseUrl,
			body: $elm$http$Http$jsonBody(body),
			endpoint: $author$project$Api$endpoints.login,
			expect: A2($elm$http$Http$expectJson, $author$project$Session$GotSessionResult, $author$project$Session$decodeSession)
		});
};
var $author$project$LoginPage$update = F2(
	function (msg, model) {
		switch (msg.$) {
			case 'Email':
				var email = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{email: email}),
					$elm$core$Platform$Cmd$none);
			case 'Password':
				var password = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{password: password}),
					$elm$core$Platform$Cmd$none);
			case 'SetShowPassword':
				var showPassword = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{showPassword: showPassword}),
					$elm$core$Platform$Cmd$none);
			default:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{error: $elm$core$Maybe$Nothing, processing: true}),
					$author$project$Session$getSession(
						{apiBaseUrl: model.apiBaseUrl, email: model.email, password: model.password}));
		}
	});
var $author$project$ProfessorPage$GotActivitiesMsg = function (a) {
	return {$: 'GotActivitiesMsg', a: a};
};
var $author$project$ProfessorPage$GotActivityAssignmentsMsg = function (a) {
	return {$: 'GotActivityAssignmentsMsg', a: a};
};
var $author$project$ProfessorPage$ActivityAssignmentsPage$UpatedAssignement = function (a) {
	return {$: 'UpatedAssignement', a: a};
};
var $elm$core$List$filter = F2(
	function (isGood, list) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, xs) {
					return isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;
				}),
			_List_Nil,
			list);
	});
var $author$project$ProfessorPage$ActivitiesPage$New = {$: 'New'};
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$Closed = {$: 'Closed'};
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$init = $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$Closed;
var $author$project$ProfessorPage$ActivitiesPage$init = {endDate: '', hasProcessingError: false, isSignup: false, modalAction: $author$project$ProfessorPage$ActivitiesPage$New, modalState: $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$init, points: 0, processingActivity: false, selectedActivityTypeId: $elm$core$Maybe$Nothing, startDate: ''};
var $elm$core$Debug$log = _Debug_log;
var $elm$core$Basics$neq = _Utils_notEqual;
var $elm$core$Dict$fromList = function (assocs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, dict) {
				var key = _v0.a;
				var value = _v0.b;
				return A3($elm$core$Dict$insert, key, value, dict);
			}),
		$elm$core$Dict$empty,
		assocs);
};
var $author$project$Util$toDict = A2(
	$elm$core$Basics$composeL,
	$elm$core$Dict$fromList,
	$elm$core$List$map(
		function (x) {
			return _Utils_Tuple2(x.id, x);
		}));
var $elm$core$Debug$toString = _Debug_toString;
var $author$project$Util$EditMode = {$: 'EditMode'};
var $author$project$ProfessorPage$ActivitiesPage$ModalMsg = function (a) {
	return {$: 'ModalMsg', a: a};
};
var $elm$core$String$cons = _String_cons;
var $elm$core$String$fromChar = function (_char) {
	return A2($elm$core$String$cons, _char, '');
};
var $elm$core$Bitwise$and = _Bitwise_and;
var $elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;
var $elm$core$String$repeatHelp = F3(
	function (n, chunk, result) {
		return (n <= 0) ? result : A3(
			$elm$core$String$repeatHelp,
			n >> 1,
			_Utils_ap(chunk, chunk),
			(!(n & 1)) ? result : _Utils_ap(result, chunk));
	});
var $elm$core$String$repeat = F2(
	function (n, chunk) {
		return A3($elm$core$String$repeatHelp, n, chunk, '');
	});
var $elm$core$String$padLeft = F3(
	function (n, _char, string) {
		return _Utils_ap(
			A2(
				$elm$core$String$repeat,
				n - $elm$core$String$length(string),
				$elm$core$String$fromChar(_char)),
			string);
	});
var $elm$time$Time$flooredDiv = F2(
	function (numerator, denominator) {
		return $elm$core$Basics$floor(numerator / denominator);
	});
var $elm$time$Time$posixToMillis = function (_v0) {
	var millis = _v0.a;
	return millis;
};
var $elm$time$Time$toAdjustedMinutesHelp = F3(
	function (defaultOffset, posixMinutes, eras) {
		toAdjustedMinutesHelp:
		while (true) {
			if (!eras.b) {
				return posixMinutes + defaultOffset;
			} else {
				var era = eras.a;
				var olderEras = eras.b;
				if (_Utils_cmp(era.start, posixMinutes) < 0) {
					return posixMinutes + era.offset;
				} else {
					var $temp$defaultOffset = defaultOffset,
						$temp$posixMinutes = posixMinutes,
						$temp$eras = olderEras;
					defaultOffset = $temp$defaultOffset;
					posixMinutes = $temp$posixMinutes;
					eras = $temp$eras;
					continue toAdjustedMinutesHelp;
				}
			}
		}
	});
var $elm$time$Time$toAdjustedMinutes = F2(
	function (_v0, time) {
		var defaultOffset = _v0.a;
		var eras = _v0.b;
		return A3(
			$elm$time$Time$toAdjustedMinutesHelp,
			defaultOffset,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				60000),
			eras);
	});
var $elm$core$Basics$ge = _Utils_ge;
var $elm$core$Basics$negate = function (n) {
	return -n;
};
var $elm$time$Time$toCivil = function (minutes) {
	var rawDay = A2($elm$time$Time$flooredDiv, minutes, 60 * 24) + 719468;
	var era = (((rawDay >= 0) ? rawDay : (rawDay - 146096)) / 146097) | 0;
	var dayOfEra = rawDay - (era * 146097);
	var yearOfEra = ((((dayOfEra - ((dayOfEra / 1460) | 0)) + ((dayOfEra / 36524) | 0)) - ((dayOfEra / 146096) | 0)) / 365) | 0;
	var dayOfYear = dayOfEra - (((365 * yearOfEra) + ((yearOfEra / 4) | 0)) - ((yearOfEra / 100) | 0));
	var mp = (((5 * dayOfYear) + 2) / 153) | 0;
	var month = mp + ((mp < 10) ? 3 : (-9));
	var year = yearOfEra + (era * 400);
	return {
		day: (dayOfYear - ((((153 * mp) + 2) / 5) | 0)) + 1,
		month: month,
		year: year + ((month <= 2) ? 1 : 0)
	};
};
var $elm$time$Time$toDay = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).day;
	});
var $elm$time$Time$Apr = {$: 'Apr'};
var $elm$time$Time$Aug = {$: 'Aug'};
var $elm$time$Time$Dec = {$: 'Dec'};
var $elm$time$Time$Feb = {$: 'Feb'};
var $elm$time$Time$Jan = {$: 'Jan'};
var $elm$time$Time$Jul = {$: 'Jul'};
var $elm$time$Time$Jun = {$: 'Jun'};
var $elm$time$Time$Mar = {$: 'Mar'};
var $elm$time$Time$May = {$: 'May'};
var $elm$time$Time$Nov = {$: 'Nov'};
var $elm$time$Time$Oct = {$: 'Oct'};
var $elm$time$Time$Sep = {$: 'Sep'};
var $elm$time$Time$toMonth = F2(
	function (zone, time) {
		var _v0 = $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).month;
		switch (_v0) {
			case 1:
				return $elm$time$Time$Jan;
			case 2:
				return $elm$time$Time$Feb;
			case 3:
				return $elm$time$Time$Mar;
			case 4:
				return $elm$time$Time$Apr;
			case 5:
				return $elm$time$Time$May;
			case 6:
				return $elm$time$Time$Jun;
			case 7:
				return $elm$time$Time$Jul;
			case 8:
				return $elm$time$Time$Aug;
			case 9:
				return $elm$time$Time$Sep;
			case 10:
				return $elm$time$Time$Oct;
			case 11:
				return $elm$time$Time$Nov;
			default:
				return $elm$time$Time$Dec;
		}
	});
var $author$project$Util$toTwoDigitMonth = function (month) {
	switch (month.$) {
		case 'Jan':
			return '01';
		case 'Feb':
			return '02';
		case 'Mar':
			return '03';
		case 'Apr':
			return '04';
		case 'May':
			return '05';
		case 'Jun':
			return '06';
		case 'Jul':
			return '07';
		case 'Aug':
			return '08';
		case 'Sep':
			return '09';
		case 'Oct':
			return '10';
		case 'Nov':
			return '11';
		default:
			return '12';
	}
};
var $elm$time$Time$toYear = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).year;
	});
var $author$project$Util$dateView = F3(
	function (mode, zone, timeInSecs) {
		var time = $elm$time$Time$millisToPosix(timeInSecs * 1000);
		var year = $elm$core$String$fromInt(
			A2($elm$time$Time$toYear, zone, time));
		var month = $author$project$Util$toTwoDigitMonth(
			A2($elm$time$Time$toMonth, zone, time));
		var day = A3(
			$elm$core$String$padLeft,
			2,
			_Utils_chr('0'),
			$elm$core$String$fromInt(
				A2($elm$time$Time$toDay, zone, time)));
		if (mode.$ === 'DisplayMode') {
			return day + ('.' + (month + ('.' + (year + '.'))));
		} else {
			return year + ('-' + (month + ('-' + day)));
		}
	});
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$Focused = function (a) {
	return {$: 'Focused', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$Opened = function (a) {
	return {$: 'Opened', a: a};
};
var $elm$core$Task$onError = _Scheduler_onError;
var $elm$core$Task$attempt = F2(
	function (resultToMessage, task) {
		return $elm$core$Task$command(
			$elm$core$Task$Perform(
				A2(
					$elm$core$Task$onError,
					A2(
						$elm$core$Basics$composeL,
						A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
						$elm$core$Result$Err),
					A2(
						$elm$core$Task$andThen,
						A2(
							$elm$core$Basics$composeL,
							A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
							$elm$core$Result$Ok),
						task))));
	});
var $elm$browser$Browser$Dom$focus = _Browser_call('focus');
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$open = function (_v0) {
	var startFocusOn = _v0.startFocusOn;
	var returnFocusTo = _v0.returnFocusTo;
	return _Utils_Tuple2(
		$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$Opened(returnFocusTo),
		A2(
			$elm$core$Task$attempt,
			$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$Focused,
			$elm$browser$Browser$Dom$focus(startFocusOn)));
};
var $author$project$ProfessorPage$ActivitiesPage$SavedActivity = function (a) {
	return {$: 'SavedActivity', a: a};
};
var $elm$core$Maybe$andThen = F2(
	function (callback, maybeValue) {
		if (maybeValue.$ === 'Just') {
			var value = maybeValue.a;
			return callback(value);
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Day = function (a) {
	return {$: 'Day', a: a};
};
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$dayToInt = function (_v0) {
	var day = _v0.a;
	return day;
};
var $elm$core$Basics$modBy = _Basics_modBy;
var $elm$core$Basics$not = _Basics_not;
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$isLeapYear = function (_v0) {
	var _int = _v0.a;
	return (!A2($elm$core$Basics$modBy, 4, _int)) && ((!A2($elm$core$Basics$modBy, 400, _int)) || (!(!A2($elm$core$Basics$modBy, 100, _int))));
};
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$lastDayOf = F2(
	function (year, month) {
		switch (month.$) {
			case 'Jan':
				return $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Day(31);
			case 'Feb':
				return $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$isLeapYear(year) ? $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Day(29) : $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Day(28);
			case 'Mar':
				return $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Day(31);
			case 'Apr':
				return $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Day(30);
			case 'May':
				return $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Day(31);
			case 'Jun':
				return $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Day(30);
			case 'Jul':
				return $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Day(31);
			case 'Aug':
				return $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Day(31);
			case 'Sep':
				return $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Day(30);
			case 'Oct':
				return $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Day(31);
			case 'Nov':
				return $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Day(30);
			default:
				return $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Day(31);
		}
	});
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$dayFromInt = F3(
	function (year, month, day) {
		var maxValidDay = $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$dayToInt(
			A2($PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$lastDayOf, year, month));
		return ((day > 0) && (!_Utils_eq(
			A2($elm$core$Basics$compare, day, maxValidDay),
			$elm$core$Basics$GT))) ? $elm$core$Maybe$Just(
			$PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Day(day)) : $elm$core$Maybe$Nothing;
	});
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Date = function (a) {
	return {$: 'Date', a: a};
};
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$compareDays = F2(
	function (lhs, rhs) {
		return A2(
			$elm$core$Basics$compare,
			$PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$dayToInt(lhs),
			$PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$dayToInt(rhs));
	});
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$fromYearMonthDay = F3(
	function (y, m, d) {
		var maxDay = A2($PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$lastDayOf, y, m);
		var _v0 = A2($PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$compareDays, d, maxDay);
		if (_v0.$ === 'GT') {
			return $elm$core$Maybe$Nothing;
		} else {
			return $elm$core$Maybe$Just(
				$PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Date(
					{day: d, month: m, year: y}));
		}
	});
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$fromRawDay = F3(
	function (year, month, day) {
		return A2(
			$elm$core$Maybe$andThen,
			A2($PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$fromYearMonthDay, year, month),
			A3($PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$dayFromInt, year, month, day));
	});
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Year = function (a) {
	return {$: 'Year', a: a};
};
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$yearFromInt = function (year) {
	return (year > 0) ? $elm$core$Maybe$Just(
		$PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$Year(year)) : $elm$core$Maybe$Nothing;
};
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$fromRawParts = function (_v0) {
	var year = _v0.year;
	var month = _v0.month;
	var day = _v0.day;
	return A2(
		$elm$core$Maybe$andThen,
		function (y) {
			return A3($PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$fromRawDay, y, month, day);
		},
		$PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$yearFromInt(year));
};
var $PanagiotisGeorgiadis$elm_datetime$Calendar$fromRawParts = $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$fromRawParts;
var $author$project$Util$intToMonth = function (month) {
	switch (month) {
		case 1:
			return $elm$core$Maybe$Just($elm$time$Time$Jan);
		case 2:
			return $elm$core$Maybe$Just($elm$time$Time$Feb);
		case 3:
			return $elm$core$Maybe$Just($elm$time$Time$Mar);
		case 4:
			return $elm$core$Maybe$Just($elm$time$Time$Apr);
		case 5:
			return $elm$core$Maybe$Just($elm$time$Time$May);
		case 6:
			return $elm$core$Maybe$Just($elm$time$Time$Jun);
		case 7:
			return $elm$core$Maybe$Just($elm$time$Time$Jul);
		case 8:
			return $elm$core$Maybe$Just($elm$time$Time$Aug);
		case 9:
			return $elm$core$Maybe$Just($elm$time$Time$Sep);
		case 10:
			return $elm$core$Maybe$Just($elm$time$Time$Oct);
		case 11:
			return $elm$core$Maybe$Just($elm$time$Time$Nov);
		case 12:
			return $elm$core$Maybe$Just($elm$time$Time$Dec);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Util$dateFromString = function (stringTime) {
	var _v0 = A2(
		$elm$core$List$filterMap,
		$elm$core$String$toInt,
		A2($elm$core$String$split, '-', stringTime));
	if (((_v0.b && _v0.b.b) && _v0.b.b.b) && (!_v0.b.b.b.b)) {
		var year = _v0.a;
		var _v1 = _v0.b;
		var month = _v1.a;
		var _v2 = _v1.b;
		var day = _v2.a;
		return A2(
			$elm$core$Maybe$andThen,
			function (m) {
				return $PanagiotisGeorgiadis$elm_datetime$Calendar$fromRawParts(
					{day: day, month: m, year: year});
			},
			$author$project$Util$intToMonth(month));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$json$Json$Encode$bool = _Json_wrap;
var $elm$json$Json$Encode$int = _Json_wrap;
var $author$project$Activity$encode = function (_v0) {
	var startDate = _v0.startDate;
	var endDate = _v0.endDate;
	var points = _v0.points;
	var activityTypeId = _v0.activityTypeId;
	var isSignup = _v0.isSignup;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'start_date',
				$elm$json$Json$Encode$int(startDate)),
				_Utils_Tuple2(
				'end_date',
				$elm$json$Json$Encode$int(endDate)),
				_Utils_Tuple2(
				'points',
				$elm$json$Json$Encode$int(points)),
				_Utils_Tuple2(
				'activity_type_id',
				$elm$json$Json$Encode$int(activityTypeId)),
				_Utils_Tuple2(
				'is_signup',
				$elm$json$Json$Encode$bool(isSignup))
			]));
};
var $author$project$Api$post = function (_v0) {
	var apiBaseUrl = _v0.apiBaseUrl;
	var endpoint = _v0.endpoint;
	var body = _v0.body;
	var token = _v0.token;
	var expect = _v0.expect;
	var url = $author$project$Api$relativeUrl(
		_List_fromArray(
			[apiBaseUrl, endpoint]));
	return $elm$http$Http$request(
		A5(
			$author$project$Api$requestParams,
			'POST',
			_List_fromArray(
				[
					$author$project$Api$authHeader(token)
				]),
			url,
			body,
			expect));
};
var $author$project$Api$put = function (_v0) {
	var apiBaseUrl = _v0.apiBaseUrl;
	var endpoint = _v0.endpoint;
	var body = _v0.body;
	var token = _v0.token;
	var expect = _v0.expect;
	var url = $author$project$Api$relativeUrl(
		_List_fromArray(
			[apiBaseUrl, endpoint]));
	return $elm$http$Http$request(
		A5(
			$author$project$Api$requestParams,
			'PUT',
			_List_fromArray(
				[
					$author$project$Api$authHeader(token)
				]),
			url,
			body,
			expect));
};
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$millisInADay = ((1000 * 60) * 60) * 24;
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$millisInYear = function (year) {
	return $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$isLeapYear(year) ? ($PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$millisInADay * 366) : ($PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$millisInADay * 365);
};
var $elm$core$List$sum = function (numbers) {
	return A3($elm$core$List$foldl, $elm$core$Basics$add, 0, numbers);
};
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$millisSinceEpoch = function (_v0) {
	var year = _v0.a;
	var getTotalMillis = A2(
		$elm$core$Basics$composeL,
		A2(
			$elm$core$Basics$composeL,
			$elm$core$List$sum,
			$elm$core$List$map($PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$millisInYear)),
		$elm$core$List$filterMap($PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$yearFromInt));
	var epochYear = 1970;
	return (year >= 1970) ? getTotalMillis(
		A2($elm$core$List$range, epochYear, year - 1)) : (-getTotalMillis(
		A2($elm$core$List$range, year, epochYear - 1)));
};
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$millisSinceStartOfTheMonth = function (day) {
	return $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$millisInADay * ($PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$dayToInt(day) - 1);
};
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$monthToInt = function (month) {
	switch (month.$) {
		case 'Jan':
			return 1;
		case 'Feb':
			return 2;
		case 'Mar':
			return 3;
		case 'Apr':
			return 4;
		case 'May':
			return 5;
		case 'Jun':
			return 6;
		case 'Jul':
			return 7;
		case 'Aug':
			return 8;
		case 'Sep':
			return 9;
		case 'Oct':
			return 10;
		case 'Nov':
			return 11;
		default:
			return 12;
	}
};
var $elm$core$Array$fromListHelp = F3(
	function (list, nodeList, nodeListSize) {
		fromListHelp:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, list);
			var jsArray = _v0.a;
			var remainingItems = _v0.b;
			if (_Utils_cmp(
				$elm$core$Elm$JsArray$length(jsArray),
				$elm$core$Array$branchFactor) < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					true,
					{nodeList: nodeList, nodeListSize: nodeListSize, tail: jsArray});
			} else {
				var $temp$list = remainingItems,
					$temp$nodeList = A2(
					$elm$core$List$cons,
					$elm$core$Array$Leaf(jsArray),
					nodeList),
					$temp$nodeListSize = nodeListSize + 1;
				list = $temp$list;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue fromListHelp;
			}
		}
	});
var $elm$core$Array$fromList = function (list) {
	if (!list.b) {
		return $elm$core$Array$empty;
	} else {
		return A3($elm$core$Array$fromListHelp, list, _List_Nil, 0);
	}
};
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$months = $elm$core$Array$fromList(
	_List_fromArray(
		[$elm$time$Time$Jan, $elm$time$Time$Feb, $elm$time$Time$Mar, $elm$time$Time$Apr, $elm$time$Time$May, $elm$time$Time$Jun, $elm$time$Time$Jul, $elm$time$Time$Aug, $elm$time$Time$Sep, $elm$time$Time$Oct, $elm$time$Time$Nov, $elm$time$Time$Dec]));
var $elm$core$Elm$JsArray$appendN = _JsArray_appendN;
var $elm$core$Elm$JsArray$slice = _JsArray_slice;
var $elm$core$Array$appendHelpBuilder = F2(
	function (tail, builder) {
		var tailLen = $elm$core$Elm$JsArray$length(tail);
		var notAppended = ($elm$core$Array$branchFactor - $elm$core$Elm$JsArray$length(builder.tail)) - tailLen;
		var appended = A3($elm$core$Elm$JsArray$appendN, $elm$core$Array$branchFactor, builder.tail, tail);
		return (notAppended < 0) ? {
			nodeList: A2(
				$elm$core$List$cons,
				$elm$core$Array$Leaf(appended),
				builder.nodeList),
			nodeListSize: builder.nodeListSize + 1,
			tail: A3($elm$core$Elm$JsArray$slice, notAppended, tailLen, tail)
		} : ((!notAppended) ? {
			nodeList: A2(
				$elm$core$List$cons,
				$elm$core$Array$Leaf(appended),
				builder.nodeList),
			nodeListSize: builder.nodeListSize + 1,
			tail: $elm$core$Elm$JsArray$empty
		} : {nodeList: builder.nodeList, nodeListSize: builder.nodeListSize, tail: appended});
	});
var $elm$core$List$drop = F2(
	function (n, list) {
		drop:
		while (true) {
			if (n <= 0) {
				return list;
			} else {
				if (!list.b) {
					return list;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs;
					n = $temp$n;
					list = $temp$list;
					continue drop;
				}
			}
		}
	});
var $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;
var $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;
var $elm$core$Array$tailIndex = function (len) {
	return (len >>> 5) << 5;
};
var $elm$core$Array$sliceLeft = F2(
	function (from, array) {
		var len = array.a;
		var tree = array.c;
		var tail = array.d;
		if (!from) {
			return array;
		} else {
			if (_Utils_cmp(
				from,
				$elm$core$Array$tailIndex(len)) > -1) {
				return A4(
					$elm$core$Array$Array_elm_builtin,
					len - from,
					$elm$core$Array$shiftStep,
					$elm$core$Elm$JsArray$empty,
					A3(
						$elm$core$Elm$JsArray$slice,
						from - $elm$core$Array$tailIndex(len),
						$elm$core$Elm$JsArray$length(tail),
						tail));
			} else {
				var skipNodes = (from / $elm$core$Array$branchFactor) | 0;
				var helper = F2(
					function (node, acc) {
						if (node.$ === 'SubTree') {
							var subTree = node.a;
							return A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);
						} else {
							var leaf = node.a;
							return A2($elm$core$List$cons, leaf, acc);
						}
					});
				var leafNodes = A3(
					$elm$core$Elm$JsArray$foldr,
					helper,
					_List_fromArray(
						[tail]),
					tree);
				var nodesToInsert = A2($elm$core$List$drop, skipNodes, leafNodes);
				if (!nodesToInsert.b) {
					return $elm$core$Array$empty;
				} else {
					var head = nodesToInsert.a;
					var rest = nodesToInsert.b;
					var firstSlice = from - (skipNodes * $elm$core$Array$branchFactor);
					var initialBuilder = {
						nodeList: _List_Nil,
						nodeListSize: 0,
						tail: A3(
							$elm$core$Elm$JsArray$slice,
							firstSlice,
							$elm$core$Elm$JsArray$length(head),
							head)
					};
					return A2(
						$elm$core$Array$builderToArray,
						true,
						A3($elm$core$List$foldl, $elm$core$Array$appendHelpBuilder, initialBuilder, rest));
				}
			}
		}
	});
var $elm$core$Array$bitMask = 4294967295 >>> (32 - $elm$core$Array$shiftStep);
var $elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;
var $elm$core$Array$fetchNewTail = F4(
	function (shift, end, treeEnd, tree) {
		fetchNewTail:
		while (true) {
			var pos = $elm$core$Array$bitMask & (treeEnd >>> shift);
			var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (_v0.$ === 'SubTree') {
				var sub = _v0.a;
				var $temp$shift = shift - $elm$core$Array$shiftStep,
					$temp$end = end,
					$temp$treeEnd = treeEnd,
					$temp$tree = sub;
				shift = $temp$shift;
				end = $temp$end;
				treeEnd = $temp$treeEnd;
				tree = $temp$tree;
				continue fetchNewTail;
			} else {
				var values = _v0.a;
				return A3($elm$core$Elm$JsArray$slice, 0, $elm$core$Array$bitMask & end, values);
			}
		}
	});
var $elm$core$Array$hoistTree = F3(
	function (oldShift, newShift, tree) {
		hoistTree:
		while (true) {
			if ((_Utils_cmp(oldShift, newShift) < 1) || (!$elm$core$Elm$JsArray$length(tree))) {
				return tree;
			} else {
				var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, 0, tree);
				if (_v0.$ === 'SubTree') {
					var sub = _v0.a;
					var $temp$oldShift = oldShift - $elm$core$Array$shiftStep,
						$temp$newShift = newShift,
						$temp$tree = sub;
					oldShift = $temp$oldShift;
					newShift = $temp$newShift;
					tree = $temp$tree;
					continue hoistTree;
				} else {
					return tree;
				}
			}
		}
	});
var $elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;
var $elm$core$Array$sliceTree = F3(
	function (shift, endIdx, tree) {
		var lastPos = $elm$core$Array$bitMask & (endIdx >>> shift);
		var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, lastPos, tree);
		if (_v0.$ === 'SubTree') {
			var sub = _v0.a;
			var newSub = A3($elm$core$Array$sliceTree, shift - $elm$core$Array$shiftStep, endIdx, sub);
			return (!$elm$core$Elm$JsArray$length(newSub)) ? A3($elm$core$Elm$JsArray$slice, 0, lastPos, tree) : A3(
				$elm$core$Elm$JsArray$unsafeSet,
				lastPos,
				$elm$core$Array$SubTree(newSub),
				A3($elm$core$Elm$JsArray$slice, 0, lastPos + 1, tree));
		} else {
			return A3($elm$core$Elm$JsArray$slice, 0, lastPos, tree);
		}
	});
var $elm$core$Array$sliceRight = F2(
	function (end, array) {
		var len = array.a;
		var startShift = array.b;
		var tree = array.c;
		var tail = array.d;
		if (_Utils_eq(end, len)) {
			return array;
		} else {
			if (_Utils_cmp(
				end,
				$elm$core$Array$tailIndex(len)) > -1) {
				return A4(
					$elm$core$Array$Array_elm_builtin,
					end,
					startShift,
					tree,
					A3($elm$core$Elm$JsArray$slice, 0, $elm$core$Array$bitMask & end, tail));
			} else {
				var endIdx = $elm$core$Array$tailIndex(end);
				var depth = $elm$core$Basics$floor(
					A2(
						$elm$core$Basics$logBase,
						$elm$core$Array$branchFactor,
						A2($elm$core$Basics$max, 1, endIdx - 1)));
				var newShift = A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep);
				return A4(
					$elm$core$Array$Array_elm_builtin,
					end,
					newShift,
					A3(
						$elm$core$Array$hoistTree,
						startShift,
						newShift,
						A3($elm$core$Array$sliceTree, startShift, endIdx, tree)),
					A4($elm$core$Array$fetchNewTail, startShift, end, endIdx, tree));
			}
		}
	});
var $elm$core$Array$translateIndex = F2(
	function (index, _v0) {
		var len = _v0.a;
		var posIndex = (index < 0) ? (len + index) : index;
		return (posIndex < 0) ? 0 : ((_Utils_cmp(posIndex, len) > 0) ? len : posIndex);
	});
var $elm$core$Array$slice = F3(
	function (from, to, array) {
		var correctTo = A2($elm$core$Array$translateIndex, to, array);
		var correctFrom = A2($elm$core$Array$translateIndex, from, array);
		return (_Utils_cmp(correctFrom, correctTo) > 0) ? $elm$core$Array$empty : A2(
			$elm$core$Array$sliceLeft,
			correctFrom,
			A2($elm$core$Array$sliceRight, correctTo, array));
	});
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$getPrecedingMonths = function (month) {
	return $elm$core$Array$toList(
		A3(
			$elm$core$Array$slice,
			0,
			$PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$monthToInt(month) - 1,
			$PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$months));
};
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$millisSinceStartOfTheYear = F2(
	function (year, month) {
		return A3(
			$elm$core$List$foldl,
			F2(
				function (m, res) {
					return res + ($PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$millisInADay * $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$dayToInt(
						A2($PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$lastDayOf, year, m)));
				}),
			0,
			$PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$getPrecedingMonths(month));
	});
var $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$toMillis = function (_v0) {
	var year = _v0.a.year;
	var month = _v0.a.month;
	var day = _v0.a.day;
	return ($PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$millisSinceEpoch(year) + A2($PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$millisSinceStartOfTheYear, year, month)) + $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$millisSinceStartOfTheMonth(day);
};
var $PanagiotisGeorgiadis$elm_datetime$Calendar$toMillis = $PanagiotisGeorgiadis$elm_datetime$Calendar$Internal$toMillis;
var $author$project$Util$secsFromDate = A2(
	$elm$core$Basics$composeL,
	function (x) {
		return (x / 1000) | 0;
	},
	$PanagiotisGeorgiadis$elm_datetime$Calendar$toMillis);
var $author$project$ProfessorPage$ActivitiesPage$saveActivity = F2(
	function (model, _v0) {
		var accessToken = _v0.accessToken;
		var currentSemesterId = _v0.currentSemesterId;
		var apiBaseUrl = _v0.apiBaseUrl;
		var dates = A2(
			$elm$core$List$map,
			$author$project$Util$secsFromDate,
			A2(
				$elm$core$List$filterMap,
				$author$project$Util$dateFromString,
				_List_fromArray(
					[model.startDate, model.endDate])));
		var _v1 = function () {
			var _v2 = model.modalAction;
			if (_v2.$ === 'New') {
				return _Utils_Tuple2(
					$author$project$Api$post,
					$author$project$Api$endpoints.activities(currentSemesterId));
			} else {
				var id = _v2.a.id;
				return _Utils_Tuple2(
					$author$project$Api$put,
					$author$project$Api$endpoints.activity(id));
			}
		}();
		var apiCall = _v1.a;
		var endpoint = _v1.b;
		var _v3 = _Utils_Tuple2(dates, model.selectedActivityTypeId);
		if (((_v3.a.b && _v3.a.b.b) && (!_v3.a.b.b.b)) && (_v3.b.$ === 'Just')) {
			var _v4 = _v3.a;
			var sd = _v4.a;
			var _v5 = _v4.b;
			var ed = _v5.a;
			var typeId = _v3.b.a;
			return apiCall(
				{
					apiBaseUrl: apiBaseUrl,
					body: $elm$http$Http$jsonBody(
						$elm$json$Json$Encode$object(
							_List_fromArray(
								[
									_Utils_Tuple2(
									'activity',
									$author$project$Activity$encode(
										{activityTypeId: typeId, endDate: ed, isSignup: model.isSignup, points: model.points, startDate: sd}))
								]))),
					endpoint: endpoint,
					expect: A2(
						$elm$http$Http$expectJson,
						$author$project$ProfessorPage$ActivitiesPage$SavedActivity,
						A2($elm$json$Json$Decode$field, 'data', $author$project$Activity$decoder)),
					token: accessToken
				});
		} else {
			return $elm$core$Platform$Cmd$none;
		}
	});
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$close = function (model) {
	if (model.$ === 'Opened') {
		var returnFocusTo = model.a;
		return _Utils_Tuple2(
			$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$Closed,
			A2(
				$elm$core$Task$attempt,
				$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$Focused,
				$elm$browser$Browser$Dom$focus(returnFocusTo)));
	} else {
		return _Utils_Tuple2($NoRedInk$noredink_ui$Nri$Ui$Modal$V11$Closed, $elm$core$Platform$Cmd$none);
	}
};
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$update = F3(
	function (_v0, msg, model) {
		var dismissOnEscAndOverlayClick = _v0.dismissOnEscAndOverlayClick;
		switch (msg.$) {
			case 'CloseButtonClicked':
				return $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$close(model);
			case 'EscOrOverlayClicked':
				return dismissOnEscAndOverlayClick ? $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$close(model) : _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
			default:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$ProfessorPage$ActivitiesPage$update = F3(
	function (msg, model, params) {
		var zone = params.zone;
		switch (msg.$) {
			case 'OpenModal':
				var action = msg.a;
				var config = msg.b;
				var dateEdit = A2($author$project$Util$dateView, $author$project$Util$EditMode, zone);
				var _v1 = function () {
					if (action.$ === 'New') {
						return {endDate: '', points: 0, selectedTypeId: $elm$core$Maybe$Nothing, startDate: ''};
					} else {
						var activity = action.a;
						return {
							endDate: dateEdit(activity.endDate),
							points: activity.points,
							selectedTypeId: $elm$core$Maybe$Just(activity.activityTypeId),
							startDate: dateEdit(activity.startDate)
						};
					}
				}();
				var startDate = _v1.startDate;
				var endDate = _v1.endDate;
				var points = _v1.points;
				var selectedTypeId = _v1.selectedTypeId;
				var _v3 = $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$open(config);
				var modalState = _v3.a;
				var cmd = _v3.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{endDate: endDate, modalAction: action, modalState: modalState, points: points, selectedActivityTypeId: selectedTypeId, startDate: startDate}),
					A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$ActivitiesPage$ModalMsg, cmd));
			case 'ModalMsg':
				var modalMsg = msg.a;
				var _v4 = A3(
					$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$update,
					{dismissOnEscAndOverlayClick: false},
					modalMsg,
					model.modalState);
				var modalState = _v4.a;
				var cmd = _v4.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{modalState: modalState}),
					A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$ActivitiesPage$ModalMsg, cmd));
			case 'Dismiss':
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{hasProcessingError: false}),
					$elm$core$Platform$Cmd$none);
			case 'ActivityTypeSelected':
				var typeId = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							selectedActivityTypeId: $elm$core$Maybe$Just(typeId)
						}),
					$elm$core$Platform$Cmd$none);
			case 'StartDate':
				var value = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{startDate: value}),
					$elm$core$Platform$Cmd$none);
			case 'EndDate':
				var value = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{endDate: value}),
					$elm$core$Platform$Cmd$none);
			case 'Points':
				var maybePoints = msg.a;
				if (maybePoints.$ === 'Just') {
					var points = maybePoints.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{points: points}),
						$elm$core$Platform$Cmd$none);
				} else {
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{points: 0}),
						$elm$core$Platform$Cmd$none);
				}
			case 'SaveActivity':
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{hasProcessingError: false, processingActivity: true}),
					A2($author$project$ProfessorPage$ActivitiesPage$saveActivity, model, params));
			case 'SwitchSingup':
				var isSignup = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{isSignup: isSignup}),
					$elm$core$Platform$Cmd$none);
			default:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$ProfessorPage$ActivityAssignmentsPage$DownloadedFile = F2(
	function (a, b) {
		return {$: 'DownloadedFile', a: a, b: b};
	});
var $author$project$ProfessorPage$ActivityAssignmentsPage$ModalMsg = function (a) {
	return {$: 'ModalMsg', a: a};
};
var $author$project$Util$expectBytes = function (toMsg) {
	return A2(
		$elm$http$Http$expectBytesResponse,
		toMsg,
		function (response) {
			switch (response.$) {
				case 'BadUrl_':
					var url = response.a;
					return $elm$core$Result$Err(
						$elm$http$Http$BadUrl(url));
				case 'Timeout_':
					return $elm$core$Result$Err($elm$http$Http$Timeout);
				case 'NetworkError_':
					return $elm$core$Result$Err($elm$http$Http$NetworkError);
				case 'BadStatus_':
					var metadata = response.a;
					return $elm$core$Result$Err(
						$elm$http$Http$BadStatus(metadata.statusCode));
				default:
					var body = response.b;
					return $elm$core$Result$Ok(body);
			}
		});
};
var $author$project$Util$downlaodFile = F3(
	function (documentId, _v0, msg) {
		var apiBaseUrl = _v0.apiBaseUrl;
		var token = _v0.token;
		return $author$project$Api$get(
			{
				apiBaseUrl: apiBaseUrl,
				endpoint: $author$project$Api$endpoints.document(documentId),
				expect: $author$project$Util$expectBytes(msg),
				token: token
			});
	});
var $author$project$ProfessorPage$ActivityAssignmentsPage$LoadedFiles = F2(
	function (a, b) {
		return {$: 'LoadedFiles', a: a, b: b};
	});
var $author$project$FileInfo$FileInfo = F3(
	function (id, attached, fileName) {
		return {attached: attached, fileName: fileName, id: id};
	});
var $author$project$FileInfo$decoder = A4(
	$elm$json$Json$Decode$map3,
	$author$project$FileInfo$FileInfo,
	A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'attached', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'file_name', $elm$json$Json$Decode$string));
var $author$project$Util$loadFiles = F3(
	function (assignmentId, _v0, msg) {
		var apiBaseUrl = _v0.apiBaseUrl;
		var token = _v0.token;
		return $author$project$Api$get(
			{
				apiBaseUrl: apiBaseUrl,
				endpoint: $author$project$Api$endpoints.documents(assignmentId),
				expect: A2(
					$elm$http$Http$expectJson,
					msg,
					A2(
						$elm$json$Json$Decode$field,
						'data',
						$elm$json$Json$Decode$list($author$project$FileInfo$decoder))),
				token: token
			});
	});
var $author$project$ProfessorPage$ActivityAssignmentsPage$loadFiles = F2(
	function (assignmentId, apiParams) {
		return A3(
			$author$project$Util$loadFiles,
			assignmentId,
			apiParams,
			$author$project$ProfessorPage$ActivityAssignmentsPage$LoadedFiles(assignmentId));
	});
var $elm$file$File$Download$bytes = F3(
	function (name, mime, content) {
		return A2(
			$elm$core$Task$perform,
			$elm$core$Basics$never,
			A3(
				_File_download,
				name,
				mime,
				_File_makeBytesSafeForInternetExplorer(content)));
	});
var $author$project$Util$saveData = F2(
	function (fileName, bytes) {
		return A3($elm$file$File$Download$bytes, fileName, 'application/pdf', bytes);
	});
var $author$project$ProfessorPage$ActivityAssignmentsPage$updateAssignement = F4(
	function (assignmentId, comment, grade, _v0) {
		var token = _v0.token;
		var apiBaseUrl = _v0.apiBaseUrl;
		var body = $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'assignment',
					$elm$json$Json$Encode$object(
						_List_fromArray(
							[
								_Utils_Tuple2(
								'comment',
								$elm$json$Json$Encode$string(comment)),
								_Utils_Tuple2(
								'grade',
								$elm$json$Json$Encode$int(grade))
							])))
				]));
		return $author$project$Api$put(
			{
				apiBaseUrl: apiBaseUrl,
				body: $elm$http$Http$jsonBody(body),
				endpoint: $author$project$Api$endpoints.assignment(assignmentId),
				expect: A2(
					$elm$http$Http$expectJson,
					$author$project$ProfessorPage$ActivityAssignmentsPage$UpatedAssignement,
					A2($elm$json$Json$Decode$field, 'data', $author$project$Assignment$shallowDecoder)),
				token: token
			});
	});
var $author$project$ProfessorPage$ActivityAssignmentsPage$UploadedFile = F2(
	function (a, b) {
		return {$: 'UploadedFile', a: a, b: b};
	});
var $elm$http$Http$filePart = _Http_pair;
var $elm$http$Http$multipartBody = function (parts) {
	return A2(
		_Http_pair,
		'',
		_Http_toFormData(parts));
};
var $author$project$ProfessorPage$ActivityAssignmentsPage$uploadFile = F3(
	function (assignmentId, file, _v0) {
		var token = _v0.token;
		var apiBaseUrl = _v0.apiBaseUrl;
		var body = $elm$http$Http$multipartBody(
			_List_fromArray(
				[
					A2($elm$http$Http$filePart, 'document', file)
				]));
		return $author$project$Api$post(
			{
				apiBaseUrl: apiBaseUrl,
				body: body,
				endpoint: $author$project$Api$endpoints.documents(assignmentId),
				expect: A2(
					$elm$http$Http$expectJson,
					$author$project$ProfessorPage$ActivityAssignmentsPage$UploadedFile(assignmentId),
					A2($elm$json$Json$Decode$field, 'data', $author$project$FileInfo$decoder)),
				token: token
			});
	});
var $author$project$ProfessorPage$ActivityAssignmentsPage$update = F3(
	function (msg, model, _v0) {
		var accessToken = _v0.accessToken;
		var apiBaseUrl = _v0.apiBaseUrl;
		_v1$13:
		while (true) {
			switch (msg.$) {
				case 'OpenModal':
					var modalType = msg.a;
					var assignment = msg.b;
					var config = msg.c;
					var documents = A2($elm$core$Dict$get, assignment.id, model.files);
					var _v2 = $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$open(config);
					var modalState = _v2.a;
					var modalCmd = _v2.b;
					var _v3 = function () {
						var _v4 = _Utils_Tuple2(modalType, documents);
						if ((_v4.a.$ === 'DocumentModal') && (_v4.b.$ === 'Nothing')) {
							var _v5 = _v4.a;
							var _v6 = _v4.b;
							return _Utils_Tuple2(
								$elm$core$Platform$Cmd$batch(
									_List_fromArray(
										[
											A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$ActivityAssignmentsPage$ModalMsg, modalCmd),
											A2(
											$author$project$ProfessorPage$ActivityAssignmentsPage$loadFiles,
											assignment.id,
											{apiBaseUrl: apiBaseUrl, token: accessToken})
										])),
								true);
						} else {
							return _Utils_Tuple2(
								A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$ActivityAssignmentsPage$ModalMsg, modalCmd),
								model.loadingFiles);
						}
					}();
					var cmd = _v3.a;
					var loadingFiles = _v3.b;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								comment: A2($elm$core$Maybe$withDefault, '', assignment.comment),
								grade: assignment.grade,
								loadingFiles: loadingFiles,
								modalState: modalState,
								modalType: modalType,
								selectedAssignment: assignment
							}),
						cmd);
				case 'ModalMsg':
					var modalMsg = msg.a;
					var _v7 = A3(
						$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$update,
						{dismissOnEscAndOverlayClick: false},
						modalMsg,
						model.modalState);
					var modalState = _v7.a;
					var cmd = _v7.b;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{modalState: modalState}),
						A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$ActivityAssignmentsPage$ModalMsg, cmd));
				case 'LoadedFiles':
					var assignmentId = msg.a;
					var result = msg.b;
					if (result.$ === 'Ok') {
						var files = result.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									files: A3($elm$core$Dict$insert, assignmentId, files, model.files),
									loadingFiles: false
								}),
							$elm$core$Platform$Cmd$none);
					} else {
						var err = result.a;
						return A2(
							$elm$core$Debug$log,
							$elm$core$Debug$toString(err),
							_Utils_Tuple2(
								_Utils_update(
									model,
									{loadingFiles: false}),
								$elm$core$Platform$Cmd$none));
					}
				case 'DownloadFile':
					var id = msg.a.id;
					var fileName = msg.a.fileName;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{processingModal: true}),
						A3(
							$author$project$Util$downlaodFile,
							id,
							{apiBaseUrl: apiBaseUrl, token: accessToken},
							$author$project$ProfessorPage$ActivityAssignmentsPage$DownloadedFile(fileName)));
				case 'DownloadedFile':
					var fileName = msg.a;
					var result = msg.b;
					var model_ = _Utils_update(
						model,
						{processingModal: false});
					if (result.$ === 'Ok') {
						var data = result.a;
						return _Utils_Tuple2(
							model_,
							A2($author$project$Util$saveData, fileName, data));
					} else {
						return _Utils_Tuple2(
							_Utils_update(
								model_,
								{hasProcessingError: true}),
							$elm$core$Platform$Cmd$none);
					}
				case 'SelectedFile':
					if (msg.a.b && (!msg.a.b.b)) {
						var _v10 = msg.a;
						var file = _v10.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									selectedFile: $elm$core$Maybe$Just(file)
								}),
							$elm$core$Platform$Cmd$none);
					} else {
						break _v1$13;
					}
				case 'UploadFile':
					var file = msg.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{hasProcessingError: false, processingModal: true}),
						A3(
							$author$project$ProfessorPage$ActivityAssignmentsPage$uploadFile,
							model.selectedAssignment.id,
							file,
							{apiBaseUrl: apiBaseUrl, token: accessToken}));
				case 'UploadedFile':
					var assignmentId = msg.a;
					var result = msg.b;
					var model_ = _Utils_update(
						model,
						{processingModal: false});
					var docs = A2($elm$core$Dict$get, assignmentId, model.files);
					var _v11 = $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$close(model.modalState);
					var modalState = _v11.a;
					var cmd = _v11.b;
					if (result.$ === 'Ok') {
						var file = result.a;
						return _Utils_Tuple2(
							_Utils_update(
								model_,
								{modalState: modalState, selectedFile: $elm$core$Maybe$Nothing}),
							A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$ActivityAssignmentsPage$ModalMsg, cmd));
					} else {
						var err = result.a;
						return A2(
							$elm$core$Debug$log,
							$elm$core$Debug$toString(err),
							_Utils_Tuple2(
								_Utils_update(
									model_,
									{hasProcessingError: true}),
								$elm$core$Platform$Cmd$none));
					}
				case 'Comment':
					var comment = msg.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{comment: comment}),
						$elm$core$Platform$Cmd$none);
				case 'Grade':
					var grade = msg.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{grade: grade}),
						$elm$core$Platform$Cmd$none);
				case 'UpateAssignement':
					var grade = msg.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{hasProcessingError: false, processingModal: true}),
						A4(
							$author$project$ProfessorPage$ActivityAssignmentsPage$updateAssignement,
							model.selectedAssignment.id,
							model.comment,
							grade,
							{apiBaseUrl: apiBaseUrl, token: accessToken}));
				case 'UpatedAssignement':
					var result = msg.a;
					var model_ = _Utils_update(
						model,
						{processingModal: false});
					var _v13 = $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$close(model.modalState);
					var modalState = _v13.a;
					var cmd = _v13.b;
					if (result.$ === 'Ok') {
						return _Utils_Tuple2(
							_Utils_update(
								model_,
								{modalState: modalState}),
							A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$ActivityAssignmentsPage$ModalMsg, cmd));
					} else {
						var err = result.a;
						return A2(
							$elm$core$Debug$log,
							$elm$core$Debug$toString(err),
							_Utils_Tuple2(
								_Utils_update(
									model_,
									{hasProcessingError: true}),
								$elm$core$Platform$Cmd$none));
					}
				case 'Dismiss':
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{hasProcessingError: false}),
						$elm$core$Platform$Cmd$none);
				default:
					break _v1$13;
			}
		}
		return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	});
var $author$project$ProfessorPage$RegistrationRequestsPage$ModalMsg = function (a) {
	return {$: 'ModalMsg', a: a};
};
var $elm$core$List$partition = F2(
	function (pred, list) {
		var step = F2(
			function (x, _v0) {
				var trues = _v0.a;
				var falses = _v0.b;
				return pred(x) ? _Utils_Tuple2(
					A2($elm$core$List$cons, x, trues),
					falses) : _Utils_Tuple2(
					trues,
					A2($elm$core$List$cons, x, falses));
			});
		return A3(
			$elm$core$List$foldr,
			step,
			_Utils_Tuple2(_List_Nil, _List_Nil),
			list);
	});
var $author$project$ProfessorPage$RegistrationRequestsPage$statusAccepted = 'accepted';
var $author$project$ProfessorPage$RegistrationRequestsPage$statusPending = 'pending';
var $author$project$ProfessorPage$RegistrationRequestsPage$processData = F2(
	function (model, data) {
		var _v0 = A2(
			$elm$core$List$partition,
			function (x) {
				return _Utils_eq(x.status, $author$project$ProfessorPage$RegistrationRequestsPage$statusPending);
			},
			data);
		var pendingRequests = _v0.a;
		var nonPendingRequests = _v0.b;
		var _v1 = A2(
			$elm$core$List$partition,
			function (x) {
				return _Utils_eq(x.status, $author$project$ProfessorPage$RegistrationRequestsPage$statusAccepted);
			},
			nonPendingRequests);
		var acceptedRequests = _v1.a;
		var rejectedRequests = _v1.b;
		return _Utils_update(
			model,
			{acceptedRequests: acceptedRequests, isInitialized: true, pendingRequests: pendingRequests, rejectedRequests: rejectedRequests});
	});
var $author$project$ProfessorPage$RegistrationRequestsPage$StatusChanged = function (a) {
	return {$: 'StatusChanged', a: a};
};
var $author$project$ProfessorPage$RegistrationRequestsPage$statusRejected = 'rejected';
var $author$project$ProfessorPage$RegistrationRequestsPage$updateRequestStatus = F2(
	function (modalAction, _v0) {
		var accessToken = _v0.accessToken;
		var apiBaseUrl = _v0.apiBaseUrl;
		var updateRequest = F2(
			function (id, status) {
				return $author$project$Api$put(
					{
						apiBaseUrl: apiBaseUrl,
						body: $elm$http$Http$jsonBody(
							$elm$json$Json$Encode$object(
								_List_fromArray(
									[
										_Utils_Tuple2(
										'student_registration',
										$elm$json$Json$Encode$object(
											_List_fromArray(
												[
													_Utils_Tuple2(
													'status',
													$elm$json$Json$Encode$string(status))
												])))
									]))),
						endpoint: $author$project$Api$endpoints.registration(id),
						expect: A2(
							$elm$http$Http$expectJson,
							$author$project$ProfessorPage$RegistrationRequestsPage$StatusChanged,
							A2($elm$json$Json$Decode$field, 'data', $author$project$ProfessorPage$RegistrationRequestsPage$requestDecoder)),
						token: accessToken
					});
			});
		switch (modalAction.$) {
			case 'None':
				return $elm$core$Platform$Cmd$none;
			case 'Accept':
				var id = modalAction.a.id;
				return A2(updateRequest, id, $author$project$ProfessorPage$RegistrationRequestsPage$statusAccepted);
			default:
				var id = modalAction.a.id;
				return A2(updateRequest, id, $author$project$ProfessorPage$RegistrationRequestsPage$statusRejected);
		}
	});
var $author$project$ProfessorPage$RegistrationRequestsPage$update = F3(
	function (msg, model, apiParams) {
		switch (msg.$) {
			case 'GotLoadingResult':
				var result = msg.a;
				if (result.$ === 'Ok') {
					var data = result.a;
					return _Utils_Tuple2(
						A2($author$project$ProfessorPage$RegistrationRequestsPage$processData, model, data),
						$elm$core$Platform$Cmd$none);
				} else {
					return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
				}
			case 'UpdateRequest':
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{updatingRequest: true}),
					A2($author$project$ProfessorPage$RegistrationRequestsPage$updateRequestStatus, model.modalAction, apiParams));
			case 'StatusChanged':
				var result = msg.a;
				if (result.$ === 'Ok') {
					var req = result.a;
					var _v3 = $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$close(model.modalState);
					var modalState = _v3.a;
					var cmd = _v3.b;
					var model_ = _Utils_update(
						model,
						{
							modalState: modalState,
							pendingRequests: A2(
								$elm$core$List$filter,
								function (x) {
									return !_Utils_eq(x.id, req.id);
								},
								model.pendingRequests),
							updatingRequest: false
						});
					return _Utils_Tuple2(
						_Utils_eq(req.status, $author$project$ProfessorPage$RegistrationRequestsPage$statusAccepted) ? _Utils_update(
							model_,
							{
								acceptedRequests: A2($elm$core$List$cons, req, model.acceptedRequests)
							}) : _Utils_update(
							model_,
							{
								rejectedRequests: A2($elm$core$List$cons, req, model.rejectedRequests)
							}),
						A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$RegistrationRequestsPage$ModalMsg, cmd));
				} else {
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{hasProcessingError: true, updatingRequest: false}),
						$elm$core$Platform$Cmd$none);
				}
			case 'FocusAndSelectTab':
				var select = msg.a.select;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{tab: select}),
					$elm$core$Platform$Cmd$none);
			case 'OpenModal':
				var action = msg.a;
				var config = msg.b;
				var _v4 = $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$open(config);
				var modalState = _v4.a;
				var cmd = _v4.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{modalAction: action, modalState: modalState}),
					A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$RegistrationRequestsPage$ModalMsg, cmd));
			case 'ModalMsg':
				var modalMsg = msg.a;
				var _v5 = A3(
					$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$update,
					{dismissOnEscAndOverlayClick: false},
					modalMsg,
					model.modalState);
				var modalState = _v5.a;
				var cmd = _v5.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{modalState: modalState}),
					A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$RegistrationRequestsPage$ModalMsg, cmd));
			case 'CloseModal':
				var _v6 = $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$close(model.modalState);
				var modalState = _v6.a;
				var cmd = _v6.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{modalState: modalState}),
					A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$RegistrationRequestsPage$ModalMsg, cmd));
			case 'Dismiss':
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{dismissedMsg: true, hasProcessingError: false}),
					$elm$core$Platform$Cmd$none);
			default:
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$ProfessorPage$TopicsPage$AddedTopic = function (a) {
	return {$: 'AddedTopic', a: a};
};
var $author$project$ProfessorPage$TopicsPage$addTopic = F2(
	function (topicTitle, _v0) {
		var currentSemesterId = _v0.currentSemesterId;
		var apiBaseUrl = _v0.apiBaseUrl;
		var accessToken = _v0.accessToken;
		return $author$project$Api$post(
			{
				apiBaseUrl: apiBaseUrl,
				body: $elm$http$Http$jsonBody(
					$elm$json$Json$Encode$object(
						_List_fromArray(
							[
								_Utils_Tuple2(
								'topic',
								$elm$json$Json$Encode$object(
									_List_fromArray(
										[
											_Utils_Tuple2(
											'title',
											$elm$json$Json$Encode$string(topicTitle))
										])))
							]))),
				endpoint: $author$project$Api$endpoints.topics(currentSemesterId),
				expect: A2(
					$elm$http$Http$expectJson,
					$author$project$ProfessorPage$TopicsPage$AddedTopic,
					A2($elm$json$Json$Decode$field, 'data', $author$project$Topic$decoder)),
				token: accessToken
			});
	});
var $author$project$ProfessorPage$TopicsPage$DeletedTopic = function (a) {
	return {$: 'DeletedTopic', a: a};
};
var $author$project$Api$delete = function (_v0) {
	var apiBaseUrl = _v0.apiBaseUrl;
	var endpoint = _v0.endpoint;
	var token = _v0.token;
	var expect = _v0.expect;
	var url = $author$project$Api$relativeUrl(
		_List_fromArray(
			[apiBaseUrl, endpoint]));
	return $elm$http$Http$request(
		A5(
			$author$project$Api$requestParams,
			'DELETE',
			_List_fromArray(
				[
					$author$project$Api$authHeader(token)
				]),
			url,
			$elm$http$Http$emptyBody,
			expect));
};
var $author$project$ProfessorPage$TopicsPage$deleteTopic = F2(
	function (id, _v0) {
		var accessToken = _v0.accessToken;
		var currentSemesterId = _v0.currentSemesterId;
		var apiBaseUrl = _v0.apiBaseUrl;
		return $author$project$Api$delete(
			{
				apiBaseUrl: apiBaseUrl,
				endpoint: $author$project$Api$endpoints.topics(currentSemesterId) + ('/' + $elm$core$String$fromInt(id)),
				expect: $elm$http$Http$expectWhatever($author$project$ProfessorPage$TopicsPage$DeletedTopic),
				token: accessToken
			});
	});
var $author$project$ProfessorPage$TopicsPage$update = F3(
	function (msg, model, params) {
		switch (msg.$) {
			case 'Title':
				var title = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{topicTitle: title}),
					$elm$core$Platform$Cmd$none);
			case 'AddTopic':
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{loadingTopics: true}),
					A2($author$project$ProfessorPage$TopicsPage$addTopic, model.topicTitle, params));
			case 'AddedTopic':
				var result = msg.a;
				var model_ = _Utils_update(
					model,
					{loadingTopics: false});
				if (result.$ === 'Ok') {
					var topic = result.a;
					return _Utils_Tuple2(
						_Utils_update(
							model_,
							{
								topicTitle: '',
								topics: A2($elm$core$List$cons, topic, model.topics)
							}),
						$elm$core$Platform$Cmd$none);
				} else {
					return _Utils_Tuple2(
						_Utils_update(
							model_,
							{hasProcessingError: true}),
						$elm$core$Platform$Cmd$none);
				}
			case 'TopicsLoaded':
				var result = msg.a;
				var model_ = _Utils_update(
					model,
					{loadingTopics: false});
				if (result.$ === 'Ok') {
					var topics = result.a;
					return _Utils_Tuple2(
						_Utils_update(
							model_,
							{isInitialized: true, topics: topics}),
						$elm$core$Platform$Cmd$none);
				} else {
					return _Utils_Tuple2(
						_Utils_update(
							model_,
							{hasProcessingError: true}),
						$elm$core$Platform$Cmd$none);
				}
			case 'DeleteTopic':
				var id = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							loadingTopics: true,
							topics: A2(
								$elm$core$List$filter,
								function (t) {
									return !_Utils_eq(t.id, id);
								},
								model.topics)
						}),
					A2($author$project$ProfessorPage$TopicsPage$deleteTopic, id, params));
			case 'DeletedTopic':
				var result = msg.a;
				var model_ = _Utils_update(
					model,
					{loadingTopics: false});
				if (result.$ === 'Ok') {
					return _Utils_Tuple2(model_, $elm$core$Platform$Cmd$none);
				} else {
					return _Utils_Tuple2(
						_Utils_update(
							model_,
							{hasProcessingError: true, isInitialized: false}),
						$author$project$Topic$loadTopics(
							{apiBaseUrl: params.apiBaseUrl, msg: $author$project$ProfessorPage$TopicsPage$TopicsLoaded, onlyAvailable: false, semesterId: params.currentSemesterId, token: params.accessToken}));
				}
			default:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{dismissedMsg: true, hasProcessingError: false}),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$ProfessorPage$update = F2(
	function (msg, model) {
		_v0$12:
		while (true) {
			switch (msg.$) {
				case 'AdjustTimeZone':
					var zone = msg.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{zone: zone}),
						$elm$core$Platform$Cmd$none);
				case 'GotRequestsMsg':
					var reqMsg = msg.a;
					var _v1 = A3(
						$author$project$ProfessorPage$RegistrationRequestsPage$update,
						reqMsg,
						model.requstesModel,
						{accessToken: model.accessToken, apiBaseUrl: model.apiBaseUrl});
					var model_ = _v1.a;
					var cmd = _v1.b;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{requstesModel: model_}),
						A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$GotRequestsMsg, cmd));
				case 'LoadedActivities':
					var result = msg.a;
					if (result.$ === 'Ok') {
						var activities = result.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									activities: $author$project$Util$toDict(activities),
									loadingActivities: false
								}),
							$elm$core$Platform$Cmd$none);
					} else {
						var err = result.a;
						return A2(
							$elm$core$Debug$log,
							$elm$core$Debug$toString(err),
							_Utils_Tuple2(model, $elm$core$Platform$Cmd$none));
					}
				case 'LoadedStudents':
					var result = msg.a;
					if (result.$ === 'Ok') {
						var students = result.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									loadingStudents: false,
									students: $author$project$Util$toDict(students)
								}),
							$elm$core$Platform$Cmd$none);
					} else {
						var err = result.a;
						return A2(
							$elm$core$Debug$log,
							$elm$core$Debug$toString(err),
							_Utils_Tuple2(model, $elm$core$Platform$Cmd$none));
					}
				case 'LoadedGroups':
					var result = msg.a;
					if (result.$ === 'Ok') {
						var groups = result.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									groups: $author$project$Util$toDict(groups),
									loadingGroups: false
								}),
							$elm$core$Platform$Cmd$none);
					} else {
						var err = result.a;
						return A2(
							$elm$core$Debug$log,
							$elm$core$Debug$toString(err),
							_Utils_Tuple2(model, $elm$core$Platform$Cmd$none));
					}
				case 'LoadedAssignments':
					var result = msg.a;
					return A2(
						$elm$core$Debug$log,
						$elm$core$Debug$toString(result),
						function () {
							if (result.$ === 'Ok') {
								var assignments = result.a;
								return _Utils_Tuple2(
									_Utils_update(
										model,
										{assignments: assignments, loadingAssignment: false}),
									$elm$core$Platform$Cmd$none);
							} else {
								var err = result.a;
								return A2(
									$elm$core$Debug$log,
									$elm$core$Debug$toString(err),
									_Utils_Tuple2(model, $elm$core$Platform$Cmd$none));
							}
						}());
				case 'LoadedActivityTypes':
					if (msg.a.$ === 'Ok') {
						var activityTypes = msg.a.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									activityTypes: $author$project$Util$toDict(activityTypes),
									loadingActivityTypes: false
								}),
							$elm$core$Platform$Cmd$none);
					} else {
						break _v0$12;
					}
				case 'GotActivitiesMsg':
					if ((msg.a.$ === 'SavedActivity') && (msg.a.a.$ === 'Ok')) {
						var activity = msg.a.a.a;
						var activities_ = A3($elm$core$Dict$insert, activity.id, activity, model.activities);
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{activities: activities_, activitiesModel: $author$project$ProfessorPage$ActivitiesPage$init}),
							$elm$core$Platform$Cmd$none);
					} else {
						var activitiesMsg = msg.a;
						var _v6 = A3($author$project$ProfessorPage$ActivitiesPage$update, activitiesMsg, model.activitiesModel, model);
						var model_ = _v6.a;
						var cmd = _v6.b;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{activitiesModel: model_}),
							A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$GotActivitiesMsg, cmd));
					}
				case 'GotTopicsMsg':
					var topicsMsg = msg.a;
					var _v7 = A3($author$project$ProfessorPage$TopicsPage$update, topicsMsg, model.topicsModel, model);
					var model_ = _v7.a;
					var cmd = _v7.b;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{topicsModel: model_}),
						A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$GotTopicsMsg, cmd));
				case 'GotActivityAssignmentsMsg':
					if ((msg.a.$ === 'UpatedAssignement') && (msg.a.a.$ === 'Ok')) {
						var assignment = msg.a.a.a;
						var _v8 = A3(
							$author$project$ProfessorPage$ActivityAssignmentsPage$update,
							$author$project$ProfessorPage$ActivityAssignmentsPage$UpatedAssignement(
								$elm$core$Result$Ok(assignment)),
							model.activityAssignmentsModel,
							model);
						var model_ = _v8.a;
						var cmd = _v8.b;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									activityAssignmentsModel: model_,
									assignments: A2(
										$elm$core$List$cons,
										assignment,
										A2(
											$elm$core$List$filter,
											function (_v9) {
												var id = _v9.id;
												return !_Utils_eq(id, assignment.id);
											},
											model.assignments))
								}),
							A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$GotActivityAssignmentsMsg, cmd));
					} else {
						var assignementMsg = msg.a;
						var _v10 = A3($author$project$ProfessorPage$ActivityAssignmentsPage$update, assignementMsg, model.activityAssignmentsModel, model);
						var model_ = _v10.a;
						var cmd = _v10.b;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{activityAssignmentsModel: model_}),
							A2($elm$core$Platform$Cmd$map, $author$project$ProfessorPage$GotActivityAssignmentsMsg, cmd));
					}
				default:
					break _v0$12;
			}
		}
		return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	});
var $author$project$RegistrationPage$CreatedRequest = function (a) {
	return {$: 'CreatedRequest', a: a};
};
var $author$project$RegistrationPage$Error = function (a) {
	return {$: 'Error', a: a};
};
var $author$project$RegistrationPage$Loading = {$: 'Loading'};
var $author$project$RegistrationPage$GotRegistrationResult = function (a) {
	return {$: 'GotRegistrationResult', a: a};
};
var $elm$http$Http$post = function (r) {
	return $elm$http$Http$request(
		{body: r.body, expect: r.expect, headers: _List_Nil, method: 'POST', timeout: $elm$core$Maybe$Nothing, tracker: $elm$core$Maybe$Nothing, url: r.url});
};
var $author$project$RegistrationPage$sendRequest = function (model) {
	var body = $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'student_registration',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'email',
							$elm$json$Json$Encode$string(model.email)),
							_Utils_Tuple2(
							'index_number',
							$elm$json$Json$Encode$string(model.indexNumber)),
							_Utils_Tuple2(
							'first_name',
							$elm$json$Json$Encode$string(model.firstName)),
							_Utils_Tuple2(
							'last_name',
							$elm$json$Json$Encode$string(model.lastName))
						])))
			]));
	return $elm$http$Http$post(
		{
			body: $elm$http$Http$jsonBody(body),
			expect: $elm$http$Http$expectWhatever($author$project$RegistrationPage$GotRegistrationResult),
			url: A2(
				$elm$url$Url$Builder$relative,
				_List_fromArray(
					[model.apiBaseUrl, $author$project$Api$endpoints.registrations]),
				_List_Nil)
		});
};
var $author$project$RegistrationPage$update = F2(
	function (msg, model) {
		switch (msg.$) {
			case 'FirstName':
				var firstName = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{firstName: firstName}),
					$elm$core$Platform$Cmd$none);
			case 'LastName':
				var lastName = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{lastName: lastName}),
					$elm$core$Platform$Cmd$none);
			case 'Email':
				var email = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{email: email}),
					$elm$core$Platform$Cmd$none);
			case 'IndexNumber':
				var indexNumber = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{indexNumber: indexNumber}),
					$elm$core$Platform$Cmd$none);
			case 'SubmittedForm':
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{state: $author$project$RegistrationPage$Loading}),
					$author$project$RegistrationPage$sendRequest(model));
			case 'GotRegistrationResult':
				var result = msg.a;
				var model_ = function () {
					if (result.$ === 'Ok') {
						return A7(
							$author$project$RegistrationPage$Model,
							model.apiBaseUrl,
							'',
							'',
							'',
							'',
							$author$project$RegistrationPage$CreatedRequest('Uspešno ste podneli prijavu! 👍'),
							false);
					} else {
						return _Utils_update(
							model,
							{
								dismissedMsg: false,
								state: $author$project$RegistrationPage$Error('Došlo je do neočekivane greške 😞')
							});
					}
				}();
				return _Utils_Tuple2(model_, $elm$core$Platform$Cmd$none);
			default:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{dismissedMsg: true}),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$SetPasswordPage$SessionMsg = function (a) {
	return {$: 'SessionMsg', a: a};
};
var $author$project$SetPasswordPage$GotSetPasswordResult = function (a) {
	return {$: 'GotSetPasswordResult', a: a};
};
var $author$project$SetPasswordPage$setPassword = function (_v0) {
	var email = _v0.email;
	var password = _v0.password;
	var uuid = _v0.uuid;
	var apiBaseUrl = _v0.apiBaseUrl;
	var body = $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'email',
				$elm$json$Json$Encode$string(email)),
				_Utils_Tuple2(
				'password',
				$elm$json$Json$Encode$string(password))
			]));
	return $elm$http$Http$request(
		{
			body: $elm$http$Http$jsonBody(body),
			expect: $elm$http$Http$expectWhatever($author$project$SetPasswordPage$GotSetPasswordResult),
			headers: _List_Nil,
			method: 'PATCH',
			timeout: $elm$core$Maybe$Nothing,
			tracker: $elm$core$Maybe$Nothing,
			url: A2(
				$elm$url$Url$Builder$relative,
				_List_fromArray(
					[
						apiBaseUrl,
						$author$project$Api$endpoints.password(uuid)
					]),
				_List_Nil)
		});
};
var $author$project$SetPasswordPage$update = F2(
	function (msg, model) {
		switch (msg.$) {
			case 'Email':
				var email = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{email: email}),
					$elm$core$Platform$Cmd$none);
			case 'Password':
				var password = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{password: password}),
					$elm$core$Platform$Cmd$none);
			case 'ConfirmPassword':
				var password = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{confirmPassword: password}),
					$elm$core$Platform$Cmd$none);
			case 'SubmittedForm':
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{processing: true}),
					$author$project$SetPasswordPage$setPassword(model));
			case 'GotSetPasswordResult':
				var result = msg.a;
				if (result.$ === 'Ok') {
					return _Utils_Tuple2(
						model,
						A2(
							$elm$core$Platform$Cmd$map,
							$author$project$SetPasswordPage$SessionMsg,
							$author$project$Session$getSession(
								{apiBaseUrl: model.apiBaseUrl, email: model.email, password: model.password})));
				} else {
					return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
				}
			case 'SetShowPassword1':
				var showPassword = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{showPassword1: showPassword}),
					$elm$core$Platform$Cmd$none);
			case 'SetShowPassword2':
				var showPassword = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{showPassword2: showPassword}),
					$elm$core$Platform$Cmd$none);
			default:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{processing: false}),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$StudentPage$GotAssignmentContentMsg = F2(
	function (a, b) {
		return {$: 'GotAssignmentContentMsg', a: a, b: b};
	});
var $author$project$StudentPage$LoadedStudents = function (a) {
	return {$: 'LoadedStudents', a: a};
};
var $author$project$StudentPage$loadDataForGroupAssignment = function (model) {
	var semesterId = model.semesterId;
	var groupId = model.groupId;
	var accessToken = model.accessToken;
	var students = model.students;
	var apiBaseUrl = model.apiBaseUrl;
	var _v0 = _Utils_Tuple2(groupId, students);
	if ((_v0.a.$ === 'Nothing') && (!_v0.b.b)) {
		var _v1 = _v0.a;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{loadingStudents: true}),
			$author$project$Api$get(
				{
					apiBaseUrl: apiBaseUrl,
					endpoint: $author$project$Api$endpoints.students(semesterId),
					expect: A2(
						$elm$http$Http$expectJson,
						$author$project$StudentPage$LoadedStudents,
						A2(
							$elm$json$Json$Decode$field,
							'data',
							$elm$json$Json$Decode$list($author$project$Student$decoder))),
					token: accessToken
				}));
	} else {
		return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	}
};
var $author$project$StudentPage$LoadedTopics = function (a) {
	return {$: 'LoadedTopics', a: a};
};
var $author$project$StudentPage$loadDataForTopicAssignment = function (model) {
	var semesterId = model.semesterId;
	var accessToken = model.accessToken;
	var group = model.group;
	var apiBaseUrl = model.apiBaseUrl;
	var topic = A2(
		$elm$core$Maybe$andThen,
		function ($) {
			return $.topic;
		},
		group);
	var _v0 = _Utils_Tuple2(model.topics, topic);
	if ((!_v0.a.b) && (_v0.b.$ === 'Nothing')) {
		var _v1 = _v0.b;
		return _Utils_Tuple2(
			_Utils_update(
				model,
				{loadingTopics: true}),
			$author$project$Topic$loadTopics(
				{apiBaseUrl: apiBaseUrl, msg: $author$project$StudentPage$LoadedTopics, onlyAvailable: true, semesterId: semesterId, token: accessToken}));
	} else {
		return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	}
};
var $author$project$StudentPage$AssignmentContent$Model$Files = function (a) {
	return {$: 'Files', a: a};
};
var $author$project$StudentPage$AssignmentContent$GotFilesMsg = function (a) {
	return {$: 'GotFilesMsg', a: a};
};
var $elm$core$Array$getHelp = F3(
	function (shift, index, tree) {
		getHelp:
		while (true) {
			var pos = $elm$core$Array$bitMask & (index >>> shift);
			var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (_v0.$ === 'SubTree') {
				var subTree = _v0.a;
				var $temp$shift = shift - $elm$core$Array$shiftStep,
					$temp$index = index,
					$temp$tree = subTree;
				shift = $temp$shift;
				index = $temp$index;
				tree = $temp$tree;
				continue getHelp;
			} else {
				var values = _v0.a;
				return A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, values);
			}
		}
	});
var $elm$core$Array$get = F2(
	function (index, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		return ((index < 0) || (_Utils_cmp(index, len) > -1)) ? $elm$core$Maybe$Nothing : ((_Utils_cmp(
			index,
			$elm$core$Array$tailIndex(len)) > -1) ? $elm$core$Maybe$Just(
			A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, tail)) : $elm$core$Maybe$Just(
			A3($elm$core$Array$getHelp, startShift, index, tree)));
	});
var $author$project$StudentPage$AssignmentContent$FilesContent$LoadedFiles = function (a) {
	return {$: 'LoadedFiles', a: a};
};
var $author$project$StudentPage$AssignmentContent$FilesContent$loadFiles = F2(
	function (assignmentId, apiParams) {
		return A3($author$project$Util$loadFiles, assignmentId, apiParams, $author$project$StudentPage$AssignmentContent$FilesContent$LoadedFiles);
	});
var $elm$core$Array$setHelp = F4(
	function (shift, index, value, tree) {
		var pos = $elm$core$Array$bitMask & (index >>> shift);
		var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
		if (_v0.$ === 'SubTree') {
			var subTree = _v0.a;
			var newSub = A4($elm$core$Array$setHelp, shift - $elm$core$Array$shiftStep, index, value, subTree);
			return A3(
				$elm$core$Elm$JsArray$unsafeSet,
				pos,
				$elm$core$Array$SubTree(newSub),
				tree);
		} else {
			var values = _v0.a;
			var newLeaf = A3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, values);
			return A3(
				$elm$core$Elm$JsArray$unsafeSet,
				pos,
				$elm$core$Array$Leaf(newLeaf),
				tree);
		}
	});
var $elm$core$Array$set = F3(
	function (index, value, array) {
		var len = array.a;
		var startShift = array.b;
		var tree = array.c;
		var tail = array.d;
		return ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(
			index,
			$elm$core$Array$tailIndex(len)) > -1) ? A4(
			$elm$core$Array$Array_elm_builtin,
			len,
			startShift,
			tree,
			A3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, tail)) : A4(
			$elm$core$Array$Array_elm_builtin,
			len,
			startShift,
			A4($elm$core$Array$setHelp, startShift, index, value, tree),
			tail));
	});
var $author$project$StudentPage$loadFilesForAssignment = F3(
	function (assignmentIndex, assignment, model) {
		var updateFilesModel = function (fm) {
			return A3(
				$elm$core$Array$set,
				assignmentIndex,
				$author$project$StudentPage$AssignmentContent$Model$Files(
					_Utils_update(
						fm,
						{loadingFiles: true})),
				model.assignmentsModels);
		};
		var maybeFilesModel = A2($elm$core$Array$get, assignmentIndex, model.assignmentsModels);
		var fromFilesCmd = A2(
			$elm$core$Basics$composeL,
			$author$project$StudentPage$GotAssignmentContentMsg(assignmentIndex),
			$author$project$StudentPage$AssignmentContent$GotFilesMsg);
		var apiParams = {apiBaseUrl: model.apiBaseUrl, token: model.accessToken};
		if ((maybeFilesModel.$ === 'Just') && (maybeFilesModel.a.$ === 'Files')) {
			var filesModel = maybeFilesModel.a.a;
			return (!filesModel.filesLoaded) ? _Utils_Tuple2(
				_Utils_update(
					model,
					{
						assignmentsModels: updateFilesModel(filesModel)
					}),
				A2(
					$elm$core$Platform$Cmd$map,
					fromFilesCmd,
					A2($author$project$StudentPage$AssignmentContent$FilesContent$loadFiles, assignment.id, apiParams))) : _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		} else {
			return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$StudentPage$assignmentInitCmd = F4(
	function (arrIndex, assignement, expaneded, model) {
		var activityType = assignement.activityType;
		var _v0 = _Utils_Tuple3(activityType.code, expaneded, activityType.content);
		_v0$3:
		while (true) {
			if (_v0.b) {
				switch (_v0.a.$) {
					case 'Group':
						var _v1 = _v0.a;
						return $author$project$StudentPage$loadDataForGroupAssignment(model);
					case 'Topic':
						var _v2 = _v0.a;
						return $author$project$StudentPage$loadDataForTopicAssignment(model);
					default:
						if (_v0.c.$ === 'Files') {
							return A3($author$project$StudentPage$loadFilesForAssignment, arrIndex, assignement, model);
						} else {
							break _v0$3;
						}
				}
			} else {
				break _v0$3;
			}
		}
		return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	});
var $author$project$StudentPage$AssignmentContent$Model$Signup = function (a) {
	return {$: 'Signup', a: a};
};
var $author$project$StudentPage$AssignmentContent$Model$Empty = {$: 'Empty'};
var $author$project$StudentPage$AssignmentContent$Model$Group = function (a) {
	return {$: 'Group', a: a};
};
var $author$project$StudentPage$AssignmentContent$Model$Topic = function (a) {
	return {$: 'Topic', a: a};
};
var $author$project$StudentPage$AssignmentContent$GroupContent$init = function (_v0) {
	var firstName = _v0.firstName;
	var lastName = _v0.lastName;
	var indexNumber = _v0.indexNumber;
	var groupId = _v0.groupId;
	var studentId = _v0.studentId;
	var email = _v0.email;
	return {
		processingRequest: false,
		selectedStudents: $elm$core$Dict$fromList(
			_List_fromArray(
				[
					_Utils_Tuple2(
					studentId,
					A6($author$project$Student$Student, studentId, email, firstName, lastName, indexNumber, groupId))
				]))
	};
};
var $author$project$StudentPage$AssignmentContent$TopicContent$Model = F4(
	function (selectedTopic, processingRequest, processingError, dismissedMsg) {
		return {dismissedMsg: dismissedMsg, processingError: processingError, processingRequest: processingRequest, selectedTopic: selectedTopic};
	});
var $author$project$StudentPage$AssignmentContent$TopicContent$init = A4($author$project$StudentPage$AssignmentContent$TopicContent$Model, $elm$core$Maybe$Nothing, false, $elm$core$Maybe$Nothing, false);
var $author$project$StudentPage$AssignmentContent$contentModelByCode = F2(
	function (stModel, code) {
		switch (code.$) {
			case 'Group':
				return $author$project$StudentPage$AssignmentContent$Model$Group(
					$author$project$StudentPage$AssignmentContent$GroupContent$init(stModel));
			case 'Topic':
				return $author$project$StudentPage$AssignmentContent$Model$Topic($author$project$StudentPage$AssignmentContent$TopicContent$init);
			default:
				return $author$project$StudentPage$AssignmentContent$Model$Empty;
		}
	});
var $author$project$StudentPage$AssignmentContent$FilesContent$init = function (fileUploadInfoList) {
	return {fileUploadInfoList: fileUploadInfoList, files: _List_Nil, filesLoaded: false, hasProcessingError: false, hasProcessingErrorModal: false, loadingFiles: false, modalFileInfo: $elm$core$Maybe$Nothing, modalSelectedFile: $elm$core$Maybe$Nothing, modalState: $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$init, processingFiles: false, selectedFiles: $elm$core$Dict$empty, updatingFile: false};
};
var $author$project$StudentPage$AssignmentContent$SignupContent$Model = F4(
	function (isSignedUp, processingRequest, hasProcessingError, dismissedMsg) {
		return {dismissedMsg: dismissedMsg, hasProcessingError: hasProcessingError, isSignedUp: isSignedUp, processingRequest: processingRequest};
	});
var $author$project$StudentPage$AssignmentContent$SignupContent$init = function (isSignedUp) {
	return A4($author$project$StudentPage$AssignmentContent$SignupContent$Model, isSignedUp, false, false, false);
};
var $elm$core$Elm$JsArray$map = _JsArray_map;
var $elm$core$Array$map = F2(
	function (func, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = function (node) {
			if (node.$ === 'SubTree') {
				var subTree = node.a;
				return $elm$core$Array$SubTree(
					A2($elm$core$Elm$JsArray$map, helper, subTree));
			} else {
				var values = node.a;
				return $elm$core$Array$Leaf(
					A2($elm$core$Elm$JsArray$map, func, values));
			}
		};
		return A4(
			$elm$core$Array$Array_elm_builtin,
			len,
			startShift,
			A2($elm$core$Elm$JsArray$map, helper, tree),
			A2($elm$core$Elm$JsArray$map, func, tail));
	});
var $author$project$StudentPage$AssignmentContent$initModels = function (stModel) {
	return $elm$core$Array$map(
		function (_v0) {
			var activity = _v0.activity;
			var activityType = _v0.activityType;
			var completed = _v0.completed;
			if (activity.isSignup) {
				return $author$project$StudentPage$AssignmentContent$Model$Signup(
					$author$project$StudentPage$AssignmentContent$SignupContent$init(completed));
			} else {
				var _v1 = activityType.content;
				if (_v1.$ === 'Files') {
					var files = _v1.a;
					return $author$project$StudentPage$AssignmentContent$Model$Files(
						$author$project$StudentPage$AssignmentContent$FilesContent$init(files));
				} else {
					return A2($author$project$StudentPage$AssignmentContent$contentModelByCode, stModel, activityType.code);
				}
			}
		});
};
var $elm$core$Set$Set_elm_builtin = function (a) {
	return {$: 'Set_elm_builtin', a: a};
};
var $elm$core$Set$insert = F2(
	function (key, _v0) {
		var dict = _v0.a;
		return $elm$core$Set$Set_elm_builtin(
			A3($elm$core$Dict$insert, key, _Utils_Tuple0, dict));
	});
var $elm$core$Set$remove = F2(
	function (key, _v0) {
		var dict = _v0.a;
		return $elm$core$Set$Set_elm_builtin(
			A2($elm$core$Dict$remove, key, dict));
	});
var $author$project$StudentPage$AssignmentContent$GotGroupMsg = function (a) {
	return {$: 'GotGroupMsg', a: a};
};
var $author$project$StudentPage$AssignmentContent$GotSignupMsg = function (a) {
	return {$: 'GotSignupMsg', a: a};
};
var $author$project$StudentPage$AssignmentContent$GotTopicsMsg = function (a) {
	return {$: 'GotTopicsMsg', a: a};
};
var $author$project$StudentPage$AssignmentContent$FilesContent$DownloadedFile = F2(
	function (a, b) {
		return {$: 'DownloadedFile', a: a, b: b};
	});
var $author$project$StudentPage$AssignmentContent$FilesContent$ModalMsg = function (a) {
	return {$: 'ModalMsg', a: a};
};
var $author$project$StudentPage$AssignmentContent$FilesContent$UpdatedFile = function (a) {
	return {$: 'UpdatedFile', a: a};
};
var $author$project$Util$updateFile = F4(
	function (id, file, _v0, msg) {
		var token = _v0.token;
		var apiBaseUrl = _v0.apiBaseUrl;
		return $author$project$Api$put(
			{
				apiBaseUrl: apiBaseUrl,
				body: $elm$http$Http$multipartBody(
					_List_fromArray(
						[
							A2($elm$http$Http$filePart, 'document', file)
						])),
				endpoint: $author$project$Api$endpoints.document(id),
				expect: A2(
					$elm$http$Http$expectJson,
					msg,
					A2($elm$json$Json$Decode$field, 'data', $author$project$FileInfo$decoder)),
				token: token
			});
	});
var $author$project$StudentPage$AssignmentContent$FilesContent$UploadedFiles = function (a) {
	return {$: 'UploadedFiles', a: a};
};
var $elm$http$Http$stringPart = _Http_pair;
var $author$project$StudentPage$AssignmentContent$FilesContent$upload = F3(
	function (assignmentId, selectedFiles, _v0) {
		var token = _v0.token;
		var apiBaseUrl = _v0.apiBaseUrl;
		var body = $elm$http$Http$multipartBody(
			A3(
				$elm$core$Dict$foldl,
				F3(
					function (k, v, l) {
						return A2(
							$elm$core$List$cons,
							A2($elm$http$Http$stringPart, 'documentsIds[]', k),
							A2(
								$elm$core$List$cons,
								A2($elm$http$Http$filePart, 'documents[]', v),
								l));
					}),
				_List_Nil,
				selectedFiles));
		return $author$project$Api$post(
			{
				apiBaseUrl: apiBaseUrl,
				body: body,
				endpoint: $author$project$Api$endpoints.documents(assignmentId),
				expect: A2(
					$elm$http$Http$expectJson,
					$author$project$StudentPage$AssignmentContent$FilesContent$UploadedFiles,
					A2(
						$elm$json$Json$Decode$field,
						'data',
						$elm$json$Json$Decode$list($author$project$FileInfo$decoder))),
				token: token
			});
	});
var $author$project$StudentPage$AssignmentContent$FilesContent$update = F3(
	function (msg, model, apiParams) {
		_v0$13:
		while (true) {
			switch (msg.$) {
				case 'SelectedFiles':
					if (msg.b.b && (!msg.b.b.b)) {
						var key = msg.a;
						var _v1 = msg.b;
						var file = _v1.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									selectedFiles: A3($elm$core$Dict$insert, key, file, model.selectedFiles)
								}),
							$elm$core$Platform$Cmd$none);
					} else {
						break _v0$13;
					}
				case 'Upload':
					var id = msg.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{hasProcessingError: false, processingFiles: true}),
						A3($author$project$StudentPage$AssignmentContent$FilesContent$upload, id, model.selectedFiles, apiParams));
				case 'UploadedFiles':
					var result = msg.a;
					var model_ = _Utils_update(
						model,
						{processingFiles: false});
					if (result.$ === 'Ok') {
						var files = result.a;
						return _Utils_Tuple2(
							_Utils_update(
								model_,
								{files: files}),
							$elm$core$Platform$Cmd$none);
					} else {
						return _Utils_Tuple2(
							_Utils_update(
								model_,
								{hasProcessingError: true}),
							$elm$core$Platform$Cmd$none);
					}
				case 'DownloadFile':
					var id = msg.a.id;
					var fileName = msg.a.fileName;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{processingFiles: true}),
						A3(
							$author$project$Util$downlaodFile,
							id,
							apiParams,
							$author$project$StudentPage$AssignmentContent$FilesContent$DownloadedFile(fileName)));
				case 'DownloadedFile':
					var fileName = msg.a;
					var result = msg.b;
					var model_ = _Utils_update(
						model,
						{processingFiles: false});
					if (result.$ === 'Ok') {
						var data = result.a;
						return _Utils_Tuple2(
							model_,
							A2($author$project$Util$saveData, fileName, data));
					} else {
						return _Utils_Tuple2(
							_Utils_update(
								model_,
								{hasProcessingError: true}),
							$elm$core$Platform$Cmd$none);
					}
				case 'LoadedFiles':
					var result = msg.a;
					var model_ = _Utils_update(
						model,
						{filesLoaded: true, loadingFiles: false});
					if (result.$ === 'Ok') {
						var files = result.a;
						return _Utils_Tuple2(
							_Utils_update(
								model_,
								{files: files}),
							$elm$core$Platform$Cmd$none);
					} else {
						return _Utils_Tuple2(
							_Utils_update(
								model_,
								{hasProcessingError: true}),
							$elm$core$Platform$Cmd$none);
					}
				case 'OpenModal':
					var config = msg.a;
					var fileInfo = msg.b;
					var _v5 = $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$open(config);
					var modalState = _v5.a;
					var cmd = _v5.b;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								modalFileInfo: $elm$core$Maybe$Just(fileInfo),
								modalState: modalState
							}),
						A2($elm$core$Platform$Cmd$map, $author$project$StudentPage$AssignmentContent$FilesContent$ModalMsg, cmd));
				case 'ModalMsg':
					var modalMsg = msg.a;
					var _v6 = A3(
						$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$update,
						{dismissOnEscAndOverlayClick: false},
						modalMsg,
						model.modalState);
					var modalState = _v6.a;
					var cmd = _v6.b;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{modalState: modalState}),
						A2($elm$core$Platform$Cmd$map, $author$project$StudentPage$AssignmentContent$FilesContent$ModalMsg, cmd));
				case 'SelectModalFile':
					if (msg.a.b && (!msg.a.b.b)) {
						var _v7 = msg.a;
						var file = _v7.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									modalSelectedFile: $elm$core$Maybe$Just(file)
								}),
							$elm$core$Platform$Cmd$none);
					} else {
						break _v0$13;
					}
				case 'UpdateFile':
					var _v8 = _Utils_Tuple2(model.modalFileInfo, model.modalSelectedFile);
					if ((_v8.a.$ === 'Just') && (_v8.b.$ === 'Just')) {
						var id = _v8.a.a.id;
						var file = _v8.b.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{hasProcessingErrorModal: false, updatingFile: true}),
							A4($author$project$Util$updateFile, id, file, apiParams, $author$project$StudentPage$AssignmentContent$FilesContent$UpdatedFile));
					} else {
						return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
					}
				case 'UpdatedFile':
					var result = msg.a;
					var model_ = _Utils_update(
						model,
						{updatingFile: false});
					var _v9 = $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$close(model.modalState);
					var modalState = _v9.a;
					var cmd = _v9.b;
					if (result.$ === 'Ok') {
						return _Utils_Tuple2(
							_Utils_update(
								model_,
								{modalFileInfo: $elm$core$Maybe$Nothing, modalSelectedFile: $elm$core$Maybe$Nothing, modalState: modalState}),
							A2($elm$core$Platform$Cmd$map, $author$project$StudentPage$AssignmentContent$FilesContent$ModalMsg, cmd));
					} else {
						return _Utils_Tuple2(
							_Utils_update(
								model_,
								{hasProcessingErrorModal: true}),
							$elm$core$Platform$Cmd$none);
					}
				case 'Dismiss':
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{hasProcessingError: false}),
						$elm$core$Platform$Cmd$none);
				case 'DismissModal':
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{hasProcessingErrorModal: false}),
						$elm$core$Platform$Cmd$none);
				default:
					break _v0$13;
			}
		}
		return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	});
var $author$project$StudentPage$AssignmentContent$GroupContent$GroupCreated = function (a) {
	return {$: 'GroupCreated', a: a};
};
var $elm$json$Json$Encode$list = F2(
	function (func, entries) {
		return _Json_wrap(
			A3(
				$elm$core$List$foldl,
				_Json_addEntry(func),
				_Json_emptyArray(_Utils_Tuple0),
				entries));
	});
var $elm$core$Dict$values = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, valueList) {
				return A2($elm$core$List$cons, value, valueList);
			}),
		_List_Nil,
		dict);
};
var $author$project$StudentPage$AssignmentContent$GroupContent$createGroup = F3(
	function (semesterId, _v0, _v1) {
		var selectedStudents = _v0.selectedStudents;
		var token = _v1.token;
		var apiBaseUrl = _v1.apiBaseUrl;
		var body = $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'students',
					A2(
						$elm$json$Json$Encode$list,
						$elm$json$Json$Encode$int,
						$elm$core$Dict$keys(selectedStudents)))
				]));
		return $author$project$Api$post(
			{
				apiBaseUrl: apiBaseUrl,
				body: $elm$http$Http$jsonBody(body),
				endpoint: $author$project$Api$endpoints.groups(semesterId),
				expect: A2(
					$elm$http$Http$expectJson,
					$author$project$StudentPage$AssignmentContent$GroupContent$GroupCreated,
					A2(
						$elm$json$Json$Decode$map,
						function (id) {
							return {
								id: id,
								students: A2(
									$elm$core$List$map,
									function (s) {
										return _Utils_update(
											s,
											{
												groupId: $elm$core$Maybe$Just(id)
											});
									},
									$elm$core$Dict$values(selectedStudents)),
								topic: $elm$core$Maybe$Nothing
							};
						},
						A2(
							$elm$json$Json$Decode$field,
							'data',
							A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int)))),
				token: token
			});
	});
var $author$project$StudentPage$AssignmentContent$GroupContent$update = F3(
	function (msg, model, apiParams) {
		switch (msg.$) {
			case 'AddStudent':
				var student = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							selectedStudents: A3($elm$core$Dict$insert, student.id, student, model.selectedStudents)
						}),
					$elm$core$Platform$Cmd$none);
			case 'RemoveStudent':
				var id = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							selectedStudents: A2($elm$core$Dict$remove, id, model.selectedStudents)
						}),
					$elm$core$Platform$Cmd$none);
			case 'SubmitGroup':
				var semesterId = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{processingRequest: true}),
					A3($author$project$StudentPage$AssignmentContent$GroupContent$createGroup, semesterId, model, apiParams));
			default:
				if (msg.a.$ === 'Ok') {
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{processingRequest: false}),
						$elm$core$Platform$Cmd$none);
				} else {
					var err = msg.a.a;
					return A2(
						$elm$core$Debug$log,
						$elm$core$Debug$toString(err),
						_Utils_Tuple2(
							_Utils_update(
								model,
								{processingRequest: false}),
							$elm$core$Platform$Cmd$none));
				}
		}
	});
var $author$project$StudentPage$AssignmentContent$SignupContent$SignupUpdated = function (a) {
	return {$: 'SignupUpdated', a: a};
};
var $author$project$StudentPage$AssignmentContent$SignupContent$updateSignup = F3(
	function (id, val, _v0) {
		var token = _v0.token;
		var apiBaseUrl = _v0.apiBaseUrl;
		return $author$project$Api$put(
			{
				apiBaseUrl: apiBaseUrl,
				body: $elm$http$Http$jsonBody(
					$elm$json$Json$Encode$object(
						_List_fromArray(
							[
								_Utils_Tuple2(
								'signed_up',
								$elm$json$Json$Encode$bool(val))
							]))),
				endpoint: $author$project$Api$endpoints.signup(id),
				expect: $elm$http$Http$expectWhatever($author$project$StudentPage$AssignmentContent$SignupContent$SignupUpdated),
				token: token
			});
	});
var $author$project$StudentPage$AssignmentContent$SignupContent$update = F3(
	function (msg, model, apiParams) {
		switch (msg.$) {
			case 'UpdateSignup':
				var id = msg.a;
				var val = msg.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{hasProcessingError: false, processingRequest: true}),
					A3($author$project$StudentPage$AssignmentContent$SignupContent$updateSignup, id, val, apiParams));
			case 'SignupUpdated':
				var result = msg.a;
				if (result.$ === 'Ok') {
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{isSignedUp: !model.isSignedUp, processingRequest: false}),
						$elm$core$Platform$Cmd$none);
				} else {
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{hasProcessingError: true, processingRequest: false}),
						$elm$core$Platform$Cmd$none);
				}
			default:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{dismissedMsg: true, hasProcessingError: false}),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$StudentPage$AssignmentContent$TopicContent$ReservedTopic = {$: 'ReservedTopic'};
var $author$project$StudentPage$AssignmentContent$TopicContent$UnexpectedErr = {$: 'UnexpectedErr'};
var $author$project$StudentPage$AssignmentContent$TopicContent$TopicSelected = function (a) {
	return {$: 'TopicSelected', a: a};
};
var $author$project$StudentPage$AssignmentContent$TopicContent$selectTopic = F3(
	function (topicId, groupId, _v0) {
		var token = _v0.token;
		var apiBaseUrl = _v0.apiBaseUrl;
		return $author$project$Api$put(
			{
				apiBaseUrl: apiBaseUrl,
				body: $elm$http$Http$jsonBody(
					$elm$json$Json$Encode$object(
						_List_fromArray(
							[
								_Utils_Tuple2(
								'group',
								$elm$json$Json$Encode$object(
									_List_fromArray(
										[
											_Utils_Tuple2(
											'topic_id',
											$elm$json$Json$Encode$int(topicId))
										])))
							]))),
				endpoint: $author$project$Api$endpoints.group(groupId),
				expect: $elm$http$Http$expectWhatever($author$project$StudentPage$AssignmentContent$TopicContent$TopicSelected),
				token: token
			});
	});
var $author$project$StudentPage$AssignmentContent$TopicContent$update = F3(
	function (msg, model, apiParams) {
		switch (msg.$) {
			case 'SelectTopic':
				var topic = msg.a;
				var groupId = msg.b;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							processingError: $elm$core$Maybe$Nothing,
							processingRequest: true,
							selectedTopic: $elm$core$Maybe$Just(topic)
						}),
					A3($author$project$StudentPage$AssignmentContent$TopicContent$selectTopic, topic.id, groupId, apiParams));
			case 'TopicSelected':
				var result = msg.a;
				if (result.$ === 'Ok') {
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{processingRequest: false}),
						$elm$core$Platform$Cmd$none);
				} else {
					if ((result.a.$ === 'BadStatus') && (result.a.a === 422)) {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									processingError: $elm$core$Maybe$Just($author$project$StudentPage$AssignmentContent$TopicContent$ReservedTopic),
									processingRequest: false
								}),
							$elm$core$Platform$Cmd$none);
					} else {
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									processingError: $elm$core$Maybe$Just($author$project$StudentPage$AssignmentContent$TopicContent$UnexpectedErr),
									processingRequest: false
								}),
							$elm$core$Platform$Cmd$none);
					}
				}
			default:
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{dismissedMsg: true, processingError: $elm$core$Maybe$Nothing}),
					$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$StudentPage$AssignmentContent$update = F3(
	function (msg, index, model) {
		var assignmentsModels = model.assignmentsModels;
		var accessToken = model.accessToken;
		var apiBaseUrl = model.apiBaseUrl;
		var apiParams = {apiBaseUrl: apiBaseUrl, token: accessToken};
		var _v0 = _Utils_Tuple2(
			msg,
			A2($elm$core$Array$get, index, assignmentsModels));
		_v0$4:
		while (true) {
			if (_v0.b.$ === 'Just') {
				switch (_v0.a.$) {
					case 'GotFilesMsg':
						if (_v0.b.a.$ === 'Files') {
							var filesMsg = _v0.a.a;
							var filesModel = _v0.b.a.a;
							var _v1 = A3($author$project$StudentPage$AssignmentContent$FilesContent$update, filesMsg, filesModel, apiParams);
							var model_ = _v1.a;
							var cmd = _v1.b;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{
										assignmentsModels: A3(
											$elm$core$Array$set,
											index,
											$author$project$StudentPage$AssignmentContent$Model$Files(model_),
											assignmentsModels)
									}),
								A2($elm$core$Platform$Cmd$map, $author$project$StudentPage$AssignmentContent$GotFilesMsg, cmd));
						} else {
							break _v0$4;
						}
					case 'GotGroupMsg':
						if (_v0.b.a.$ === 'Group') {
							var groupMsg = _v0.a.a;
							var groupModel = _v0.b.a.a;
							var _v2 = A3($author$project$StudentPage$AssignmentContent$GroupContent$update, groupMsg, groupModel, apiParams);
							var model_ = _v2.a;
							var cmd = _v2.b;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{
										assignmentsModels: A3(
											$elm$core$Array$set,
											index,
											$author$project$StudentPage$AssignmentContent$Model$Group(model_),
											assignmentsModels)
									}),
								A2($elm$core$Platform$Cmd$map, $author$project$StudentPage$AssignmentContent$GotGroupMsg, cmd));
						} else {
							break _v0$4;
						}
					case 'GotTopicsMsg':
						if (_v0.b.a.$ === 'Topic') {
							var topicMsg = _v0.a.a;
							var topicModel = _v0.b.a.a;
							var _v3 = A3($author$project$StudentPage$AssignmentContent$TopicContent$update, topicMsg, topicModel, apiParams);
							var model_ = _v3.a;
							var cmd = _v3.b;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{
										assignmentsModels: A3(
											$elm$core$Array$set,
											index,
											$author$project$StudentPage$AssignmentContent$Model$Topic(model_),
											assignmentsModels)
									}),
								A2($elm$core$Platform$Cmd$map, $author$project$StudentPage$AssignmentContent$GotTopicsMsg, cmd));
						} else {
							break _v0$4;
						}
					default:
						if (_v0.b.a.$ === 'Signup') {
							var signupMsg = _v0.a.a;
							var signupModel = _v0.b.a.a;
							var _v4 = A3($author$project$StudentPage$AssignmentContent$SignupContent$update, signupMsg, signupModel, apiParams);
							var model_ = _v4.a;
							var cmd = _v4.b;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{
										assignmentsModels: A3(
											$elm$core$Array$set,
											index,
											$author$project$StudentPage$AssignmentContent$Model$Signup(model_),
											assignmentsModels)
									}),
								A2($elm$core$Platform$Cmd$map, $author$project$StudentPage$AssignmentContent$GotSignupMsg, cmd));
						} else {
							break _v0$4;
						}
				}
			} else {
				break _v0$4;
			}
		}
		return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	});
var $author$project$StudentPage$update = F2(
	function (msg, model) {
		_v0$7:
		while (true) {
			_v0$12:
			while (true) {
				switch (msg.$) {
					case 'AdjustTimeZone':
						var zone = msg.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{zone: zone}),
							$elm$core$Platform$Cmd$none);
					case 'CurrentTime':
						var posixTime = msg.a;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									currentTimeSec: ($elm$time$Time$posixToMillis(posixTime) / 1000) | 0
								}),
							$elm$core$Platform$Cmd$none);
					case 'LoadedAssignments':
						if (msg.a.$ === 'Ok') {
							var assignments = msg.a.a;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{
										assignments: assignments,
										assignmentsModels: A2($author$project$StudentPage$AssignmentContent$initModels, model, assignments),
										loading: false
									}),
								$elm$core$Platform$Cmd$none);
						} else {
							var err = msg.a.a;
							return A2(
								$elm$core$Debug$log,
								$elm$core$Debug$toString(err),
								_Utils_Tuple2(
									_Utils_update(
										model,
										{loading: false}),
									$elm$core$Platform$Cmd$none));
						}
					case 'Toggle':
						var arrIndex = msg.a;
						var assignment = msg.b;
						var expand = msg.c;
						var _v1 = A4($author$project$StudentPage$assignmentInitCmd, arrIndex, assignment, expand, model);
						var model_ = _v1.a;
						var cmd = _v1.b;
						return _Utils_Tuple2(
							_Utils_update(
								model_,
								{
									assignmentsState: expand ? A2($elm$core$Set$insert, assignment.id, model.assignmentsState) : A2($elm$core$Set$remove, assignment.id, model.assignmentsState)
								}),
							cmd);
					case 'GotAssignmentContentMsg':
						switch (msg.b.$) {
							case 'GotFilesMsg':
								if ((msg.b.a.$ === 'UploadedFiles') && (msg.b.a.a.$ === 'Ok')) {
									var index = msg.a;
									var assignmentMsg = msg.b;
									var _v2 = A3($author$project$StudentPage$AssignmentContent$update, assignmentMsg, index, model);
									var model_ = _v2.a;
									var cmd = _v2.b;
									var _v3 = A2($elm$core$Array$get, index, model.assignments);
									if (_v3.$ === 'Just') {
										var assignment = _v3.a;
										return _Utils_Tuple2(
											_Utils_update(
												model_,
												{
													assignments: A3(
														$elm$core$Array$set,
														index,
														_Utils_update(
															assignment,
															{completed: true}),
														model.assignments)
												}),
											A2(
												$elm$core$Platform$Cmd$map,
												$author$project$StudentPage$GotAssignmentContentMsg(index),
												cmd));
									} else {
										return _Utils_Tuple2(
											model_,
											A2(
												$elm$core$Platform$Cmd$map,
												$author$project$StudentPage$GotAssignmentContentMsg(index),
												cmd));
									}
								} else {
									break _v0$7;
								}
							case 'GotGroupMsg':
								if ((msg.b.a.$ === 'GroupCreated') && (msg.b.a.a.$ === 'Ok')) {
									var index = msg.a;
									var assignmentMsg = msg.b;
									var group = assignmentMsg.a.a.a;
									var _v4 = A3($author$project$StudentPage$AssignmentContent$update, assignmentMsg, index, model);
									var model_ = _v4.a;
									var cmd = _v4.b;
									return _Utils_Tuple2(
										_Utils_update(
											model_,
											{
												group: $elm$core$Maybe$Just(group),
												groupId: $elm$core$Maybe$Just(group.id)
											}),
										A2(
											$elm$core$Platform$Cmd$map,
											$author$project$StudentPage$GotAssignmentContentMsg(index),
											cmd));
								} else {
									break _v0$7;
								}
							default:
								break _v0$7;
						}
					case 'LoadedStudents':
						if (msg.a.$ === 'Ok') {
							var students = msg.a.a;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{loadingStudents: false, students: students}),
								$elm$core$Platform$Cmd$none);
						} else {
							var err = msg.a.a;
							return A2(
								$elm$core$Debug$log,
								$elm$core$Debug$toString(err),
								_Utils_Tuple2(
									_Utils_update(
										model,
										{loadingStudents: false}),
									$elm$core$Platform$Cmd$none));
						}
					case 'LoadedGroup':
						if (msg.a.$ === 'Ok') {
							var group = msg.a.a;
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{
										group: $elm$core$Maybe$Just(group),
										loadingGroup: false
									}),
								$elm$core$Platform$Cmd$none);
						} else {
							break _v0$12;
						}
					case 'LoadedTopics':
						var result = msg.a;
						var model_ = _Utils_update(
							model,
							{loadingTopics: false});
						if (result.$ === 'Ok') {
							var topics = result.a;
							return _Utils_Tuple2(
								_Utils_update(
									model_,
									{topics: topics}),
								$elm$core$Platform$Cmd$none);
						} else {
							return _Utils_Tuple2(model_, $elm$core$Platform$Cmd$none);
						}
					default:
						break _v0$12;
				}
			}
			return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
		var index = msg.a;
		var assignmentMsg = msg.b;
		var _v5 = A3($author$project$StudentPage$AssignmentContent$update, assignmentMsg, index, model);
		var model_ = _v5.a;
		var cmd = _v5.b;
		return _Utils_Tuple2(
			model_,
			A2(
				$elm$core$Platform$Cmd$map,
				$author$project$StudentPage$GotAssignmentContentMsg(index),
				cmd));
	});
var $author$project$LoginPage$updateError = F2(
	function (model, httpError) {
		return _Utils_update(
			model,
			{
				error: $elm$core$Maybe$Just(httpError),
				processing: false
			});
	});
var $author$project$UserType$Professor = function (a) {
	return {$: 'Professor', a: a};
};
var $author$project$UserType$Student = function (a) {
	return {$: 'Student', a: a};
};
var $author$project$UserType$fromSession = function (_v0) {
	var userInfo = _v0.userInfo;
	var _v1 = userInfo.role;
	switch (_v1) {
		case 'student':
			return $author$project$UserType$Student(userInfo);
		case 'professor':
			return $author$project$UserType$Professor(userInfo);
		default:
			return $author$project$UserType$Guest;
	}
};
var $author$project$ProfessorPage$ActivityAssignmentsPage$EditModal = {$: 'EditModal'};
var $author$project$ProfessorPage$ActivityAssignmentsPage$emptyAssignment = {activityId: 0, comment: $elm$core$Maybe$Nothing, completed: false, grade: $elm$core$Maybe$Nothing, groupId: $elm$core$Maybe$Nothing, id: 0, studentId: $elm$core$Maybe$Nothing};
var $author$project$ProfessorPage$ActivityAssignmentsPage$init = {comment: '', editFile: $elm$core$Maybe$Nothing, files: $elm$core$Dict$empty, grade: $elm$core$Maybe$Nothing, hasProcessingError: false, loadingFiles: false, modalState: $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$init, modalType: $author$project$ProfessorPage$ActivityAssignmentsPage$EditModal, processingModal: false, selectedAssignment: $author$project$ProfessorPage$ActivityAssignmentsPage$emptyAssignment, selectedFile: $elm$core$Maybe$Nothing};
var $author$project$ProfessorPage$RegistrationRequestsPage$None = {$: 'None'};
var $author$project$ProfessorPage$RegistrationRequestsPage$Pending = {$: 'Pending'};
var $author$project$ProfessorPage$RegistrationRequestsPage$init = {acceptedRequests: _List_Nil, dismissedMsg: false, hasProcessingError: false, isInitialized: false, modalAction: $author$project$ProfessorPage$RegistrationRequestsPage$None, modalState: $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$init, pendingRequests: _List_Nil, rejectedRequests: _List_Nil, tab: $author$project$ProfessorPage$RegistrationRequestsPage$Pending, updatingRequest: false};
var $author$project$ProfessorPage$TopicsPage$init = {dismissedMsg: false, hasProcessingError: false, isInitialized: false, loadingTopics: true, topicTitle: '', topics: _List_Nil};
var $elm$time$Time$utc = A2($elm$time$Time$Zone, 0, _List_Nil);
var $author$project$ProfessorPage$init = F3(
	function (apiBaseUrl, token, semesterId) {
		return {accessToken: token, activities: $elm$core$Dict$empty, activitiesModel: $author$project$ProfessorPage$ActivitiesPage$init, activityAssignmentsModel: $author$project$ProfessorPage$ActivityAssignmentsPage$init, activityTypes: $elm$core$Dict$empty, apiBaseUrl: apiBaseUrl, assignments: _List_Nil, currentSemesterId: semesterId, groups: $elm$core$Dict$empty, hasLoadingError: false, loadingActivities: true, loadingActivityTypes: true, loadingAssignment: true, loadingGroups: true, loadingStudents: true, requstesModel: $author$project$ProfessorPage$RegistrationRequestsPage$init, students: $elm$core$Dict$empty, topicsModel: $author$project$ProfessorPage$TopicsPage$init, zone: $elm$time$Time$utc};
	});
var $elm$core$Set$empty = $elm$core$Set$Set_elm_builtin($elm$core$Dict$empty);
var $author$project$Util$maybeToBool = function (maybe) {
	if (maybe.$ === 'Just') {
		return true;
	} else {
		return false;
	}
};
var $author$project$StudentPage$Model$init = F5(
	function (apiBaseUrl, token, _v0, _v1, semesterId) {
		var id = _v0.id;
		var email = _v0.email;
		var firstName = _v0.firstName;
		var lastName = _v0.lastName;
		var groupId = _v1.groupId;
		var indexNumber = _v1.indexNumber;
		return {
			accessToken: token,
			apiBaseUrl: apiBaseUrl,
			assignments: $elm$core$Array$empty,
			assignmentsModels: $elm$core$Array$empty,
			assignmentsState: $elm$core$Set$empty,
			currentTimeSec: 0,
			email: email,
			firstName: firstName,
			group: $elm$core$Maybe$Nothing,
			groupId: groupId,
			indexNumber: indexNumber,
			lastName: lastName,
			loading: true,
			loadingGroup: $author$project$Util$maybeToBool(groupId),
			loadingStudents: false,
			loadingTopics: false,
			semesterId: semesterId,
			studentId: id,
			students: _List_Nil,
			topics: _List_Nil,
			zone: $elm$time$Time$utc
		};
	});
var $author$project$Main$initMainContent = F2(
	function (apiBaseUrl, _v0) {
		var accessToken = _v0.accessToken;
		var userInfo = _v0.userInfo;
		var studentInfo = _v0.studentInfo;
		var semesterId = _v0.semesterId;
		if (studentInfo.$ === 'Just') {
			var stInfo = studentInfo.a;
			return $author$project$Main$StudentModel(
				A5($author$project$StudentPage$Model$init, apiBaseUrl, accessToken, userInfo, stInfo, semesterId));
		} else {
			return $author$project$Main$ProfessorModel(
				A3($author$project$ProfessorPage$init, apiBaseUrl, accessToken, semesterId));
		}
	});
var $author$project$Main$updateMainContent = F2(
	function (_v0, session) {
		var mainContent = _v0.mainContent;
		var apiBaseUrl = _v0.apiBaseUrl;
		var accessToken = session.accessToken;
		switch (mainContent.$) {
			case 'NoContent':
				return A2($author$project$Main$initMainContent, apiBaseUrl, session);
			case 'ProfessorModel':
				var model = mainContent.a;
				return $author$project$Main$ProfessorModel(
					_Utils_update(
						model,
						{accessToken: accessToken}));
			default:
				var model = mainContent.a;
				return $author$project$Main$StudentModel(
					_Utils_update(
						model,
						{accessToken: accessToken}));
		}
	});
var $author$project$Main$updateFromSession = F2(
	function (model, session) {
		return _Utils_update(
			model,
			{
				accessTokenExpiresIn: session.expiresIn,
				currentUser: $author$project$UserType$fromSession(session),
				mainContent: A2($author$project$Main$updateMainContent, model, session)
			});
	});
var $author$project$Main$updateFromSessionResult = F2(
	function (model, result) {
		if (result.$ === 'Ok') {
			var session = result.a;
			return A2($author$project$Main$updateFromSession, model, session);
		} else {
			return model;
		}
	});
var $author$project$Main$updateUrl = F2(
	function (url, model) {
		var route = $author$project$Route$fromUrl(url);
		var model_ = _Utils_update(
			model,
			{
				currentPage: A2($author$project$Page$forRoute, route, model.apiBaseUrl),
				currentRoute: route
			});
		return _Utils_Tuple2(
			model_,
			$author$project$Main$initCommand(model_));
	});
var $author$project$Main$update = F2(
	function (msg, model) {
		var _v0 = _Utils_Tuple3(msg, model.currentPage, model.mainContent);
		_v0$12:
		while (true) {
			switch (_v0.a.$) {
				case 'ClickedLink':
					var urlRequest = _v0.a.a;
					if (urlRequest.$ === 'External') {
						var href = urlRequest.a;
						return _Utils_Tuple2(
							model,
							$elm$browser$Browser$Navigation$load(href));
					} else {
						var url = urlRequest.a;
						return _Utils_Tuple2(
							model,
							A2(
								$elm$browser$Browser$Navigation$pushUrl,
								model.key,
								$elm$url$Url$toString(url)));
					}
				case 'ChangedUrl':
					var url = _v0.a.a;
					return A2($author$project$Main$updateUrl, url, model);
				case 'GotInitSessionMsg':
					if (_v0.a.a.$ === 'GotTokenResult') {
						var result = _v0.a.a.a;
						var model_ = A2(
							$author$project$Main$updateFromSessionResult,
							_Utils_update(
								model,
								{initalLoading: false}),
							result);
						var _v2 = A3($author$project$Route$guard, model_.currentUser, model_.currentRoute, model_.key);
						if (_v2.$ === 'Just') {
							var redirection = _v2.a;
							return _Utils_Tuple2(model_, redirection);
						} else {
							return _Utils_Tuple2(
								model_,
								$author$project$Main$initCommand(model_));
						}
					} else {
						break _v0$12;
					}
				case 'GotSessionMsg':
					switch (_v0.a.a.$) {
						case 'GotTokenResult':
							var result = _v0.a.a.a;
							if (result.$ === 'Ok') {
								var session = result.a;
								return _Utils_Tuple2(
									A2($author$project$Main$updateFromSession, model, session),
									$elm$core$Platform$Cmd$none);
							} else {
								return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
							}
						case 'GotSessionResult':
							if (_v0.b.$ === 'LoginPage') {
								var result = _v0.a.a.a;
								var loginModel = _v0.b.a;
								if (result.$ === 'Ok') {
									var session = result.a;
									return _Utils_Tuple2(
										A2($author$project$Main$updateFromSession, model, session),
										A2($author$project$Route$redirectTo, model.key, $author$project$Route$Home));
								} else {
									var error = result.a;
									return _Utils_Tuple2(
										_Utils_update(
											model,
											{
												currentPage: $author$project$Page$LoginPage(
													A2($author$project$LoginPage$updateError, loginModel, error))
											}),
										$elm$core$Platform$Cmd$none);
								}
							} else {
								break _v0$12;
							}
						default:
							break _v0$12;
					}
				case 'GotLoginMsg':
					if (_v0.b.$ === 'LoginPage') {
						var loginMsg = _v0.a.a;
						var loginModel = _v0.b.a;
						return A4(
							$author$project$Main$toPageWithModel,
							$author$project$Page$LoginPage,
							$author$project$Main$GotSessionMsg,
							model,
							A2($author$project$LoginPage$update, loginMsg, loginModel));
					} else {
						break _v0$12;
					}
				case 'GotPasswordMsg':
					if (_v0.b.$ === 'SetPasswordPage') {
						var passwordMsg = _v0.a.a;
						var passwordModel = _v0.b.a;
						if (((passwordMsg.$ === 'SessionMsg') && (passwordMsg.a.$ === 'GotSessionResult')) && (passwordMsg.a.a.$ === 'Ok')) {
							var session = passwordMsg.a.a.a;
							return _Utils_Tuple2(
								A2($author$project$Main$updateFromSession, model, session),
								A2($author$project$Route$redirectTo, model.key, $author$project$Route$Home));
						} else {
							return A4(
								$author$project$Main$toPageWithModel,
								$author$project$Page$SetPasswordPage,
								$author$project$Main$GotPasswordMsg,
								model,
								A2($author$project$SetPasswordPage$update, passwordMsg, passwordModel));
						}
					} else {
						break _v0$12;
					}
				case 'GotRegistrationMsg':
					if (_v0.b.$ === 'RegistrationPage') {
						var regMsg = _v0.a.a;
						var regModel = _v0.b.a;
						return A4(
							$author$project$Main$toPageWithModel,
							$author$project$Page$RegistrationPage,
							$author$project$Main$GotRegistrationMsg,
							model,
							A2($author$project$RegistrationPage$update, regMsg, regModel));
					} else {
						break _v0$12;
					}
				case 'GotProfessorMsg':
					if ((_v0.b.$ === 'ProfessorPage') && (_v0.c.$ === 'ProfessorModel')) {
						var profMsg = _v0.a.a;
						var _v6 = _v0.b;
						var model_ = _v0.c.a;
						var _v7 = A2($author$project$ProfessorPage$update, profMsg, model_);
						var profModel = _v7.a;
						var cmd = _v7.b;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									mainContent: $author$project$Main$ProfessorModel(profModel)
								}),
							A2($elm$core$Platform$Cmd$map, $author$project$Main$GotProfessorMsg, cmd));
					} else {
						break _v0$12;
					}
				case 'GotStudentMsg':
					if (_v0.c.$ === 'StudentModel') {
						var studentMsg = _v0.a.a;
						var model_ = _v0.c.a;
						var _v8 = A2($author$project$StudentPage$update, studentMsg, model_);
						var studentModel = _v8.a;
						var cmd = _v8.b;
						return _Utils_Tuple2(
							_Utils_update(
								model,
								{
									mainContent: $author$project$Main$StudentModel(studentModel)
								}),
							A2($elm$core$Platform$Cmd$map, $author$project$Main$GotStudentMsg, cmd));
					} else {
						break _v0$12;
					}
				case 'RefreshTick':
					return _Utils_Tuple2(
						model,
						A2(
							$elm$core$Platform$Cmd$map,
							$author$project$Main$GotSessionMsg,
							$author$project$Session$silentTokenRefresh(model.apiBaseUrl)));
				default:
					var _v9 = _v0.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{currentUser: $author$project$UserType$Guest, mainContent: $author$project$Main$NoContent}),
						$elm$core$Platform$Cmd$batch(
							_List_fromArray(
								[
									A2($author$project$Route$redirectTo, model.key, $author$project$Route$Home),
									A2(
									$elm$core$Platform$Cmd$map,
									$author$project$Main$GotSessionMsg,
									$author$project$Session$logout(model.apiBaseUrl))
								])));
			}
		}
		return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
	});
var $robinheghan$murmur3$Murmur3$HashData = F4(
	function (shift, seed, hash, charsProcessed) {
		return {charsProcessed: charsProcessed, hash: hash, seed: seed, shift: shift};
	});
var $robinheghan$murmur3$Murmur3$c1 = 3432918353;
var $robinheghan$murmur3$Murmur3$c2 = 461845907;
var $robinheghan$murmur3$Murmur3$multiplyBy = F2(
	function (b, a) {
		return ((a & 65535) * b) + ((((a >>> 16) * b) & 65535) << 16);
	});
var $elm$core$Bitwise$or = _Bitwise_or;
var $robinheghan$murmur3$Murmur3$rotlBy = F2(
	function (b, a) {
		return (a << b) | (a >>> (32 - b));
	});
var $elm$core$Bitwise$xor = _Bitwise_xor;
var $robinheghan$murmur3$Murmur3$finalize = function (data) {
	var acc = (!(!data.hash)) ? (data.seed ^ A2(
		$robinheghan$murmur3$Murmur3$multiplyBy,
		$robinheghan$murmur3$Murmur3$c2,
		A2(
			$robinheghan$murmur3$Murmur3$rotlBy,
			15,
			A2($robinheghan$murmur3$Murmur3$multiplyBy, $robinheghan$murmur3$Murmur3$c1, data.hash)))) : data.seed;
	var h0 = acc ^ data.charsProcessed;
	var h1 = A2($robinheghan$murmur3$Murmur3$multiplyBy, 2246822507, h0 ^ (h0 >>> 16));
	var h2 = A2($robinheghan$murmur3$Murmur3$multiplyBy, 3266489909, h1 ^ (h1 >>> 13));
	return (h2 ^ (h2 >>> 16)) >>> 0;
};
var $elm$core$String$foldl = _String_foldl;
var $robinheghan$murmur3$Murmur3$mix = F2(
	function (h1, k1) {
		return A2(
			$robinheghan$murmur3$Murmur3$multiplyBy,
			5,
			A2(
				$robinheghan$murmur3$Murmur3$rotlBy,
				13,
				h1 ^ A2(
					$robinheghan$murmur3$Murmur3$multiplyBy,
					$robinheghan$murmur3$Murmur3$c2,
					A2(
						$robinheghan$murmur3$Murmur3$rotlBy,
						15,
						A2($robinheghan$murmur3$Murmur3$multiplyBy, $robinheghan$murmur3$Murmur3$c1, k1))))) + 3864292196;
	});
var $robinheghan$murmur3$Murmur3$hashFold = F2(
	function (c, data) {
		var res = data.hash | ((255 & $elm$core$Char$toCode(c)) << data.shift);
		var _v0 = data.shift;
		if (_v0 === 24) {
			return {
				charsProcessed: data.charsProcessed + 1,
				hash: 0,
				seed: A2($robinheghan$murmur3$Murmur3$mix, data.seed, res),
				shift: 0
			};
		} else {
			return {charsProcessed: data.charsProcessed + 1, hash: res, seed: data.seed, shift: data.shift + 8};
		}
	});
var $robinheghan$murmur3$Murmur3$hashString = F2(
	function (seed, str) {
		return $robinheghan$murmur3$Murmur3$finalize(
			A3(
				$elm$core$String$foldl,
				$robinheghan$murmur3$Murmur3$hashFold,
				A4($robinheghan$murmur3$Murmur3$HashData, 0, seed, 0, 0),
				str));
	});
var $rtfeldman$elm_css$Hash$initialSeed = 15739;
var $elm$core$String$fromList = _String_fromList;
var $rtfeldman$elm_hex$Hex$unsafeToDigit = function (num) {
	unsafeToDigit:
	while (true) {
		switch (num) {
			case 0:
				return _Utils_chr('0');
			case 1:
				return _Utils_chr('1');
			case 2:
				return _Utils_chr('2');
			case 3:
				return _Utils_chr('3');
			case 4:
				return _Utils_chr('4');
			case 5:
				return _Utils_chr('5');
			case 6:
				return _Utils_chr('6');
			case 7:
				return _Utils_chr('7');
			case 8:
				return _Utils_chr('8');
			case 9:
				return _Utils_chr('9');
			case 10:
				return _Utils_chr('a');
			case 11:
				return _Utils_chr('b');
			case 12:
				return _Utils_chr('c');
			case 13:
				return _Utils_chr('d');
			case 14:
				return _Utils_chr('e');
			case 15:
				return _Utils_chr('f');
			default:
				var $temp$num = num;
				num = $temp$num;
				continue unsafeToDigit;
		}
	}
};
var $rtfeldman$elm_hex$Hex$unsafePositiveToDigits = F2(
	function (digits, num) {
		unsafePositiveToDigits:
		while (true) {
			if (num < 16) {
				return A2(
					$elm$core$List$cons,
					$rtfeldman$elm_hex$Hex$unsafeToDigit(num),
					digits);
			} else {
				var $temp$digits = A2(
					$elm$core$List$cons,
					$rtfeldman$elm_hex$Hex$unsafeToDigit(
						A2($elm$core$Basics$modBy, 16, num)),
					digits),
					$temp$num = (num / 16) | 0;
				digits = $temp$digits;
				num = $temp$num;
				continue unsafePositiveToDigits;
			}
		}
	});
var $rtfeldman$elm_hex$Hex$toString = function (num) {
	return $elm$core$String$fromList(
		(num < 0) ? A2(
			$elm$core$List$cons,
			_Utils_chr('-'),
			A2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, -num)) : A2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, num));
};
var $rtfeldman$elm_css$Hash$fromString = function (str) {
	return A2(
		$elm$core$String$cons,
		_Utils_chr('_'),
		$rtfeldman$elm_hex$Hex$toString(
			A2($robinheghan$murmur3$Murmur3$hashString, $rtfeldman$elm_css$Hash$initialSeed, str)));
};
var $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles = F2(
	function (_v0, styles) {
		var isCssStyles = _v0.b;
		var cssTemplate = _v0.c;
		if (isCssStyles) {
			var _v1 = A2($elm$core$Dict$get, cssTemplate, styles);
			if (_v1.$ === 'Just') {
				return styles;
			} else {
				return A3(
					$elm$core$Dict$insert,
					cssTemplate,
					$rtfeldman$elm_css$Hash$fromString(cssTemplate),
					styles);
			}
		} else {
			return styles;
		}
	});
var $elm$virtual_dom$VirtualDom$property = F2(
	function (key, value) {
		return A2(
			_VirtualDom_property,
			_VirtualDom_noInnerHtmlOrFormAction(key),
			_VirtualDom_noJavaScriptOrHtmlUri(value));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute = F2(
	function (styles, _v0) {
		var val = _v0.a;
		var isCssStyles = _v0.b;
		var cssTemplate = _v0.c;
		if (isCssStyles) {
			var _v1 = A2($elm$core$Dict$get, cssTemplate, styles);
			if (_v1.$ === 'Just') {
				var classname = _v1.a;
				return A2(
					$elm$virtual_dom$VirtualDom$property,
					'className',
					$elm$json$Json$Encode$string(classname));
			} else {
				return A2(
					$elm$virtual_dom$VirtualDom$property,
					'className',
					$elm$json$Json$Encode$string('_unstyled'));
			}
		} else {
			return val;
		}
	});
var $elm$virtual_dom$VirtualDom$attribute = F2(
	function (key, value) {
		return A2(
			_VirtualDom_attribute,
			_VirtualDom_noOnOrFormAction(key),
			_VirtualDom_noJavaScriptOrHtmlUri(value));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttributeNS = F2(
	function (styles, _v0) {
		var val = _v0.a;
		var isCssStyles = _v0.b;
		var cssTemplate = _v0.c;
		if (isCssStyles) {
			var _v1 = A2($elm$core$Dict$get, cssTemplate, styles);
			if (_v1.$ === 'Just') {
				var classname = _v1.a;
				return A2($elm$virtual_dom$VirtualDom$attribute, 'class', classname);
			} else {
				return A2($elm$virtual_dom$VirtualDom$attribute, 'class', '_unstyled');
			}
		} else {
			return val;
		}
	});
var $elm$virtual_dom$VirtualDom$keyedNode = function (tag) {
	return _VirtualDom_keyedNode(
		_VirtualDom_noScript(tag));
};
var $elm$virtual_dom$VirtualDom$keyedNodeNS = F2(
	function (namespace, tag) {
		return A2(
			_VirtualDom_keyedNodeNS,
			namespace,
			_VirtualDom_noScript(tag));
	});
var $elm$virtual_dom$VirtualDom$node = function (tag) {
	return _VirtualDom_node(
		_VirtualDom_noScript(tag));
};
var $elm$virtual_dom$VirtualDom$nodeNS = function (tag) {
	return _VirtualDom_nodeNS(
		_VirtualDom_noScript(tag));
};
var $rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml = F2(
	function (_v6, _v7) {
		var key = _v6.a;
		var html = _v6.b;
		var pairs = _v7.a;
		var styles = _v7.b;
		switch (html.$) {
			case 'Unstyled':
				var vdom = html.a;
				return _Utils_Tuple2(
					A2(
						$elm$core$List$cons,
						_Utils_Tuple2(key, vdom),
						pairs),
					styles);
			case 'Node':
				var elemType = html.a;
				var properties = html.b;
				var children = html.c;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v9 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v9.a;
				var finalStyles = _v9.b;
				var vdom = A3(
					$elm$virtual_dom$VirtualDom$node,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(finalStyles),
						properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2(
						$elm$core$List$cons,
						_Utils_Tuple2(key, vdom),
						pairs),
					finalStyles);
			case 'NodeNS':
				var ns = html.a;
				var elemType = html.b;
				var properties = html.c;
				var children = html.d;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v10 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v10.a;
				var finalStyles = _v10.b;
				var vdom = A4(
					$elm$virtual_dom$VirtualDom$nodeNS,
					ns,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(finalStyles),
						properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2(
						$elm$core$List$cons,
						_Utils_Tuple2(key, vdom),
						pairs),
					finalStyles);
			case 'KeyedNode':
				var elemType = html.a;
				var properties = html.b;
				var children = html.c;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v11 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v11.a;
				var finalStyles = _v11.b;
				var vdom = A3(
					$elm$virtual_dom$VirtualDom$keyedNode,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(finalStyles),
						properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2(
						$elm$core$List$cons,
						_Utils_Tuple2(key, vdom),
						pairs),
					finalStyles);
			default:
				var ns = html.a;
				var elemType = html.b;
				var properties = html.c;
				var children = html.d;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v12 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v12.a;
				var finalStyles = _v12.b;
				var vdom = A4(
					$elm$virtual_dom$VirtualDom$keyedNodeNS,
					ns,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(finalStyles),
						properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2(
						$elm$core$List$cons,
						_Utils_Tuple2(key, vdom),
						pairs),
					finalStyles);
		}
	});
var $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml = F2(
	function (html, _v0) {
		var nodes = _v0.a;
		var styles = _v0.b;
		switch (html.$) {
			case 'Unstyled':
				var vdomNode = html.a;
				return _Utils_Tuple2(
					A2($elm$core$List$cons, vdomNode, nodes),
					styles);
			case 'Node':
				var elemType = html.a;
				var properties = html.b;
				var children = html.c;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v2 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v2.a;
				var finalStyles = _v2.b;
				var vdomNode = A3(
					$elm$virtual_dom$VirtualDom$node,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(finalStyles),
						properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2($elm$core$List$cons, vdomNode, nodes),
					finalStyles);
			case 'NodeNS':
				var ns = html.a;
				var elemType = html.b;
				var properties = html.c;
				var children = html.d;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v3 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v3.a;
				var finalStyles = _v3.b;
				var vdomNode = A4(
					$elm$virtual_dom$VirtualDom$nodeNS,
					ns,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttributeNS(finalStyles),
						properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2($elm$core$List$cons, vdomNode, nodes),
					finalStyles);
			case 'KeyedNode':
				var elemType = html.a;
				var properties = html.b;
				var children = html.c;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v4 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v4.a;
				var finalStyles = _v4.b;
				var vdomNode = A3(
					$elm$virtual_dom$VirtualDom$keyedNode,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(finalStyles),
						properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2($elm$core$List$cons, vdomNode, nodes),
					finalStyles);
			default:
				var ns = html.a;
				var elemType = html.b;
				var properties = html.c;
				var children = html.d;
				var combinedStyles = A3($elm$core$List$foldl, $rtfeldman$elm_css$VirtualDom$Styled$accumulateStyles, styles, properties);
				var _v5 = A3(
					$elm$core$List$foldl,
					$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,
					_Utils_Tuple2(_List_Nil, combinedStyles),
					children);
				var childNodes = _v5.a;
				var finalStyles = _v5.b;
				var vdomNode = A4(
					$elm$virtual_dom$VirtualDom$keyedNodeNS,
					ns,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttributeNS(finalStyles),
						properties),
					$elm$core$List$reverse(childNodes));
				return _Utils_Tuple2(
					A2($elm$core$List$cons, vdomNode, nodes),
					finalStyles);
		}
	});
var $elm$core$Dict$singleton = F2(
	function (key, value) {
		return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
	});
var $rtfeldman$elm_css$VirtualDom$Styled$stylesFromPropertiesHelp = F2(
	function (candidate, properties) {
		stylesFromPropertiesHelp:
		while (true) {
			if (!properties.b) {
				return candidate;
			} else {
				if (!properties.a.b) {
					var _v1 = properties.a;
					var classname = _v1.c;
					var rest = properties.b;
					var $temp$candidate = candidate,
						$temp$properties = rest;
					candidate = $temp$candidate;
					properties = $temp$properties;
					continue stylesFromPropertiesHelp;
				} else {
					var _v2 = properties.a;
					var cssTemplate = _v2.c;
					var rest = properties.b;
					var $temp$candidate = $elm$core$Maybe$Just(cssTemplate),
						$temp$properties = rest;
					candidate = $temp$candidate;
					properties = $temp$properties;
					continue stylesFromPropertiesHelp;
				}
			}
		}
	});
var $rtfeldman$elm_css$VirtualDom$Styled$stylesFromProperties = function (properties) {
	var _v0 = A2($rtfeldman$elm_css$VirtualDom$Styled$stylesFromPropertiesHelp, $elm$core$Maybe$Nothing, properties);
	if (_v0.$ === 'Nothing') {
		return $elm$core$Dict$empty;
	} else {
		var cssTemplate = _v0.a;
		return A2(
			$elm$core$Dict$singleton,
			cssTemplate,
			$rtfeldman$elm_css$Hash$fromString(cssTemplate));
	}
};
var $elm$core$List$singleton = function (value) {
	return _List_fromArray(
		[value]);
};
var $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;
var $rtfeldman$elm_css$VirtualDom$Styled$classnameStandin = '\u0007';
var $elm$core$String$replace = F3(
	function (before, after, string) {
		return A2(
			$elm$core$String$join,
			after,
			A2($elm$core$String$split, before, string));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$styleToDeclaration = F3(
	function (template, classname, declaration) {
		return declaration + ('\n' + A3($elm$core$String$replace, $rtfeldman$elm_css$VirtualDom$Styled$classnameStandin, classname, template));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$toDeclaration = function (dict) {
	return A3($elm$core$Dict$foldl, $rtfeldman$elm_css$VirtualDom$Styled$styleToDeclaration, '', dict);
};
var $rtfeldman$elm_css$VirtualDom$Styled$toStyleNode = F2(
	function (maybeNonce, styles) {
		return A3(
			$elm$virtual_dom$VirtualDom$node,
			'span',
			_List_fromArray(
				[
					A2($elm$virtual_dom$VirtualDom$attribute, 'style', 'display: none;'),
					A2($elm$virtual_dom$VirtualDom$attribute, 'class', 'elm-css-style-wrapper')
				]),
			_List_fromArray(
				[
					A3(
					$elm$virtual_dom$VirtualDom$node,
					'style',
					function () {
						if (maybeNonce.$ === 'Just') {
							var nonce = maybeNonce.a.a;
							return _List_fromArray(
								[
									A2($elm$virtual_dom$VirtualDom$attribute, 'nonce', nonce)
								]);
						} else {
							return _List_Nil;
						}
					}(),
					$elm$core$List$singleton(
						$elm$virtual_dom$VirtualDom$text(
							$rtfeldman$elm_css$VirtualDom$Styled$toDeclaration(styles))))
				]));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$unstyle = F4(
	function (maybeNonce, elemType, properties, children) {
		var initialStyles = $rtfeldman$elm_css$VirtualDom$Styled$stylesFromProperties(properties);
		var _v0 = A3(
			$elm$core$List$foldl,
			$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,
			_Utils_Tuple2(_List_Nil, initialStyles),
			children);
		var childNodes = _v0.a;
		var styles = _v0.b;
		var styleNode = A2($rtfeldman$elm_css$VirtualDom$Styled$toStyleNode, maybeNonce, styles);
		var unstyledProperties = A2(
			$elm$core$List$map,
			$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(styles),
			properties);
		return A3(
			$elm$virtual_dom$VirtualDom$node,
			elemType,
			unstyledProperties,
			A2(
				$elm$core$List$cons,
				styleNode,
				$elm$core$List$reverse(childNodes)));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$containsKey = F2(
	function (key, pairs) {
		containsKey:
		while (true) {
			if (!pairs.b) {
				return false;
			} else {
				var _v1 = pairs.a;
				var str = _v1.a;
				var rest = pairs.b;
				if (_Utils_eq(key, str)) {
					return true;
				} else {
					var $temp$key = key,
						$temp$pairs = rest;
					key = $temp$key;
					pairs = $temp$pairs;
					continue containsKey;
				}
			}
		}
	});
var $rtfeldman$elm_css$VirtualDom$Styled$getUnusedKey = F2(
	function (_default, pairs) {
		getUnusedKey:
		while (true) {
			if (!pairs.b) {
				return _default;
			} else {
				var _v1 = pairs.a;
				var firstKey = _v1.a;
				var rest = pairs.b;
				var newKey = '_' + firstKey;
				if (A2($rtfeldman$elm_css$VirtualDom$Styled$containsKey, newKey, rest)) {
					var $temp$default = newKey,
						$temp$pairs = rest;
					_default = $temp$default;
					pairs = $temp$pairs;
					continue getUnusedKey;
				} else {
					return newKey;
				}
			}
		}
	});
var $rtfeldman$elm_css$VirtualDom$Styled$toKeyedStyleNode = F3(
	function (maybeNonce, allStyles, keyedChildNodes) {
		var styleNodeKey = A2($rtfeldman$elm_css$VirtualDom$Styled$getUnusedKey, '_', keyedChildNodes);
		var finalNode = A2($rtfeldman$elm_css$VirtualDom$Styled$toStyleNode, maybeNonce, allStyles);
		return _Utils_Tuple2(styleNodeKey, finalNode);
	});
var $rtfeldman$elm_css$VirtualDom$Styled$unstyleKeyed = F4(
	function (maybeNonce, elemType, properties, keyedChildren) {
		var initialStyles = $rtfeldman$elm_css$VirtualDom$Styled$stylesFromProperties(properties);
		var _v0 = A3(
			$elm$core$List$foldl,
			$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,
			_Utils_Tuple2(_List_Nil, initialStyles),
			keyedChildren);
		var keyedChildNodes = _v0.a;
		var styles = _v0.b;
		var keyedStyleNode = A3($rtfeldman$elm_css$VirtualDom$Styled$toKeyedStyleNode, maybeNonce, styles, keyedChildNodes);
		var unstyledProperties = A2(
			$elm$core$List$map,
			$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttribute(styles),
			properties);
		return A3(
			$elm$virtual_dom$VirtualDom$keyedNode,
			elemType,
			unstyledProperties,
			A2(
				$elm$core$List$cons,
				keyedStyleNode,
				$elm$core$List$reverse(keyedChildNodes)));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$unstyleKeyedNS = F5(
	function (maybeNonce, ns, elemType, properties, keyedChildren) {
		var initialStyles = $rtfeldman$elm_css$VirtualDom$Styled$stylesFromProperties(properties);
		var _v0 = A3(
			$elm$core$List$foldl,
			$rtfeldman$elm_css$VirtualDom$Styled$accumulateKeyedStyledHtml,
			_Utils_Tuple2(_List_Nil, initialStyles),
			keyedChildren);
		var keyedChildNodes = _v0.a;
		var styles = _v0.b;
		var keyedStyleNode = A3($rtfeldman$elm_css$VirtualDom$Styled$toKeyedStyleNode, maybeNonce, styles, keyedChildNodes);
		var unstyledProperties = A2(
			$elm$core$List$map,
			$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttributeNS(styles),
			properties);
		return A4(
			$elm$virtual_dom$VirtualDom$keyedNodeNS,
			ns,
			elemType,
			unstyledProperties,
			A2(
				$elm$core$List$cons,
				keyedStyleNode,
				$elm$core$List$reverse(keyedChildNodes)));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$unstyleNS = F5(
	function (maybeNonce, ns, elemType, properties, children) {
		var initialStyles = $rtfeldman$elm_css$VirtualDom$Styled$stylesFromProperties(properties);
		var _v0 = A3(
			$elm$core$List$foldl,
			$rtfeldman$elm_css$VirtualDom$Styled$accumulateStyledHtml,
			_Utils_Tuple2(_List_Nil, initialStyles),
			children);
		var childNodes = _v0.a;
		var styles = _v0.b;
		var styleNode = A2($rtfeldman$elm_css$VirtualDom$Styled$toStyleNode, maybeNonce, styles);
		var unstyledProperties = A2(
			$elm$core$List$map,
			$rtfeldman$elm_css$VirtualDom$Styled$extractUnstyledAttributeNS(styles),
			properties);
		return A4(
			$elm$virtual_dom$VirtualDom$nodeNS,
			ns,
			elemType,
			unstyledProperties,
			A2(
				$elm$core$List$cons,
				styleNode,
				$elm$core$List$reverse(childNodes)));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$toUnstyled = function (vdom) {
	switch (vdom.$) {
		case 'Unstyled':
			var plainNode = vdom.a;
			return plainNode;
		case 'Node':
			var elemType = vdom.a;
			var properties = vdom.b;
			var children = vdom.c;
			return A4($rtfeldman$elm_css$VirtualDom$Styled$unstyle, $elm$core$Maybe$Nothing, elemType, properties, children);
		case 'NodeNS':
			var ns = vdom.a;
			var elemType = vdom.b;
			var properties = vdom.c;
			var children = vdom.d;
			return A5($rtfeldman$elm_css$VirtualDom$Styled$unstyleNS, $elm$core$Maybe$Nothing, ns, elemType, properties, children);
		case 'KeyedNode':
			var elemType = vdom.a;
			var properties = vdom.b;
			var children = vdom.c;
			return A4($rtfeldman$elm_css$VirtualDom$Styled$unstyleKeyed, $elm$core$Maybe$Nothing, elemType, properties, children);
		default:
			var ns = vdom.a;
			var elemType = vdom.b;
			var properties = vdom.c;
			var children = vdom.d;
			return A5($rtfeldman$elm_css$VirtualDom$Styled$unstyleKeyedNS, $elm$core$Maybe$Nothing, ns, elemType, properties, children);
	}
};
var $rtfeldman$elm_css$Html$Styled$toUnstyled = $rtfeldman$elm_css$VirtualDom$Styled$toUnstyled;
var $tesk9$accessible_html_with_css$Accessibility$Styled$toUnstyled = $rtfeldman$elm_css$Html$Styled$toUnstyled;
var $author$project$Main$GotLoginMsg = function (a) {
	return {$: 'GotLoginMsg', a: a};
};
var $rtfeldman$elm_css$Css$Preprocess$AppendProperty = function (a) {
	return {$: 'AppendProperty', a: a};
};
var $rtfeldman$elm_css$Css$Structure$Property = function (a) {
	return {$: 'Property', a: a};
};
var $rtfeldman$elm_css$Css$property = F2(
	function (key, value) {
		return $rtfeldman$elm_css$Css$Preprocess$AppendProperty(
			$rtfeldman$elm_css$Css$Structure$Property(key + (':' + value)));
	});
var $rtfeldman$elm_css$Css$backgroundColor = function (c) {
	return A2($rtfeldman$elm_css$Css$property, 'background-color', c.value);
};
var $rtfeldman$elm_css$Css$Structure$Compatible = {$: 'Compatible'};
var $rtfeldman$elm_css$Css$row = {flexDirection: $rtfeldman$elm_css$Css$Structure$Compatible, flexDirectionOrWrap: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'row'};
var $rtfeldman$elm_css$Css$column = _Utils_update(
	$rtfeldman$elm_css$Css$row,
	{value: 'column'});
var $rtfeldman$elm_css$VirtualDom$Styled$Attribute = F3(
	function (a, b, c) {
		return {$: 'Attribute', a: a, b: b, c: c};
	});
var $elm$core$List$any = F2(
	function (isOkay, list) {
		any:
		while (true) {
			if (!list.b) {
				return false;
			} else {
				var x = list.a;
				var xs = list.b;
				if (isOkay(x)) {
					return true;
				} else {
					var $temp$isOkay = isOkay,
						$temp$list = xs;
					isOkay = $temp$isOkay;
					list = $temp$list;
					continue any;
				}
			}
		}
	});
var $elm$core$List$all = F2(
	function (isOkay, list) {
		return !A2(
			$elm$core$List$any,
			A2($elm$core$Basics$composeL, $elm$core$Basics$not, isOkay),
			list);
	});
var $elm$core$List$isEmpty = function (xs) {
	if (!xs.b) {
		return true;
	} else {
		return false;
	}
};
var $rtfeldman$elm_css$Css$Structure$compactHelp = F2(
	function (declaration, _v0) {
		var keyframesByName = _v0.a;
		var declarations = _v0.b;
		switch (declaration.$) {
			case 'StyleBlockDeclaration':
				var _v2 = declaration.a;
				var properties = _v2.c;
				return $elm$core$List$isEmpty(properties) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			case 'MediaRule':
				var styleBlocks = declaration.b;
				return A2(
					$elm$core$List$all,
					function (_v3) {
						var properties = _v3.c;
						return $elm$core$List$isEmpty(properties);
					},
					styleBlocks) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			case 'SupportsRule':
				var otherDeclarations = declaration.b;
				return $elm$core$List$isEmpty(otherDeclarations) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			case 'DocumentRule':
				return _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			case 'PageRule':
				var properties = declaration.a;
				return $elm$core$List$isEmpty(properties) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			case 'FontFace':
				var properties = declaration.a;
				return $elm$core$List$isEmpty(properties) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			case 'Keyframes':
				var record = declaration.a;
				return $elm$core$String$isEmpty(record.declaration) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					A3($elm$core$Dict$insert, record.name, record.declaration, keyframesByName),
					declarations);
			case 'Viewport':
				var properties = declaration.a;
				return $elm$core$List$isEmpty(properties) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			case 'CounterStyle':
				var properties = declaration.a;
				return $elm$core$List$isEmpty(properties) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
			default:
				var tuples = declaration.a;
				return A2(
					$elm$core$List$all,
					function (_v4) {
						var properties = _v4.b;
						return $elm$core$List$isEmpty(properties);
					},
					tuples) ? _Utils_Tuple2(keyframesByName, declarations) : _Utils_Tuple2(
					keyframesByName,
					A2($elm$core$List$cons, declaration, declarations));
		}
	});
var $rtfeldman$elm_css$Css$Structure$Keyframes = function (a) {
	return {$: 'Keyframes', a: a};
};
var $rtfeldman$elm_css$Css$Structure$withKeyframeDeclarations = F2(
	function (keyframesByName, compactedDeclarations) {
		return A2(
			$elm$core$List$append,
			A2(
				$elm$core$List$map,
				function (_v0) {
					var name = _v0.a;
					var decl = _v0.b;
					return $rtfeldman$elm_css$Css$Structure$Keyframes(
						{declaration: decl, name: name});
				},
				$elm$core$Dict$toList(keyframesByName)),
			compactedDeclarations);
	});
var $rtfeldman$elm_css$Css$Structure$compactDeclarations = function (declarations) {
	var _v0 = A3(
		$elm$core$List$foldr,
		$rtfeldman$elm_css$Css$Structure$compactHelp,
		_Utils_Tuple2($elm$core$Dict$empty, _List_Nil),
		declarations);
	var keyframesByName = _v0.a;
	var compactedDeclarations = _v0.b;
	return A2($rtfeldman$elm_css$Css$Structure$withKeyframeDeclarations, keyframesByName, compactedDeclarations);
};
var $rtfeldman$elm_css$Css$Structure$compactStylesheet = function (_v0) {
	var charset = _v0.charset;
	var imports = _v0.imports;
	var namespaces = _v0.namespaces;
	var declarations = _v0.declarations;
	return {
		charset: charset,
		declarations: $rtfeldman$elm_css$Css$Structure$compactDeclarations(declarations),
		imports: imports,
		namespaces: namespaces
	};
};
var $elm$core$Maybe$map = F2(
	function (f, maybe) {
		if (maybe.$ === 'Just') {
			var value = maybe.a;
			return $elm$core$Maybe$Just(
				f(value));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $rtfeldman$elm_css$Css$Structure$Output$charsetToString = function (charset) {
	return A2(
		$elm$core$Maybe$withDefault,
		'',
		A2(
			$elm$core$Maybe$map,
			function (str) {
				return '@charset \"' + (str + '\"');
			},
			charset));
};
var $rtfeldman$elm_css$Css$String$mapJoinHelp = F4(
	function (map, sep, strs, result) {
		mapJoinHelp:
		while (true) {
			if (!strs.b) {
				return result;
			} else {
				if (!strs.b.b) {
					var first = strs.a;
					return result + (map(first) + '');
				} else {
					var first = strs.a;
					var rest = strs.b;
					var $temp$map = map,
						$temp$sep = sep,
						$temp$strs = rest,
						$temp$result = result + (map(first) + (sep + ''));
					map = $temp$map;
					sep = $temp$sep;
					strs = $temp$strs;
					result = $temp$result;
					continue mapJoinHelp;
				}
			}
		}
	});
var $rtfeldman$elm_css$Css$String$mapJoin = F3(
	function (map, sep, strs) {
		return A4($rtfeldman$elm_css$Css$String$mapJoinHelp, map, sep, strs, '');
	});
var $rtfeldman$elm_css$Css$Structure$Output$mediaExpressionToString = function (expression) {
	return '(' + (expression.feature + (A2(
		$elm$core$Maybe$withDefault,
		'',
		A2(
			$elm$core$Maybe$map,
			$elm$core$Basics$append(': '),
			expression.value)) + ')'));
};
var $rtfeldman$elm_css$Css$Structure$Output$mediaTypeToString = function (mediaType) {
	switch (mediaType.$) {
		case 'Print':
			return 'print';
		case 'Screen':
			return 'screen';
		default:
			return 'speech';
	}
};
var $rtfeldman$elm_css$Css$Structure$Output$mediaQueryToString = function (mediaQuery) {
	var prefixWith = F3(
		function (str, mediaType, expressions) {
			return str + (' ' + A2(
				$elm$core$String$join,
				' and ',
				A2(
					$elm$core$List$cons,
					$rtfeldman$elm_css$Css$Structure$Output$mediaTypeToString(mediaType),
					A2($elm$core$List$map, $rtfeldman$elm_css$Css$Structure$Output$mediaExpressionToString, expressions))));
		});
	switch (mediaQuery.$) {
		case 'AllQuery':
			var expressions = mediaQuery.a;
			return A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$mediaExpressionToString, ' and ', expressions);
		case 'OnlyQuery':
			var mediaType = mediaQuery.a;
			var expressions = mediaQuery.b;
			return A3(prefixWith, 'only', mediaType, expressions);
		case 'NotQuery':
			var mediaType = mediaQuery.a;
			var expressions = mediaQuery.b;
			return A3(prefixWith, 'not', mediaType, expressions);
		default:
			var str = mediaQuery.a;
			return str;
	}
};
var $rtfeldman$elm_css$Css$Structure$Output$importMediaQueryToString = F2(
	function (name, mediaQuery) {
		return '@import \"' + (name + ($rtfeldman$elm_css$Css$Structure$Output$mediaQueryToString(mediaQuery) + '\"'));
	});
var $rtfeldman$elm_css$Css$Structure$Output$importToString = function (_v0) {
	var name = _v0.a;
	var mediaQueries = _v0.b;
	return A3(
		$rtfeldman$elm_css$Css$String$mapJoin,
		$rtfeldman$elm_css$Css$Structure$Output$importMediaQueryToString(name),
		'\n',
		mediaQueries);
};
var $rtfeldman$elm_css$Css$Structure$Output$namespaceToString = function (_v0) {
	var prefix = _v0.a;
	var str = _v0.b;
	return '@namespace ' + (prefix + ('\"' + (str + '\"')));
};
var $rtfeldman$elm_css$Css$Structure$Output$emitProperties = function (properties) {
	return A3(
		$rtfeldman$elm_css$Css$String$mapJoin,
		function (_v0) {
			var prop = _v0.a;
			return prop + ';';
		},
		'',
		properties);
};
var $elm$core$String$append = _String_append;
var $rtfeldman$elm_css$Css$Structure$Output$pseudoElementToString = function (_v0) {
	var str = _v0.a;
	return '::' + str;
};
var $rtfeldman$elm_css$Css$Structure$Output$combinatorToString = function (combinator) {
	switch (combinator.$) {
		case 'AdjacentSibling':
			return '+';
		case 'GeneralSibling':
			return '~';
		case 'Child':
			return '>';
		default:
			return '';
	}
};
var $rtfeldman$elm_css$Css$Structure$Output$repeatableSimpleSelectorToString = function (repeatableSimpleSelector) {
	switch (repeatableSimpleSelector.$) {
		case 'ClassSelector':
			var str = repeatableSimpleSelector.a;
			return '.' + str;
		case 'IdSelector':
			var str = repeatableSimpleSelector.a;
			return '#' + str;
		case 'PseudoClassSelector':
			var str = repeatableSimpleSelector.a;
			return ':' + str;
		default:
			var str = repeatableSimpleSelector.a;
			return '[' + (str + ']');
	}
};
var $rtfeldman$elm_css$Css$Structure$Output$simpleSelectorSequenceToString = function (simpleSelectorSequence) {
	switch (simpleSelectorSequence.$) {
		case 'TypeSelectorSequence':
			var str = simpleSelectorSequence.a.a;
			var repeatableSimpleSelectors = simpleSelectorSequence.b;
			return _Utils_ap(
				str,
				A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$repeatableSimpleSelectorToString, '', repeatableSimpleSelectors));
		case 'UniversalSelectorSequence':
			var repeatableSimpleSelectors = simpleSelectorSequence.a;
			return $elm$core$List$isEmpty(repeatableSimpleSelectors) ? '*' : A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$repeatableSimpleSelectorToString, '', repeatableSimpleSelectors);
		default:
			var str = simpleSelectorSequence.a;
			var repeatableSimpleSelectors = simpleSelectorSequence.b;
			return _Utils_ap(
				str,
				A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$repeatableSimpleSelectorToString, '', repeatableSimpleSelectors));
	}
};
var $rtfeldman$elm_css$Css$Structure$Output$selectorChainToString = function (_v0) {
	var combinator = _v0.a;
	var sequence = _v0.b;
	return $rtfeldman$elm_css$Css$Structure$Output$combinatorToString(combinator) + (' ' + $rtfeldman$elm_css$Css$Structure$Output$simpleSelectorSequenceToString(sequence));
};
var $rtfeldman$elm_css$Css$Structure$Output$selectorToString = function (_v0) {
	var simpleSelectorSequence = _v0.a;
	var chain = _v0.b;
	var pseudoElement = _v0.c;
	var segments = A2(
		$elm$core$List$cons,
		$rtfeldman$elm_css$Css$Structure$Output$simpleSelectorSequenceToString(simpleSelectorSequence),
		A2($elm$core$List$map, $rtfeldman$elm_css$Css$Structure$Output$selectorChainToString, chain));
	var pseudoElementsString = A2(
		$elm$core$Maybe$withDefault,
		'',
		A2($elm$core$Maybe$map, $rtfeldman$elm_css$Css$Structure$Output$pseudoElementToString, pseudoElement));
	return A2(
		$elm$core$String$append,
		A2($elm$core$String$join, ' ', segments),
		pseudoElementsString);
};
var $rtfeldman$elm_css$Css$Structure$Output$prettyPrintStyleBlock = function (_v0) {
	var firstSelector = _v0.a;
	var otherSelectors = _v0.b;
	var properties = _v0.c;
	var selectorStr = A3(
		$rtfeldman$elm_css$Css$String$mapJoin,
		$rtfeldman$elm_css$Css$Structure$Output$selectorToString,
		',',
		A2($elm$core$List$cons, firstSelector, otherSelectors));
	return selectorStr + ('{' + ($rtfeldman$elm_css$Css$Structure$Output$emitProperties(properties) + '}'));
};
var $rtfeldman$elm_css$Css$Structure$Output$prettyPrintDeclaration = function (decl) {
	switch (decl.$) {
		case 'StyleBlockDeclaration':
			var styleBlock = decl.a;
			return $rtfeldman$elm_css$Css$Structure$Output$prettyPrintStyleBlock(styleBlock);
		case 'MediaRule':
			var mediaQueries = decl.a;
			var styleBlocks = decl.b;
			var query = A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$mediaQueryToString, ', ', mediaQueries);
			var blocks = A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$prettyPrintStyleBlock, '\n', styleBlocks);
			return '@media ' + (query + ('{' + (blocks + '}')));
		case 'SupportsRule':
			return 'TODO';
		case 'DocumentRule':
			return 'TODO';
		case 'PageRule':
			return 'TODO';
		case 'FontFace':
			return 'TODO';
		case 'Keyframes':
			var name = decl.a.name;
			var declaration = decl.a.declaration;
			return '@keyframes ' + (name + ('{' + (declaration + '}')));
		case 'Viewport':
			return 'TODO';
		case 'CounterStyle':
			return 'TODO';
		default:
			return 'TODO';
	}
};
var $rtfeldman$elm_css$Css$Structure$Output$prettyPrint = function (_v0) {
	var charset = _v0.charset;
	var imports = _v0.imports;
	var namespaces = _v0.namespaces;
	var declarations = _v0.declarations;
	return $rtfeldman$elm_css$Css$Structure$Output$charsetToString(charset) + (A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$importToString, '\n', imports) + (A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$namespaceToString, '\n', namespaces) + (A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Structure$Output$prettyPrintDeclaration, '\n', declarations) + '')));
};
var $rtfeldman$elm_css$Css$Structure$CounterStyle = function (a) {
	return {$: 'CounterStyle', a: a};
};
var $rtfeldman$elm_css$Css$Structure$FontFace = function (a) {
	return {$: 'FontFace', a: a};
};
var $rtfeldman$elm_css$Css$Structure$PageRule = function (a) {
	return {$: 'PageRule', a: a};
};
var $rtfeldman$elm_css$Css$Structure$Selector = F3(
	function (a, b, c) {
		return {$: 'Selector', a: a, b: b, c: c};
	});
var $rtfeldman$elm_css$Css$Structure$StyleBlock = F3(
	function (a, b, c) {
		return {$: 'StyleBlock', a: a, b: b, c: c};
	});
var $rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration = function (a) {
	return {$: 'StyleBlockDeclaration', a: a};
};
var $rtfeldman$elm_css$Css$Structure$SupportsRule = F2(
	function (a, b) {
		return {$: 'SupportsRule', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$Structure$Viewport = function (a) {
	return {$: 'Viewport', a: a};
};
var $rtfeldman$elm_css$Css$Structure$MediaRule = F2(
	function (a, b) {
		return {$: 'MediaRule', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$Structure$mapLast = F2(
	function (update, list) {
		if (!list.b) {
			return list;
		} else {
			if (!list.b.b) {
				var only = list.a;
				return _List_fromArray(
					[
						update(only)
					]);
			} else {
				var first = list.a;
				var rest = list.b;
				return A2(
					$elm$core$List$cons,
					first,
					A2($rtfeldman$elm_css$Css$Structure$mapLast, update, rest));
			}
		}
	});
var $rtfeldman$elm_css$Css$Structure$withPropertyAppended = F2(
	function (property, _v0) {
		var firstSelector = _v0.a;
		var otherSelectors = _v0.b;
		var properties = _v0.c;
		return A3(
			$rtfeldman$elm_css$Css$Structure$StyleBlock,
			firstSelector,
			otherSelectors,
			_Utils_ap(
				properties,
				_List_fromArray(
					[property])));
	});
var $rtfeldman$elm_css$Css$Structure$appendProperty = F2(
	function (property, declarations) {
		if (!declarations.b) {
			return declarations;
		} else {
			if (!declarations.b.b) {
				switch (declarations.a.$) {
					case 'StyleBlockDeclaration':
						var styleBlock = declarations.a.a;
						return _List_fromArray(
							[
								$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration(
								A2($rtfeldman$elm_css$Css$Structure$withPropertyAppended, property, styleBlock))
							]);
					case 'MediaRule':
						var _v1 = declarations.a;
						var mediaQueries = _v1.a;
						var styleBlocks = _v1.b;
						return _List_fromArray(
							[
								A2(
								$rtfeldman$elm_css$Css$Structure$MediaRule,
								mediaQueries,
								A2(
									$rtfeldman$elm_css$Css$Structure$mapLast,
									$rtfeldman$elm_css$Css$Structure$withPropertyAppended(property),
									styleBlocks))
							]);
					default:
						return declarations;
				}
			} else {
				var first = declarations.a;
				var rest = declarations.b;
				return A2(
					$elm$core$List$cons,
					first,
					A2($rtfeldman$elm_css$Css$Structure$appendProperty, property, rest));
			}
		}
	});
var $rtfeldman$elm_css$Css$Structure$appendToLastSelector = F2(
	function (f, styleBlock) {
		if (!styleBlock.b.b) {
			var only = styleBlock.a;
			var properties = styleBlock.c;
			return _List_fromArray(
				[
					A3($rtfeldman$elm_css$Css$Structure$StyleBlock, only, _List_Nil, properties),
					A3(
					$rtfeldman$elm_css$Css$Structure$StyleBlock,
					f(only),
					_List_Nil,
					_List_Nil)
				]);
		} else {
			var first = styleBlock.a;
			var rest = styleBlock.b;
			var properties = styleBlock.c;
			var newRest = A2($elm$core$List$map, f, rest);
			var newFirst = f(first);
			return _List_fromArray(
				[
					A3($rtfeldman$elm_css$Css$Structure$StyleBlock, first, rest, properties),
					A3($rtfeldman$elm_css$Css$Structure$StyleBlock, newFirst, newRest, _List_Nil)
				]);
		}
	});
var $rtfeldman$elm_css$Css$Structure$applyPseudoElement = F2(
	function (pseudo, _v0) {
		var sequence = _v0.a;
		var selectors = _v0.b;
		return A3(
			$rtfeldman$elm_css$Css$Structure$Selector,
			sequence,
			selectors,
			$elm$core$Maybe$Just(pseudo));
	});
var $rtfeldman$elm_css$Css$Structure$appendPseudoElementToLastSelector = F2(
	function (pseudo, styleBlock) {
		return A2(
			$rtfeldman$elm_css$Css$Structure$appendToLastSelector,
			$rtfeldman$elm_css$Css$Structure$applyPseudoElement(pseudo),
			styleBlock);
	});
var $rtfeldman$elm_css$Css$Structure$CustomSelector = F2(
	function (a, b) {
		return {$: 'CustomSelector', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$Structure$TypeSelectorSequence = F2(
	function (a, b) {
		return {$: 'TypeSelectorSequence', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$Structure$UniversalSelectorSequence = function (a) {
	return {$: 'UniversalSelectorSequence', a: a};
};
var $rtfeldman$elm_css$Css$Structure$appendRepeatable = F2(
	function (selector, sequence) {
		switch (sequence.$) {
			case 'TypeSelectorSequence':
				var typeSelector = sequence.a;
				var list = sequence.b;
				return A2(
					$rtfeldman$elm_css$Css$Structure$TypeSelectorSequence,
					typeSelector,
					_Utils_ap(
						list,
						_List_fromArray(
							[selector])));
			case 'UniversalSelectorSequence':
				var list = sequence.a;
				return $rtfeldman$elm_css$Css$Structure$UniversalSelectorSequence(
					_Utils_ap(
						list,
						_List_fromArray(
							[selector])));
			default:
				var str = sequence.a;
				var list = sequence.b;
				return A2(
					$rtfeldman$elm_css$Css$Structure$CustomSelector,
					str,
					_Utils_ap(
						list,
						_List_fromArray(
							[selector])));
		}
	});
var $rtfeldman$elm_css$Css$Structure$appendRepeatableWithCombinator = F2(
	function (selector, list) {
		if (!list.b) {
			return _List_Nil;
		} else {
			if (!list.b.b) {
				var _v1 = list.a;
				var combinator = _v1.a;
				var sequence = _v1.b;
				return _List_fromArray(
					[
						_Utils_Tuple2(
						combinator,
						A2($rtfeldman$elm_css$Css$Structure$appendRepeatable, selector, sequence))
					]);
			} else {
				var first = list.a;
				var rest = list.b;
				return A2(
					$elm$core$List$cons,
					first,
					A2($rtfeldman$elm_css$Css$Structure$appendRepeatableWithCombinator, selector, rest));
			}
		}
	});
var $rtfeldman$elm_css$Css$Structure$appendRepeatableSelector = F2(
	function (repeatableSimpleSelector, selector) {
		if (!selector.b.b) {
			var sequence = selector.a;
			var pseudoElement = selector.c;
			return A3(
				$rtfeldman$elm_css$Css$Structure$Selector,
				A2($rtfeldman$elm_css$Css$Structure$appendRepeatable, repeatableSimpleSelector, sequence),
				_List_Nil,
				pseudoElement);
		} else {
			var firstSelector = selector.a;
			var tuples = selector.b;
			var pseudoElement = selector.c;
			return A3(
				$rtfeldman$elm_css$Css$Structure$Selector,
				firstSelector,
				A2($rtfeldman$elm_css$Css$Structure$appendRepeatableWithCombinator, repeatableSimpleSelector, tuples),
				pseudoElement);
		}
	});
var $rtfeldman$elm_css$Css$Structure$appendRepeatableToLastSelector = F2(
	function (selector, styleBlock) {
		return A2(
			$rtfeldman$elm_css$Css$Structure$appendToLastSelector,
			$rtfeldman$elm_css$Css$Structure$appendRepeatableSelector(selector),
			styleBlock);
	});
var $rtfeldman$elm_css$Css$Preprocess$Resolve$collectSelectors = function (declarations) {
	collectSelectors:
	while (true) {
		if (!declarations.b) {
			return _List_Nil;
		} else {
			if (declarations.a.$ === 'StyleBlockDeclaration') {
				var _v1 = declarations.a.a;
				var firstSelector = _v1.a;
				var otherSelectors = _v1.b;
				var rest = declarations.b;
				return _Utils_ap(
					A2($elm$core$List$cons, firstSelector, otherSelectors),
					$rtfeldman$elm_css$Css$Preprocess$Resolve$collectSelectors(rest));
			} else {
				var rest = declarations.b;
				var $temp$declarations = rest;
				declarations = $temp$declarations;
				continue collectSelectors;
			}
		}
	}
};
var $rtfeldman$elm_css$Css$Structure$DocumentRule = F5(
	function (a, b, c, d, e) {
		return {$: 'DocumentRule', a: a, b: b, c: c, d: d, e: e};
	});
var $rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock = F2(
	function (update, declarations) {
		_v0$12:
		while (true) {
			if (!declarations.b) {
				return declarations;
			} else {
				if (!declarations.b.b) {
					switch (declarations.a.$) {
						case 'StyleBlockDeclaration':
							var styleBlock = declarations.a.a;
							return A2(
								$elm$core$List$map,
								$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration,
								update(styleBlock));
						case 'MediaRule':
							if (declarations.a.b.b) {
								if (!declarations.a.b.b.b) {
									var _v1 = declarations.a;
									var mediaQueries = _v1.a;
									var _v2 = _v1.b;
									var styleBlock = _v2.a;
									return _List_fromArray(
										[
											A2(
											$rtfeldman$elm_css$Css$Structure$MediaRule,
											mediaQueries,
											update(styleBlock))
										]);
								} else {
									var _v3 = declarations.a;
									var mediaQueries = _v3.a;
									var _v4 = _v3.b;
									var first = _v4.a;
									var rest = _v4.b;
									var _v5 = A2(
										$rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock,
										update,
										_List_fromArray(
											[
												A2($rtfeldman$elm_css$Css$Structure$MediaRule, mediaQueries, rest)
											]));
									if ((_v5.b && (_v5.a.$ === 'MediaRule')) && (!_v5.b.b)) {
										var _v6 = _v5.a;
										var newMediaQueries = _v6.a;
										var newStyleBlocks = _v6.b;
										return _List_fromArray(
											[
												A2(
												$rtfeldman$elm_css$Css$Structure$MediaRule,
												newMediaQueries,
												A2($elm$core$List$cons, first, newStyleBlocks))
											]);
									} else {
										var newDeclarations = _v5;
										return newDeclarations;
									}
								}
							} else {
								break _v0$12;
							}
						case 'SupportsRule':
							var _v7 = declarations.a;
							var str = _v7.a;
							var nestedDeclarations = _v7.b;
							return _List_fromArray(
								[
									A2(
									$rtfeldman$elm_css$Css$Structure$SupportsRule,
									str,
									A2($rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock, update, nestedDeclarations))
								]);
						case 'DocumentRule':
							var _v8 = declarations.a;
							var str1 = _v8.a;
							var str2 = _v8.b;
							var str3 = _v8.c;
							var str4 = _v8.d;
							var styleBlock = _v8.e;
							return A2(
								$elm$core$List$map,
								A4($rtfeldman$elm_css$Css$Structure$DocumentRule, str1, str2, str3, str4),
								update(styleBlock));
						case 'PageRule':
							return declarations;
						case 'FontFace':
							return declarations;
						case 'Keyframes':
							return declarations;
						case 'Viewport':
							return declarations;
						case 'CounterStyle':
							return declarations;
						default:
							return declarations;
					}
				} else {
					break _v0$12;
				}
			}
		}
		var first = declarations.a;
		var rest = declarations.b;
		return A2(
			$elm$core$List$cons,
			first,
			A2($rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock, update, rest));
	});
var $elm$core$List$head = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(x);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$last = function (list) {
	last:
	while (true) {
		if (!list.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			if (!list.b.b) {
				var singleton = list.a;
				return $elm$core$Maybe$Just(singleton);
			} else {
				var rest = list.b;
				var $temp$list = rest;
				list = $temp$list;
				continue last;
			}
		}
	}
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$lastDeclaration = function (declarations) {
	lastDeclaration:
	while (true) {
		if (!declarations.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			if (!declarations.b.b) {
				var x = declarations.a;
				return $elm$core$Maybe$Just(
					_List_fromArray(
						[x]));
			} else {
				var xs = declarations.b;
				var $temp$declarations = xs;
				declarations = $temp$declarations;
				continue lastDeclaration;
			}
		}
	}
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$oneOf = function (maybes) {
	oneOf:
	while (true) {
		if (!maybes.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var maybe = maybes.a;
			var rest = maybes.b;
			if (maybe.$ === 'Nothing') {
				var $temp$maybes = rest;
				maybes = $temp$maybes;
				continue oneOf;
			} else {
				return maybe;
			}
		}
	}
};
var $rtfeldman$elm_css$Css$Structure$FontFeatureValues = function (a) {
	return {$: 'FontFeatureValues', a: a};
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$resolveFontFeatureValues = function (tuples) {
	var expandTuples = function (tuplesToExpand) {
		if (!tuplesToExpand.b) {
			return _List_Nil;
		} else {
			var properties = tuplesToExpand.a;
			var rest = tuplesToExpand.b;
			return A2(
				$elm$core$List$cons,
				properties,
				expandTuples(rest));
		}
	};
	var newTuples = expandTuples(tuples);
	return _List_fromArray(
		[
			$rtfeldman$elm_css$Css$Structure$FontFeatureValues(newTuples)
		]);
};
var $rtfeldman$elm_css$Css$Structure$styleBlockToMediaRule = F2(
	function (mediaQueries, declaration) {
		if (declaration.$ === 'StyleBlockDeclaration') {
			var styleBlock = declaration.a;
			return A2(
				$rtfeldman$elm_css$Css$Structure$MediaRule,
				mediaQueries,
				_List_fromArray(
					[styleBlock]));
		} else {
			return declaration;
		}
	});
var $elm$core$List$tail = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(xs);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$core$List$takeReverse = F3(
	function (n, list, kept) {
		takeReverse:
		while (true) {
			if (n <= 0) {
				return kept;
			} else {
				if (!list.b) {
					return kept;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs,
						$temp$kept = A2($elm$core$List$cons, x, kept);
					n = $temp$n;
					list = $temp$list;
					kept = $temp$kept;
					continue takeReverse;
				}
			}
		}
	});
var $elm$core$List$takeTailRec = F2(
	function (n, list) {
		return $elm$core$List$reverse(
			A3($elm$core$List$takeReverse, n, list, _List_Nil));
	});
var $elm$core$List$takeFast = F3(
	function (ctr, n, list) {
		if (n <= 0) {
			return _List_Nil;
		} else {
			var _v0 = _Utils_Tuple2(n, list);
			_v0$1:
			while (true) {
				_v0$5:
				while (true) {
					if (!_v0.b.b) {
						return list;
					} else {
						if (_v0.b.b.b) {
							switch (_v0.a) {
								case 1:
									break _v0$1;
								case 2:
									var _v2 = _v0.b;
									var x = _v2.a;
									var _v3 = _v2.b;
									var y = _v3.a;
									return _List_fromArray(
										[x, y]);
								case 3:
									if (_v0.b.b.b.b) {
										var _v4 = _v0.b;
										var x = _v4.a;
										var _v5 = _v4.b;
										var y = _v5.a;
										var _v6 = _v5.b;
										var z = _v6.a;
										return _List_fromArray(
											[x, y, z]);
									} else {
										break _v0$5;
									}
								default:
									if (_v0.b.b.b.b && _v0.b.b.b.b.b) {
										var _v7 = _v0.b;
										var x = _v7.a;
										var _v8 = _v7.b;
										var y = _v8.a;
										var _v9 = _v8.b;
										var z = _v9.a;
										var _v10 = _v9.b;
										var w = _v10.a;
										var tl = _v10.b;
										return (ctr > 1000) ? A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A2($elm$core$List$takeTailRec, n - 4, tl))))) : A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));
									} else {
										break _v0$5;
									}
							}
						} else {
							if (_v0.a === 1) {
								break _v0$1;
							} else {
								break _v0$5;
							}
						}
					}
				}
				return list;
			}
			var _v1 = _v0.b;
			var x = _v1.a;
			return _List_fromArray(
				[x]);
		}
	});
var $elm$core$List$take = F2(
	function (n, list) {
		return A3($elm$core$List$takeFast, 0, n, list);
	});
var $rtfeldman$elm_css$Css$Preprocess$Resolve$toDocumentRule = F5(
	function (str1, str2, str3, str4, declaration) {
		if (declaration.$ === 'StyleBlockDeclaration') {
			var structureStyleBlock = declaration.a;
			return A5($rtfeldman$elm_css$Css$Structure$DocumentRule, str1, str2, str3, str4, structureStyleBlock);
		} else {
			return declaration;
		}
	});
var $rtfeldman$elm_css$Css$Preprocess$Resolve$toMediaRule = F2(
	function (mediaQueries, declaration) {
		switch (declaration.$) {
			case 'StyleBlockDeclaration':
				var structureStyleBlock = declaration.a;
				return A2(
					$rtfeldman$elm_css$Css$Structure$MediaRule,
					mediaQueries,
					_List_fromArray(
						[structureStyleBlock]));
			case 'MediaRule':
				var newMediaQueries = declaration.a;
				var structureStyleBlocks = declaration.b;
				return A2(
					$rtfeldman$elm_css$Css$Structure$MediaRule,
					_Utils_ap(mediaQueries, newMediaQueries),
					structureStyleBlocks);
			case 'SupportsRule':
				var str = declaration.a;
				var declarations = declaration.b;
				return A2(
					$rtfeldman$elm_css$Css$Structure$SupportsRule,
					str,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$Css$Preprocess$Resolve$toMediaRule(mediaQueries),
						declarations));
			case 'DocumentRule':
				var str1 = declaration.a;
				var str2 = declaration.b;
				var str3 = declaration.c;
				var str4 = declaration.d;
				var structureStyleBlock = declaration.e;
				return A5($rtfeldman$elm_css$Css$Structure$DocumentRule, str1, str2, str3, str4, structureStyleBlock);
			case 'PageRule':
				return declaration;
			case 'FontFace':
				return declaration;
			case 'Keyframes':
				return declaration;
			case 'Viewport':
				return declaration;
			case 'CounterStyle':
				return declaration;
			default:
				return declaration;
		}
	});
var $rtfeldman$elm_css$Css$Preprocess$unwrapSnippet = function (_v0) {
	var declarations = _v0.a;
	return declarations;
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$applyNestedStylesToLast = F4(
	function (nestedStyles, rest, f, declarations) {
		var withoutParent = function (decls) {
			return A2(
				$elm$core$Maybe$withDefault,
				_List_Nil,
				$elm$core$List$tail(decls));
		};
		var nextResult = A2(
			$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,
			rest,
			A2(
				$elm$core$Maybe$withDefault,
				_List_Nil,
				$rtfeldman$elm_css$Css$Preprocess$Resolve$lastDeclaration(declarations)));
		var newDeclarations = function () {
			var _v14 = _Utils_Tuple2(
				$elm$core$List$head(nextResult),
				$rtfeldman$elm_css$Css$Preprocess$Resolve$last(declarations));
			if ((_v14.a.$ === 'Just') && (_v14.b.$ === 'Just')) {
				var nextResultParent = _v14.a.a;
				var originalParent = _v14.b.a;
				return _Utils_ap(
					A2(
						$elm$core$List$take,
						$elm$core$List$length(declarations) - 1,
						declarations),
					_List_fromArray(
						[
							(!_Utils_eq(originalParent, nextResultParent)) ? nextResultParent : originalParent
						]));
			} else {
				return declarations;
			}
		}();
		var insertStylesToNestedDecl = function (lastDecl) {
			return $elm$core$List$concat(
				A2(
					$rtfeldman$elm_css$Css$Structure$mapLast,
					$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles(nestedStyles),
					A2(
						$elm$core$List$map,
						$elm$core$List$singleton,
						A2($rtfeldman$elm_css$Css$Structure$concatMapLastStyleBlock, f, lastDecl))));
		};
		var initialResult = A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			A2(
				$elm$core$Maybe$map,
				insertStylesToNestedDecl,
				$rtfeldman$elm_css$Css$Preprocess$Resolve$lastDeclaration(declarations)));
		return _Utils_ap(
			newDeclarations,
			_Utils_ap(
				withoutParent(initialResult),
				withoutParent(nextResult)));
	});
var $rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles = F2(
	function (styles, declarations) {
		if (!styles.b) {
			return declarations;
		} else {
			switch (styles.a.$) {
				case 'AppendProperty':
					var property = styles.a.a;
					var rest = styles.b;
					return A2(
						$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,
						rest,
						A2($rtfeldman$elm_css$Css$Structure$appendProperty, property, declarations));
				case 'ExtendSelector':
					var _v4 = styles.a;
					var selector = _v4.a;
					var nestedStyles = _v4.b;
					var rest = styles.b;
					return A4(
						$rtfeldman$elm_css$Css$Preprocess$Resolve$applyNestedStylesToLast,
						nestedStyles,
						rest,
						$rtfeldman$elm_css$Css$Structure$appendRepeatableToLastSelector(selector),
						declarations);
				case 'NestSnippet':
					var _v5 = styles.a;
					var selectorCombinator = _v5.a;
					var snippets = _v5.b;
					var rest = styles.b;
					var chain = F2(
						function (_v9, _v10) {
							var originalSequence = _v9.a;
							var originalTuples = _v9.b;
							var originalPseudoElement = _v9.c;
							var newSequence = _v10.a;
							var newTuples = _v10.b;
							var newPseudoElement = _v10.c;
							return A3(
								$rtfeldman$elm_css$Css$Structure$Selector,
								originalSequence,
								_Utils_ap(
									originalTuples,
									A2(
										$elm$core$List$cons,
										_Utils_Tuple2(selectorCombinator, newSequence),
										newTuples)),
								$rtfeldman$elm_css$Css$Preprocess$Resolve$oneOf(
									_List_fromArray(
										[newPseudoElement, originalPseudoElement])));
						});
					var expandDeclaration = function (declaration) {
						switch (declaration.$) {
							case 'StyleBlockDeclaration':
								var _v7 = declaration.a;
								var firstSelector = _v7.a;
								var otherSelectors = _v7.b;
								var nestedStyles = _v7.c;
								var newSelectors = A2(
									$elm$core$List$concatMap,
									function (originalSelector) {
										return A2(
											$elm$core$List$map,
											chain(originalSelector),
											A2($elm$core$List$cons, firstSelector, otherSelectors));
									},
									$rtfeldman$elm_css$Css$Preprocess$Resolve$collectSelectors(declarations));
								var newDeclarations = function () {
									if (!newSelectors.b) {
										return _List_Nil;
									} else {
										var first = newSelectors.a;
										var remainder = newSelectors.b;
										return _List_fromArray(
											[
												$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration(
												A3($rtfeldman$elm_css$Css$Structure$StyleBlock, first, remainder, _List_Nil))
											]);
									}
								}();
								return A2($rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles, nestedStyles, newDeclarations);
							case 'MediaRule':
								var mediaQueries = declaration.a;
								var styleBlocks = declaration.b;
								return A2($rtfeldman$elm_css$Css$Preprocess$Resolve$resolveMediaRule, mediaQueries, styleBlocks);
							case 'SupportsRule':
								var str = declaration.a;
								var otherSnippets = declaration.b;
								return A2($rtfeldman$elm_css$Css$Preprocess$Resolve$resolveSupportsRule, str, otherSnippets);
							case 'DocumentRule':
								var str1 = declaration.a;
								var str2 = declaration.b;
								var str3 = declaration.c;
								var str4 = declaration.d;
								var styleBlock = declaration.e;
								return A2(
									$elm$core$List$map,
									A4($rtfeldman$elm_css$Css$Preprocess$Resolve$toDocumentRule, str1, str2, str3, str4),
									$rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock(styleBlock));
							case 'PageRule':
								var properties = declaration.a;
								return _List_fromArray(
									[
										$rtfeldman$elm_css$Css$Structure$PageRule(properties)
									]);
							case 'FontFace':
								var properties = declaration.a;
								return _List_fromArray(
									[
										$rtfeldman$elm_css$Css$Structure$FontFace(properties)
									]);
							case 'Viewport':
								var properties = declaration.a;
								return _List_fromArray(
									[
										$rtfeldman$elm_css$Css$Structure$Viewport(properties)
									]);
							case 'CounterStyle':
								var properties = declaration.a;
								return _List_fromArray(
									[
										$rtfeldman$elm_css$Css$Structure$CounterStyle(properties)
									]);
							default:
								var tuples = declaration.a;
								return $rtfeldman$elm_css$Css$Preprocess$Resolve$resolveFontFeatureValues(tuples);
						}
					};
					return $elm$core$List$concat(
						_Utils_ap(
							_List_fromArray(
								[
									A2($rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles, rest, declarations)
								]),
							A2(
								$elm$core$List$map,
								expandDeclaration,
								A2($elm$core$List$concatMap, $rtfeldman$elm_css$Css$Preprocess$unwrapSnippet, snippets))));
				case 'WithPseudoElement':
					var _v11 = styles.a;
					var pseudoElement = _v11.a;
					var nestedStyles = _v11.b;
					var rest = styles.b;
					return A4(
						$rtfeldman$elm_css$Css$Preprocess$Resolve$applyNestedStylesToLast,
						nestedStyles,
						rest,
						$rtfeldman$elm_css$Css$Structure$appendPseudoElementToLastSelector(pseudoElement),
						declarations);
				case 'WithKeyframes':
					var str = styles.a.a;
					var rest = styles.b;
					var name = $rtfeldman$elm_css$Hash$fromString(str);
					var newProperty = $rtfeldman$elm_css$Css$Structure$Property('animation-name:' + name);
					var newDeclarations = A2(
						$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,
						rest,
						A2($rtfeldman$elm_css$Css$Structure$appendProperty, newProperty, declarations));
					return A2(
						$elm$core$List$append,
						newDeclarations,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$Structure$Keyframes(
								{declaration: str, name: name})
							]));
				case 'WithMedia':
					var _v12 = styles.a;
					var mediaQueries = _v12.a;
					var nestedStyles = _v12.b;
					var rest = styles.b;
					var extraDeclarations = function () {
						var _v13 = $rtfeldman$elm_css$Css$Preprocess$Resolve$collectSelectors(declarations);
						if (!_v13.b) {
							return _List_Nil;
						} else {
							var firstSelector = _v13.a;
							var otherSelectors = _v13.b;
							return A2(
								$elm$core$List$map,
								$rtfeldman$elm_css$Css$Structure$styleBlockToMediaRule(mediaQueries),
								A2(
									$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,
									nestedStyles,
									$elm$core$List$singleton(
										$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration(
											A3($rtfeldman$elm_css$Css$Structure$StyleBlock, firstSelector, otherSelectors, _List_Nil)))));
						}
					}();
					return _Utils_ap(
						A2($rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles, rest, declarations),
						extraDeclarations);
				default:
					var otherStyles = styles.a.a;
					var rest = styles.b;
					return A2(
						$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,
						_Utils_ap(otherStyles, rest),
						declarations);
			}
		}
	});
var $rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock = function (_v2) {
	var firstSelector = _v2.a;
	var otherSelectors = _v2.b;
	var styles = _v2.c;
	return A2(
		$rtfeldman$elm_css$Css$Preprocess$Resolve$applyStyles,
		styles,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$Structure$StyleBlockDeclaration(
				A3($rtfeldman$elm_css$Css$Structure$StyleBlock, firstSelector, otherSelectors, _List_Nil))
			]));
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$extract = function (snippetDeclarations) {
	if (!snippetDeclarations.b) {
		return _List_Nil;
	} else {
		var first = snippetDeclarations.a;
		var rest = snippetDeclarations.b;
		return _Utils_ap(
			$rtfeldman$elm_css$Css$Preprocess$Resolve$toDeclarations(first),
			$rtfeldman$elm_css$Css$Preprocess$Resolve$extract(rest));
	}
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$resolveMediaRule = F2(
	function (mediaQueries, styleBlocks) {
		var handleStyleBlock = function (styleBlock) {
			return A2(
				$elm$core$List$map,
				$rtfeldman$elm_css$Css$Preprocess$Resolve$toMediaRule(mediaQueries),
				$rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock(styleBlock));
		};
		return A2($elm$core$List$concatMap, handleStyleBlock, styleBlocks);
	});
var $rtfeldman$elm_css$Css$Preprocess$Resolve$resolveSupportsRule = F2(
	function (str, snippets) {
		var declarations = $rtfeldman$elm_css$Css$Preprocess$Resolve$extract(
			A2($elm$core$List$concatMap, $rtfeldman$elm_css$Css$Preprocess$unwrapSnippet, snippets));
		return _List_fromArray(
			[
				A2($rtfeldman$elm_css$Css$Structure$SupportsRule, str, declarations)
			]);
	});
var $rtfeldman$elm_css$Css$Preprocess$Resolve$toDeclarations = function (snippetDeclaration) {
	switch (snippetDeclaration.$) {
		case 'StyleBlockDeclaration':
			var styleBlock = snippetDeclaration.a;
			return $rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock(styleBlock);
		case 'MediaRule':
			var mediaQueries = snippetDeclaration.a;
			var styleBlocks = snippetDeclaration.b;
			return A2($rtfeldman$elm_css$Css$Preprocess$Resolve$resolveMediaRule, mediaQueries, styleBlocks);
		case 'SupportsRule':
			var str = snippetDeclaration.a;
			var snippets = snippetDeclaration.b;
			return A2($rtfeldman$elm_css$Css$Preprocess$Resolve$resolveSupportsRule, str, snippets);
		case 'DocumentRule':
			var str1 = snippetDeclaration.a;
			var str2 = snippetDeclaration.b;
			var str3 = snippetDeclaration.c;
			var str4 = snippetDeclaration.d;
			var styleBlock = snippetDeclaration.e;
			return A2(
				$elm$core$List$map,
				A4($rtfeldman$elm_css$Css$Preprocess$Resolve$toDocumentRule, str1, str2, str3, str4),
				$rtfeldman$elm_css$Css$Preprocess$Resolve$expandStyleBlock(styleBlock));
		case 'PageRule':
			var properties = snippetDeclaration.a;
			return _List_fromArray(
				[
					$rtfeldman$elm_css$Css$Structure$PageRule(properties)
				]);
		case 'FontFace':
			var properties = snippetDeclaration.a;
			return _List_fromArray(
				[
					$rtfeldman$elm_css$Css$Structure$FontFace(properties)
				]);
		case 'Viewport':
			var properties = snippetDeclaration.a;
			return _List_fromArray(
				[
					$rtfeldman$elm_css$Css$Structure$Viewport(properties)
				]);
		case 'CounterStyle':
			var properties = snippetDeclaration.a;
			return _List_fromArray(
				[
					$rtfeldman$elm_css$Css$Structure$CounterStyle(properties)
				]);
		default:
			var tuples = snippetDeclaration.a;
			return $rtfeldman$elm_css$Css$Preprocess$Resolve$resolveFontFeatureValues(tuples);
	}
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$toStructure = function (_v0) {
	var charset = _v0.charset;
	var imports = _v0.imports;
	var namespaces = _v0.namespaces;
	var snippets = _v0.snippets;
	var declarations = $rtfeldman$elm_css$Css$Preprocess$Resolve$extract(
		A2($elm$core$List$concatMap, $rtfeldman$elm_css$Css$Preprocess$unwrapSnippet, snippets));
	return {charset: charset, declarations: declarations, imports: imports, namespaces: namespaces};
};
var $rtfeldman$elm_css$Css$Preprocess$Resolve$compile = function (sheet) {
	return $rtfeldman$elm_css$Css$Structure$Output$prettyPrint(
		$rtfeldman$elm_css$Css$Structure$compactStylesheet(
			$rtfeldman$elm_css$Css$Preprocess$Resolve$toStructure(sheet)));
};
var $rtfeldman$elm_css$Css$Preprocess$Snippet = function (a) {
	return {$: 'Snippet', a: a};
};
var $rtfeldman$elm_css$Css$Preprocess$StyleBlock = F3(
	function (a, b, c) {
		return {$: 'StyleBlock', a: a, b: b, c: c};
	});
var $rtfeldman$elm_css$Css$Preprocess$StyleBlockDeclaration = function (a) {
	return {$: 'StyleBlockDeclaration', a: a};
};
var $rtfeldman$elm_css$VirtualDom$Styled$makeSnippet = F2(
	function (styles, sequence) {
		var selector = A3($rtfeldman$elm_css$Css$Structure$Selector, sequence, _List_Nil, $elm$core$Maybe$Nothing);
		return $rtfeldman$elm_css$Css$Preprocess$Snippet(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$Preprocess$StyleBlockDeclaration(
					A3($rtfeldman$elm_css$Css$Preprocess$StyleBlock, selector, _List_Nil, styles))
				]));
	});
var $rtfeldman$elm_css$Css$Preprocess$stylesheet = function (snippets) {
	return {charset: $elm$core$Maybe$Nothing, imports: _List_Nil, namespaces: _List_Nil, snippets: snippets};
};
var $rtfeldman$elm_css$Css$Structure$ClassSelector = function (a) {
	return {$: 'ClassSelector', a: a};
};
var $rtfeldman$elm_css$VirtualDom$Styled$templateSelector = $rtfeldman$elm_css$Css$Structure$UniversalSelectorSequence(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$Structure$ClassSelector($rtfeldman$elm_css$VirtualDom$Styled$classnameStandin)
		]));
var $rtfeldman$elm_css$VirtualDom$Styled$getCssTemplate = function (styles) {
	if (!styles.b) {
		return '';
	} else {
		var otherwise = styles;
		return $rtfeldman$elm_css$Css$Preprocess$Resolve$compile(
			$rtfeldman$elm_css$Css$Preprocess$stylesheet(
				_List_fromArray(
					[
						A2($rtfeldman$elm_css$VirtualDom$Styled$makeSnippet, styles, $rtfeldman$elm_css$VirtualDom$Styled$templateSelector)
					])));
	}
};
var $rtfeldman$elm_css$Html$Styled$Internal$css = function (styles) {
	var cssTemplate = $rtfeldman$elm_css$VirtualDom$Styled$getCssTemplate(styles);
	var classProperty = A2($elm$virtual_dom$VirtualDom$attribute, '', '');
	return A3($rtfeldman$elm_css$VirtualDom$Styled$Attribute, classProperty, true, cssTemplate);
};
var $rtfeldman$elm_css$Html$Styled$Attributes$css = $rtfeldman$elm_css$Html$Styled$Internal$css;
var $rtfeldman$elm_css$Css$displayFlex = A2($rtfeldman$elm_css$Css$property, 'display', 'flex');
var $rtfeldman$elm_css$VirtualDom$Styled$Node = F3(
	function (a, b, c) {
		return {$: 'Node', a: a, b: b, c: c};
	});
var $rtfeldman$elm_css$VirtualDom$Styled$node = $rtfeldman$elm_css$VirtualDom$Styled$Node;
var $rtfeldman$elm_css$Html$Styled$node = $rtfeldman$elm_css$VirtualDom$Styled$node;
var $rtfeldman$elm_css$Html$Styled$div = $rtfeldman$elm_css$Html$Styled$node('div');
var $elm$virtual_dom$VirtualDom$mapAttribute = _VirtualDom_mapAttribute;
var $rtfeldman$elm_css$VirtualDom$Styled$mapAttribute = F2(
	function (transform, _v0) {
		var prop = _v0.a;
		var isCssStyle = _v0.b;
		var cssTemplate = _v0.c;
		return A3(
			$rtfeldman$elm_css$VirtualDom$Styled$Attribute,
			A2($elm$virtual_dom$VirtualDom$mapAttribute, transform, prop),
			isCssStyle,
			cssTemplate);
	});
var $rtfeldman$elm_css$Html$Styled$Attributes$map = $rtfeldman$elm_css$VirtualDom$Styled$mapAttribute;
var $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive = $elm$core$List$map(
	$rtfeldman$elm_css$Html$Styled$Attributes$map($elm$core$Basics$never));
var $tesk9$accessible_html_with_css$Accessibility$Styled$div = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$div(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $rtfeldman$elm_css$Css$Preprocess$WithKeyframes = function (a) {
	return {$: 'WithKeyframes', a: a};
};
var $rtfeldman$elm_css$Css$prop1 = F2(
	function (key, arg) {
		return A2($rtfeldman$elm_css$Css$property, key, arg.value);
	});
var $rtfeldman$elm_css$Css$animationName = function (arg) {
	return ((arg.value === 'none') || ((arg.value === 'inherit') || ((arg.value === 'unset') || (arg.value === 'initial')))) ? A2($rtfeldman$elm_css$Css$prop1, 'animation-name', arg) : $rtfeldman$elm_css$Css$Preprocess$WithKeyframes(arg.value);
};
var $rtfeldman$elm_css$Css$Internal$printKeyframeSelector = function (_v0) {
	var percentage = _v0.a;
	var properties = _v0.b;
	var propertiesStr = A3(
		$rtfeldman$elm_css$Css$String$mapJoin,
		function (_v1) {
			var prop = _v1.a;
			return prop + ';';
		},
		'',
		properties);
	var percentageStr = $elm$core$String$fromInt(percentage) + '%';
	return percentageStr + ('{' + (propertiesStr + '}'));
};
var $rtfeldman$elm_css$Css$Internal$compileKeyframes = function (tuples) {
	return A3($rtfeldman$elm_css$Css$String$mapJoin, $rtfeldman$elm_css$Css$Internal$printKeyframeSelector, '', tuples);
};
var $rtfeldman$elm_css$Css$Animations$keyframes = function (tuples) {
	return $elm$core$List$isEmpty(tuples) ? {keyframes: $rtfeldman$elm_css$Css$Structure$Compatible, none: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'none'} : {
		keyframes: $rtfeldman$elm_css$Css$Structure$Compatible,
		none: $rtfeldman$elm_css$Css$Structure$Compatible,
		value: $rtfeldman$elm_css$Css$Internal$compileKeyframes(tuples)
	};
};
var $rtfeldman$elm_css$Css$UnitlessFloat = {$: 'UnitlessFloat'};
var $elm$core$String$fromFloat = _String_fromNumber;
var $rtfeldman$elm_css$Css$num = function (val) {
	return {
		lengthOrNumber: $rtfeldman$elm_css$Css$Structure$Compatible,
		lengthOrNumberOrAutoOrNoneOrContent: $rtfeldman$elm_css$Css$Structure$Compatible,
		number: $rtfeldman$elm_css$Css$Structure$Compatible,
		numberOrInfinite: $rtfeldman$elm_css$Css$Structure$Compatible,
		numericValue: val,
		unitLabel: '',
		units: $rtfeldman$elm_css$Css$UnitlessFloat,
		value: $elm$core$String$fromFloat(val)
	};
};
var $rtfeldman$elm_css$Css$Internal$Property = function (a) {
	return {$: 'Property', a: a};
};
var $rtfeldman$elm_css$Css$Animations$opacity = function (_v0) {
	var value = _v0.value;
	return $rtfeldman$elm_css$Css$Internal$Property('opacity:' + value);
};
var $rtfeldman$elm_css$Css$UnitlessInteger = {$: 'UnitlessInteger'};
var $rtfeldman$elm_css$Css$zero = {length: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrAutoOrCoverOrContain: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNone: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNoneOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNumber: $rtfeldman$elm_css$Css$Structure$Compatible, number: $rtfeldman$elm_css$Css$Structure$Compatible, numericValue: 0, outline: $rtfeldman$elm_css$Css$Structure$Compatible, unitLabel: '', units: $rtfeldman$elm_css$Css$UnitlessInteger, value: '0'};
var $NoRedInk$noredink_ui$Nri$Ui$Loading$V1$fadeInKeyframes = $rtfeldman$elm_css$Css$Animations$keyframes(
	_List_fromArray(
		[
			_Utils_Tuple2(
			0,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$Animations$opacity($rtfeldman$elm_css$Css$zero)
				])),
			_Utils_Tuple2(
			100,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$Animations$opacity(
					$rtfeldman$elm_css$Css$num(1))
				]))
		]));
var $rtfeldman$elm_css$Css$Preprocess$ApplyStyles = function (a) {
	return {$: 'ApplyStyles', a: a};
};
var $rtfeldman$elm_css$Css$Internal$property = F2(
	function (key, value) {
		return $rtfeldman$elm_css$Css$Preprocess$AppendProperty(
			$rtfeldman$elm_css$Css$Structure$Property(key + (':' + value)));
	});
var $rtfeldman$elm_css$Css$Internal$getOverloadedProperty = F3(
	function (functionName, desiredKey, style) {
		getOverloadedProperty:
		while (true) {
			switch (style.$) {
				case 'AppendProperty':
					var str = style.a.a;
					var key = A2(
						$elm$core$Maybe$withDefault,
						'',
						$elm$core$List$head(
							A2($elm$core$String$split, ':', str)));
					return A2($rtfeldman$elm_css$Css$Internal$property, desiredKey, key);
				case 'ExtendSelector':
					var selector = style.a;
					return A2($rtfeldman$elm_css$Css$Internal$property, desiredKey, 'elm-css-error-cannot-apply-' + (functionName + '-with-inapplicable-Style-for-selector'));
				case 'NestSnippet':
					var combinator = style.a;
					return A2($rtfeldman$elm_css$Css$Internal$property, desiredKey, 'elm-css-error-cannot-apply-' + (functionName + '-with-inapplicable-Style-for-combinator'));
				case 'WithPseudoElement':
					var pseudoElement = style.a;
					return A2($rtfeldman$elm_css$Css$Internal$property, desiredKey, 'elm-css-error-cannot-apply-' + (functionName + '-with-inapplicable-Style-for-pseudo-element setter'));
				case 'WithMedia':
					return A2($rtfeldman$elm_css$Css$Internal$property, desiredKey, 'elm-css-error-cannot-apply-' + (functionName + '-with-inapplicable-Style-for-media-query'));
				case 'WithKeyframes':
					return A2($rtfeldman$elm_css$Css$Internal$property, desiredKey, 'elm-css-error-cannot-apply-' + (functionName + '-with-inapplicable-Style-for-keyframes'));
				default:
					if (!style.a.b) {
						return A2($rtfeldman$elm_css$Css$Internal$property, desiredKey, 'elm-css-error-cannot-apply-' + (functionName + '-with-empty-Style'));
					} else {
						if (!style.a.b.b) {
							var _v1 = style.a;
							var only = _v1.a;
							var $temp$functionName = functionName,
								$temp$desiredKey = desiredKey,
								$temp$style = only;
							functionName = $temp$functionName;
							desiredKey = $temp$desiredKey;
							style = $temp$style;
							continue getOverloadedProperty;
						} else {
							var _v2 = style.a;
							var first = _v2.a;
							var rest = _v2.b;
							var $temp$functionName = functionName,
								$temp$desiredKey = desiredKey,
								$temp$style = $rtfeldman$elm_css$Css$Preprocess$ApplyStyles(rest);
							functionName = $temp$functionName;
							desiredKey = $temp$desiredKey;
							style = $temp$style;
							continue getOverloadedProperty;
						}
					}
			}
		}
	});
var $rtfeldman$elm_css$Css$Internal$IncompatibleUnits = {$: 'IncompatibleUnits'};
var $rtfeldman$elm_css$Css$Internal$lengthConverter = F3(
	function (units, unitLabel, numericValue) {
		return {
			absoluteLength: $rtfeldman$elm_css$Css$Structure$Compatible,
			calc: $rtfeldman$elm_css$Css$Structure$Compatible,
			flexBasis: $rtfeldman$elm_css$Css$Structure$Compatible,
			fontSize: $rtfeldman$elm_css$Css$Structure$Compatible,
			length: $rtfeldman$elm_css$Css$Structure$Compatible,
			lengthOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible,
			lengthOrAutoOrCoverOrContain: $rtfeldman$elm_css$Css$Structure$Compatible,
			lengthOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible,
			lengthOrNone: $rtfeldman$elm_css$Css$Structure$Compatible,
			lengthOrNoneOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible,
			lengthOrNumber: $rtfeldman$elm_css$Css$Structure$Compatible,
			lengthOrNumberOrAutoOrNoneOrContent: $rtfeldman$elm_css$Css$Structure$Compatible,
			numericValue: numericValue,
			textIndent: $rtfeldman$elm_css$Css$Structure$Compatible,
			unitLabel: unitLabel,
			units: units,
			value: _Utils_ap(
				$elm$core$String$fromFloat(numericValue),
				unitLabel)
		};
	});
var $rtfeldman$elm_css$Css$Internal$lengthForOverloadedProperty = A3($rtfeldman$elm_css$Css$Internal$lengthConverter, $rtfeldman$elm_css$Css$Internal$IncompatibleUnits, '', 0);
var $rtfeldman$elm_css$Css$alignItems = function (fn) {
	return A3(
		$rtfeldman$elm_css$Css$Internal$getOverloadedProperty,
		'alignItems',
		'align-items',
		fn($rtfeldman$elm_css$Css$Internal$lengthForOverloadedProperty));
};
var $rtfeldman$elm_css$Css$center = $rtfeldman$elm_css$Css$prop1('center');
var $rtfeldman$elm_css$Css$fixed = {backgroundAttachment: $rtfeldman$elm_css$Css$Structure$Compatible, position: $rtfeldman$elm_css$Css$Structure$Compatible, tableLayout: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'fixed'};
var $rtfeldman$elm_css$Css$height = $rtfeldman$elm_css$Css$prop1('height');
var $rtfeldman$elm_css$Css$int = function (val) {
	return {
		fontWeight: $rtfeldman$elm_css$Css$Structure$Compatible,
		intOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible,
		lengthOrNumber: $rtfeldman$elm_css$Css$Structure$Compatible,
		lengthOrNumberOrAutoOrNoneOrContent: $rtfeldman$elm_css$Css$Structure$Compatible,
		number: $rtfeldman$elm_css$Css$Structure$Compatible,
		numberOrInfinite: $rtfeldman$elm_css$Css$Structure$Compatible,
		numericValue: val,
		unitLabel: '',
		units: $rtfeldman$elm_css$Css$UnitlessInteger,
		value: $elm$core$String$fromInt(val)
	};
};
var $rtfeldman$elm_css$Css$justifyContent = function (fn) {
	return A3(
		$rtfeldman$elm_css$Css$Internal$getOverloadedProperty,
		'justifyContent',
		'justify-content',
		fn($rtfeldman$elm_css$Css$Internal$lengthForOverloadedProperty));
};
var $rtfeldman$elm_css$Css$left = $rtfeldman$elm_css$Css$prop1('left');
var $rtfeldman$elm_css$Css$position = $rtfeldman$elm_css$Css$prop1('position');
var $rtfeldman$elm_css$Css$angleConverter = F2(
	function (suffix, angleVal) {
		return {
			angle: $rtfeldman$elm_css$Css$Structure$Compatible,
			angleOrDirection: $rtfeldman$elm_css$Css$Structure$Compatible,
			value: _Utils_ap(
				$elm$core$String$fromFloat(angleVal),
				suffix)
		};
	});
var $rtfeldman$elm_css$Css$deg = $rtfeldman$elm_css$Css$angleConverter('deg');
var $rtfeldman$elm_css$Css$cssFunction = F2(
	function (funcName, args) {
		return funcName + ('(' + (A2($elm$core$String$join, ',', args) + ')'));
	});
var $rtfeldman$elm_css$Css$rotate = function (_v0) {
	var value = _v0.value;
	return {
		transform: $rtfeldman$elm_css$Css$Structure$Compatible,
		value: A2(
			$rtfeldman$elm_css$Css$cssFunction,
			'rotate',
			_List_fromArray(
				[value]))
	};
};
var $rtfeldman$elm_css$Css$Animations$transform = function (values) {
	return $rtfeldman$elm_css$Css$Internal$Property(
		$elm$core$List$isEmpty(values) ? 'transform:none' : ('transform:' + A3(
			$rtfeldman$elm_css$Css$String$mapJoin,
			function ($) {
				return $.value;
			},
			' ',
			values)));
};
var $NoRedInk$noredink_ui$Nri$Ui$Loading$V1$rotateKeyframes = $rtfeldman$elm_css$Css$Animations$keyframes(
	_List_fromArray(
		[
			_Utils_Tuple2(
			0,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$Animations$transform(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$rotate(
							$rtfeldman$elm_css$Css$deg(-360))
						]))
				]))
		]));
var $NoRedInk$noredink_ui$Nri$Ui$Loading$V1$circlingCss = _List_fromArray(
	[
		A2($rtfeldman$elm_css$Css$property, 'animation-duration', '1s'),
		A2($rtfeldman$elm_css$Css$property, 'animation-iteration-count', 'infinite'),
		$rtfeldman$elm_css$Css$animationName($NoRedInk$noredink_ui$Nri$Ui$Loading$V1$rotateKeyframes),
		A2($rtfeldman$elm_css$Css$property, 'animation-timing-function', 'linear')
	]);
var $rtfeldman$elm_css$VirtualDom$Styled$attribute = F2(
	function (key, value) {
		return A3(
			$rtfeldman$elm_css$VirtualDom$Styled$Attribute,
			A2($elm$virtual_dom$VirtualDom$attribute, key, value),
			false,
			'');
	});
var $rtfeldman$elm_css$Svg$Styled$Attributes$d = $rtfeldman$elm_css$VirtualDom$Styled$attribute('d');
var $rtfeldman$elm_css$Svg$Styled$Attributes$fill = $rtfeldman$elm_css$VirtualDom$Styled$attribute('fill');
var $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$Svg = function (a) {
	return {$: 'Svg', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml = function (icon) {
	return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$Svg(
		{attributes: _List_Nil, color: $elm$core$Maybe$Nothing, css: _List_Nil, height: $elm$core$Maybe$Nothing, icon: icon, label: $elm$core$Maybe$Nothing, width: $elm$core$Maybe$Nothing});
};
var $rtfeldman$elm_css$Svg$Styled$Attributes$height = $rtfeldman$elm_css$VirtualDom$Styled$attribute('height');
var $rtfeldman$elm_css$VirtualDom$Styled$NodeNS = F4(
	function (a, b, c, d) {
		return {$: 'NodeNS', a: a, b: b, c: c, d: d};
	});
var $rtfeldman$elm_css$VirtualDom$Styled$nodeNS = $rtfeldman$elm_css$VirtualDom$Styled$NodeNS;
var $rtfeldman$elm_css$Svg$Styled$node = $rtfeldman$elm_css$VirtualDom$Styled$nodeNS('http://www.w3.org/2000/svg');
var $rtfeldman$elm_css$Svg$Styled$path = $rtfeldman$elm_css$Svg$Styled$node('path');
var $rtfeldman$elm_css$Svg$Styled$svg = $rtfeldman$elm_css$Svg$Styled$node('svg');
var $rtfeldman$elm_css$Svg$Styled$Attributes$viewBox = $rtfeldman$elm_css$VirtualDom$Styled$attribute('viewBox');
var $rtfeldman$elm_css$Svg$Styled$Attributes$width = $rtfeldman$elm_css$VirtualDom$Styled$attribute('width');
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$edit = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 30 30')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M27.3,7.9l-5.2-5.2l2.3-2.3c0.5-0.5,1.2-0.5,1.7,0L29.7,4c0.5,0.5,0.5,1.2,0,1.7L27.3,7.9z M25.9,9.4L8.6,26.6l-5.2-5.2L20.6,4.1L25.9,9.4z M0,30l1.9-7L7,28.1L0,30z')
					]),
				_List_Nil),
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$fill('none'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M-753.8-401V715h1024V-401H-753.8z')
					]),
				_List_Nil),
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$fill('none'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M-775.9-385.9v1116h1024v-1116L-775.9-385.9L-775.9-385.9z')
					]),
				_List_Nil)
			])));
var $rtfeldman$elm_css$Css$withPrecedingHash = function (str) {
	return A2($elm$core$String$startsWith, '#', str) ? str : A2(
		$elm$core$String$cons,
		_Utils_chr('#'),
		str);
};
var $rtfeldman$elm_css$Css$erroneousHex = function (str) {
	return {
		alpha: 1,
		blue: 0,
		color: $rtfeldman$elm_css$Css$Structure$Compatible,
		green: 0,
		red: 0,
		value: $rtfeldman$elm_css$Css$withPrecedingHash(str)
	};
};
var $elm$core$String$foldr = _String_foldr;
var $elm$core$String$toList = function (string) {
	return A3($elm$core$String$foldr, $elm$core$List$cons, _List_Nil, string);
};
var $elm$core$Basics$pow = _Basics_pow;
var $rtfeldman$elm_hex$Hex$fromStringHelp = F3(
	function (position, chars, accumulated) {
		fromStringHelp:
		while (true) {
			if (!chars.b) {
				return $elm$core$Result$Ok(accumulated);
			} else {
				var _char = chars.a;
				var rest = chars.b;
				switch (_char.valueOf()) {
					case '0':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated;
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '1':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + A2($elm$core$Basics$pow, 16, position);
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '2':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (2 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '3':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (3 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '4':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (4 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '5':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (5 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '6':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (6 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '7':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (7 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '8':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (8 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '9':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (9 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'a':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (10 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'b':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (11 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'c':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (12 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'd':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (13 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'e':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (14 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'f':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (15 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					default:
						var nonHex = _char;
						return $elm$core$Result$Err(
							$elm$core$String$fromChar(nonHex) + ' is not a valid hexadecimal character.');
				}
			}
		}
	});
var $elm$core$Result$map = F2(
	function (func, ra) {
		if (ra.$ === 'Ok') {
			var a = ra.a;
			return $elm$core$Result$Ok(
				func(a));
		} else {
			var e = ra.a;
			return $elm$core$Result$Err(e);
		}
	});
var $rtfeldman$elm_hex$Hex$fromString = function (str) {
	if ($elm$core$String$isEmpty(str)) {
		return $elm$core$Result$Err('Empty strings are not valid hexadecimal strings.');
	} else {
		var result = function () {
			if (A2($elm$core$String$startsWith, '-', str)) {
				var list = A2(
					$elm$core$Maybe$withDefault,
					_List_Nil,
					$elm$core$List$tail(
						$elm$core$String$toList(str)));
				return A2(
					$elm$core$Result$map,
					$elm$core$Basics$negate,
					A3(
						$rtfeldman$elm_hex$Hex$fromStringHelp,
						$elm$core$List$length(list) - 1,
						list,
						0));
			} else {
				return A3(
					$rtfeldman$elm_hex$Hex$fromStringHelp,
					$elm$core$String$length(str) - 1,
					$elm$core$String$toList(str),
					0);
			}
		}();
		var formatError = function (err) {
			return A2(
				$elm$core$String$join,
				' ',
				_List_fromArray(
					['\"' + (str + '\"'), 'is not a valid hexadecimal string because', err]));
		};
		return A2($elm$core$Result$mapError, formatError, result);
	}
};
var $elm$core$String$toLower = _String_toLower;
var $rtfeldman$elm_css$Css$validHex = F5(
	function (str, _v0, _v1, _v2, _v3) {
		var r1 = _v0.a;
		var r2 = _v0.b;
		var g1 = _v1.a;
		var g2 = _v1.b;
		var b1 = _v2.a;
		var b2 = _v2.b;
		var a1 = _v3.a;
		var a2 = _v3.b;
		var toResult = A2(
			$elm$core$Basics$composeR,
			$elm$core$String$fromList,
			A2($elm$core$Basics$composeR, $elm$core$String$toLower, $rtfeldman$elm_hex$Hex$fromString));
		var results = _Utils_Tuple2(
			_Utils_Tuple2(
				toResult(
					_List_fromArray(
						[r1, r2])),
				toResult(
					_List_fromArray(
						[g1, g2]))),
			_Utils_Tuple2(
				toResult(
					_List_fromArray(
						[b1, b2])),
				toResult(
					_List_fromArray(
						[a1, a2]))));
		if ((((results.a.a.$ === 'Ok') && (results.a.b.$ === 'Ok')) && (results.b.a.$ === 'Ok')) && (results.b.b.$ === 'Ok')) {
			var _v5 = results.a;
			var red = _v5.a.a;
			var green = _v5.b.a;
			var _v6 = results.b;
			var blue = _v6.a.a;
			var alpha = _v6.b.a;
			return {
				alpha: alpha / 255,
				blue: blue,
				color: $rtfeldman$elm_css$Css$Structure$Compatible,
				green: green,
				red: red,
				value: $rtfeldman$elm_css$Css$withPrecedingHash(str)
			};
		} else {
			return $rtfeldman$elm_css$Css$erroneousHex(str);
		}
	});
var $rtfeldman$elm_css$Css$hex = function (str) {
	var withoutHash = A2($elm$core$String$startsWith, '#', str) ? A2($elm$core$String$dropLeft, 1, str) : str;
	var _v0 = $elm$core$String$toList(withoutHash);
	_v0$4:
	while (true) {
		if ((_v0.b && _v0.b.b) && _v0.b.b.b) {
			if (!_v0.b.b.b.b) {
				var r = _v0.a;
				var _v1 = _v0.b;
				var g = _v1.a;
				var _v2 = _v1.b;
				var b = _v2.a;
				return A5(
					$rtfeldman$elm_css$Css$validHex,
					str,
					_Utils_Tuple2(r, r),
					_Utils_Tuple2(g, g),
					_Utils_Tuple2(b, b),
					_Utils_Tuple2(
						_Utils_chr('f'),
						_Utils_chr('f')));
			} else {
				if (!_v0.b.b.b.b.b) {
					var r = _v0.a;
					var _v3 = _v0.b;
					var g = _v3.a;
					var _v4 = _v3.b;
					var b = _v4.a;
					var _v5 = _v4.b;
					var a = _v5.a;
					return A5(
						$rtfeldman$elm_css$Css$validHex,
						str,
						_Utils_Tuple2(r, r),
						_Utils_Tuple2(g, g),
						_Utils_Tuple2(b, b),
						_Utils_Tuple2(a, a));
				} else {
					if (_v0.b.b.b.b.b.b) {
						if (!_v0.b.b.b.b.b.b.b) {
							var r1 = _v0.a;
							var _v6 = _v0.b;
							var r2 = _v6.a;
							var _v7 = _v6.b;
							var g1 = _v7.a;
							var _v8 = _v7.b;
							var g2 = _v8.a;
							var _v9 = _v8.b;
							var b1 = _v9.a;
							var _v10 = _v9.b;
							var b2 = _v10.a;
							return A5(
								$rtfeldman$elm_css$Css$validHex,
								str,
								_Utils_Tuple2(r1, r2),
								_Utils_Tuple2(g1, g2),
								_Utils_Tuple2(b1, b2),
								_Utils_Tuple2(
									_Utils_chr('f'),
									_Utils_chr('f')));
						} else {
							if (_v0.b.b.b.b.b.b.b.b && (!_v0.b.b.b.b.b.b.b.b.b)) {
								var r1 = _v0.a;
								var _v11 = _v0.b;
								var r2 = _v11.a;
								var _v12 = _v11.b;
								var g1 = _v12.a;
								var _v13 = _v12.b;
								var g2 = _v13.a;
								var _v14 = _v13.b;
								var b1 = _v14.a;
								var _v15 = _v14.b;
								var b2 = _v15.a;
								var _v16 = _v15.b;
								var a1 = _v16.a;
								var _v17 = _v16.b;
								var a2 = _v17.a;
								return A5(
									$rtfeldman$elm_css$Css$validHex,
									str,
									_Utils_Tuple2(r1, r2),
									_Utils_Tuple2(g1, g2),
									_Utils_Tuple2(b1, b2),
									_Utils_Tuple2(a1, a2));
							} else {
								break _v0$4;
							}
						}
					} else {
						break _v0$4;
					}
				}
			}
		} else {
			break _v0$4;
		}
	}
	return $rtfeldman$elm_css$Css$erroneousHex(str);
};
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy = $rtfeldman$elm_css$Css$hex('#004e95');
var $rtfeldman$elm_css$Css$PxUnits = {$: 'PxUnits'};
var $rtfeldman$elm_css$Css$px = A2($rtfeldman$elm_css$Css$Internal$lengthConverter, $rtfeldman$elm_css$Css$PxUnits, 'px');
var $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withColor = F2(
	function (color, _v0) {
		var record = _v0.a;
		return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$Svg(
			_Utils_update(
				record,
				{
					color: $elm$core$Maybe$Just(color)
				}));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss = F2(
	function (css, _v0) {
		var record = _v0.a;
		return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$Svg(
			_Utils_update(
				record,
				{css: css}));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight = F2(
	function (height, _v0) {
		var record = _v0.a;
		return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$Svg(
			_Utils_update(
				record,
				{
					height: $elm$core$Maybe$Just(height)
				}));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withLabel = F2(
	function (label, _v0) {
		var record = _v0.a;
		return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$Svg(
			_Utils_update(
				record,
				{
					label: $elm$core$Maybe$Just(label)
				}));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth = F2(
	function (width, _v0) {
		var record = _v0.a;
		return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$Svg(
			_Utils_update(
				record,
				{
					width: $elm$core$Maybe$Just(width)
				}));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Loading$V1$spinningPencil = A2(
	$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
	$NoRedInk$noredink_ui$Nri$Ui$Loading$V1$circlingCss,
	A2(
		$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight,
		$rtfeldman$elm_css$Css$px(100),
		A2(
			$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth,
			$rtfeldman$elm_css$Css$px(100),
			A2(
				$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withColor,
				$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy,
				A2($NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withLabel, 'Loading...', $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$edit)))));
var $rtfeldman$elm_css$Css$color = function (c) {
	return A2($rtfeldman$elm_css$Css$property, 'color', c.value);
};
var $rtfeldman$elm_css$Css$display = $rtfeldman$elm_css$Css$prop1('display');
var $rtfeldman$elm_css$Html$Styled$Attributes$attribute = $rtfeldman$elm_css$VirtualDom$Styled$attribute;
var $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$aria = A2(
	$elm$core$Basics$composeL,
	$rtfeldman$elm_css$Html$Styled$Attributes$attribute,
	$elm$core$Basics$append('aria-'));
var $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$toBoolString = function (bool) {
	return bool ? 'true' : 'false';
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Widget$hidden = A2(
	$elm$core$Basics$composeL,
	$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$aria('hidden'),
	$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$toBoolString);
var $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Img = {$: 'Img'};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$roleToString = function (role_) {
	switch (role_.$) {
		case 'Alert':
			return 'alert';
		case 'Alertdialog':
			return 'alertdialog';
		case 'Application':
			return 'application';
		case 'Article':
			return 'article';
		case 'Banner':
			return 'banner';
		case 'Button':
			return 'button';
		case 'Checkbox':
			return 'checkbox';
		case 'Columnheader':
			return 'columnheader';
		case 'Combobox':
			return 'combobox';
		case 'Complementary':
			return 'complementary';
		case 'Contentinfo':
			return 'contentinfo';
		case 'Definition':
			return 'definition';
		case 'Dialog':
			return 'dialog';
		case 'Directory':
			return 'directory';
		case 'Document':
			return 'document';
		case 'Form':
			return 'form';
		case 'Grid':
			return 'grid';
		case 'Gridcell':
			return 'gridcell';
		case 'Group':
			return 'group';
		case 'Heading':
			return 'heading';
		case 'Img':
			return 'img';
		case 'Link':
			return 'link';
		case 'List':
			return 'list';
		case 'Listbox':
			return 'listbox';
		case 'Listitem':
			return 'listitem';
		case 'Log':
			return 'log';
		case 'Main':
			return 'main';
		case 'Marquee':
			return 'marquee';
		case 'Math':
			return 'math';
		case 'Menu':
			return 'menu';
		case 'Menubar':
			return 'menubar';
		case 'Menuitem':
			return 'menuitem';
		case 'Menuitemcheckbox':
			return 'menuitemcheckbox';
		case 'Menuitemradio':
			return 'menuitemradio';
		case 'Navigation':
			return 'navigation';
		case 'Note':
			return 'note';
		case 'Option':
			return 'option';
		case 'Presentation':
			return 'presentation';
		case 'Progressbar':
			return 'progressbar';
		case 'Radio':
			return 'radio';
		case 'Radiogroup':
			return 'radiogroup';
		case 'Region':
			return 'region';
		case 'Row':
			return 'row';
		case 'Rowgroup':
			return 'rowgroup';
		case 'Rowheader':
			return 'rowheader';
		case 'Scrollbar':
			return 'scrollbar';
		case 'Search':
			return 'search';
		case 'Separator':
			return 'separator';
		case 'Slider':
			return 'slider';
		case 'Spinbutton':
			return 'spinbutton';
		case 'Status':
			return 'status';
		case 'Tab':
			return 'tab';
		case 'Tablist':
			return 'tablist';
		case 'Tabpanel':
			return 'tabpanel';
		case 'Textbox':
			return 'textbox';
		case 'Timer':
			return 'timer';
		case 'Toolbar':
			return 'toolbar';
		case 'Tooltip':
			return 'tooltip';
		case 'Tree':
			return 'tree';
		case 'Treegrid':
			return 'treegrid';
		default:
			return 'treeitem';
	}
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$role = function (role_) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Attributes$attribute,
		'role',
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$roleToString(role_));
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Role$img = $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$role($tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Img);
var $rtfeldman$elm_css$Css$inlineBlock = {display: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'inline-block'};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Widget$label = $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$aria('label');
var $rtfeldman$elm_css$VirtualDom$Styled$KeyedNode = F3(
	function (a, b, c) {
		return {$: 'KeyedNode', a: a, b: b, c: c};
	});
var $rtfeldman$elm_css$VirtualDom$Styled$KeyedNodeNS = F4(
	function (a, b, c, d) {
		return {$: 'KeyedNodeNS', a: a, b: b, c: c, d: d};
	});
var $rtfeldman$elm_css$VirtualDom$Styled$Unstyled = function (a) {
	return {$: 'Unstyled', a: a};
};
var $elm$virtual_dom$VirtualDom$map = _VirtualDom_map;
var $rtfeldman$elm_css$VirtualDom$Styled$map = F2(
	function (transform, vdomNode) {
		switch (vdomNode.$) {
			case 'Node':
				var elemType = vdomNode.a;
				var properties = vdomNode.b;
				var children = vdomNode.c;
				return A3(
					$rtfeldman$elm_css$VirtualDom$Styled$Node,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$mapAttribute(transform),
						properties),
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$map(transform),
						children));
			case 'NodeNS':
				var ns = vdomNode.a;
				var elemType = vdomNode.b;
				var properties = vdomNode.c;
				var children = vdomNode.d;
				return A4(
					$rtfeldman$elm_css$VirtualDom$Styled$NodeNS,
					ns,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$mapAttribute(transform),
						properties),
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$map(transform),
						children));
			case 'KeyedNode':
				var elemType = vdomNode.a;
				var properties = vdomNode.b;
				var children = vdomNode.c;
				return A3(
					$rtfeldman$elm_css$VirtualDom$Styled$KeyedNode,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$mapAttribute(transform),
						properties),
					A2(
						$elm$core$List$map,
						function (_v1) {
							var key = _v1.a;
							var child = _v1.b;
							return _Utils_Tuple2(
								key,
								A2($rtfeldman$elm_css$VirtualDom$Styled$map, transform, child));
						},
						children));
			case 'KeyedNodeNS':
				var ns = vdomNode.a;
				var elemType = vdomNode.b;
				var properties = vdomNode.c;
				var children = vdomNode.d;
				return A4(
					$rtfeldman$elm_css$VirtualDom$Styled$KeyedNodeNS,
					ns,
					elemType,
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$VirtualDom$Styled$mapAttribute(transform),
						properties),
					A2(
						$elm$core$List$map,
						function (_v2) {
							var key = _v2.a;
							var child = _v2.b;
							return _Utils_Tuple2(
								key,
								A2($rtfeldman$elm_css$VirtualDom$Styled$map, transform, child));
						},
						children));
			default:
				var vdom = vdomNode.a;
				return $rtfeldman$elm_css$VirtualDom$Styled$Unstyled(
					A2($elm$virtual_dom$VirtualDom$map, transform, vdom));
		}
	});
var $rtfeldman$elm_css$Html$Styled$map = $rtfeldman$elm_css$VirtualDom$Styled$map;
var $rtfeldman$elm_css$Css$width = $rtfeldman$elm_css$Css$prop1('width');
var $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml = function (_v0) {
	var record = _v0.a;
	var css = _Utils_ap(
		A2(
			$elm$core$List$filterMap,
			$elm$core$Basics$identity,
			_List_fromArray(
				[
					A2($elm$core$Maybe$map, $rtfeldman$elm_css$Css$color, record.color),
					A2($elm$core$Maybe$map, $rtfeldman$elm_css$Css$width, record.width),
					A2($elm$core$Maybe$map, $rtfeldman$elm_css$Css$height, record.height)
				])),
		record.css);
	var attributes = _Utils_ap(
		A2(
			$elm$core$List$filterMap,
			$elm$core$Basics$identity,
			_List_fromArray(
				[
					$elm$core$List$isEmpty(css) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
						A2(
							$elm$core$List$cons,
							$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineBlock),
							css))),
					$elm$core$Maybe$Just(
					A2(
						$elm$core$Maybe$withDefault,
						$tesk9$accessible_html_with_css$Accessibility$Styled$Widget$hidden(true),
						A2($elm$core$Maybe$map, $tesk9$accessible_html_with_css$Accessibility$Styled$Widget$label, record.label))),
					$elm$core$Maybe$Just($tesk9$accessible_html_with_css$Accessibility$Styled$Role$img)
				])),
		record.attributes);
	return A2(
		$rtfeldman$elm_css$Html$Styled$map,
		$elm$core$Basics$never,
		A2(
			$rtfeldman$elm_css$Html$Styled$div,
			attributes,
			_List_fromArray(
				[record.icon])));
};
var $rtfeldman$elm_css$Css$top = $rtfeldman$elm_css$Css$prop1('top');
var $rtfeldman$elm_css$Css$VhUnits = {$: 'VhUnits'};
var $rtfeldman$elm_css$Css$vh = A2($rtfeldman$elm_css$Css$Internal$lengthConverter, $rtfeldman$elm_css$Css$VhUnits, 'vh');
var $rtfeldman$elm_css$Css$VwUnits = {$: 'VwUnits'};
var $rtfeldman$elm_css$Css$vw = A2($rtfeldman$elm_css$Css$Internal$lengthConverter, $rtfeldman$elm_css$Css$VwUnits, 'vw');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white = $rtfeldman$elm_css$Css$hex('#ffffff');
var $rtfeldman$elm_css$Css$zIndex = $rtfeldman$elm_css$Css$prop1('z-index');
var $NoRedInk$noredink_ui$Nri$Ui$Loading$V1$loading_ = function (withCss) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$css(
				_Utils_ap(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white),
							$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$fixed),
							$rtfeldman$elm_css$Css$displayFlex,
							$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
							$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center),
							$rtfeldman$elm_css$Css$width(
							$rtfeldman$elm_css$Css$vw(100)),
							$rtfeldman$elm_css$Css$height(
							$rtfeldman$elm_css$Css$vh(100)),
							$rtfeldman$elm_css$Css$top($rtfeldman$elm_css$Css$zero),
							$rtfeldman$elm_css$Css$left($rtfeldman$elm_css$Css$zero),
							$rtfeldman$elm_css$Css$zIndex(
							$rtfeldman$elm_css$Css$int(10000))
						]),
					withCss))
			]),
		_List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml($NoRedInk$noredink_ui$Nri$Ui$Loading$V1$spinningPencil)
			]));
};
var $rtfeldman$elm_css$Css$opacity = $rtfeldman$elm_css$Css$prop1('opacity');
var $NoRedInk$noredink_ui$Nri$Ui$Loading$V1$fadeInPage = $NoRedInk$noredink_ui$Nri$Ui$Loading$V1$loading_(
	_List_fromArray(
		[
			A2($rtfeldman$elm_css$Css$property, 'animation-delay', '1s'),
			A2($rtfeldman$elm_css$Css$property, 'animation-duration', '1.5s'),
			A2($rtfeldman$elm_css$Css$property, 'animation-fill-mode', 'forwards'),
			$rtfeldman$elm_css$Css$animationName($NoRedInk$noredink_ui$Nri$Ui$Loading$V1$fadeInKeyframes),
			A2($rtfeldman$elm_css$Css$property, 'animation-timing-function', 'linear'),
			$rtfeldman$elm_css$Css$opacity($rtfeldman$elm_css$Css$zero)
		]));
var $rtfeldman$elm_css$Css$flexDirection = $rtfeldman$elm_css$Css$prop1('flex-direction');
var $rtfeldman$elm_css$Css$flexGrow = $rtfeldman$elm_css$Css$prop1('flex-grow');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray96 = $rtfeldman$elm_css$Css$hex('#f5f5f5');
var $rtfeldman$elm_css$VirtualDom$Styled$text = function (str) {
	return $rtfeldman$elm_css$VirtualDom$Styled$Unstyled(
		$elm$virtual_dom$VirtualDom$text(str));
};
var $rtfeldman$elm_css$Html$Styled$text = $rtfeldman$elm_css$VirtualDom$Styled$text;
var $tesk9$accessible_html_with_css$Accessibility$Styled$text = $rtfeldman$elm_css$Html$Styled$text;
var $author$project$Main$homePageView = $tesk9$accessible_html_with_css$Accessibility$Styled$text('Home');
var $rtfeldman$elm_css$Html$Styled$main_ = $rtfeldman$elm_css$Html$Styled$node('main');
var $tesk9$accessible_html_with_css$Accessibility$Styled$main_ = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$main_(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$map = $rtfeldman$elm_css$Html$Styled$map;
var $rtfeldman$elm_css$Css$prop4 = F5(
	function (key, argA, argB, argC, argD) {
		return A2($rtfeldman$elm_css$Css$property, key, argA.value + (' ' + (argB.value + (' ' + (argC.value + (' ' + argD.value))))));
	});
var $rtfeldman$elm_css$Css$margin4 = $rtfeldman$elm_css$Css$prop4('margin');
var $author$project$Main$notFoundPageView = $tesk9$accessible_html_with_css$Accessibility$Styled$text('Not found');
var $rtfeldman$elm_css$Css$padding4 = $rtfeldman$elm_css$Css$prop4('padding');
var $author$project$LoginPage$Email = function (a) {
	return {$: 'Email', a: a};
};
var $author$project$LoginPage$Password = function (a) {
	return {$: 'Password', a: a};
};
var $author$project$LoginPage$SetShowPassword = function (a) {
	return {$: 'SetShowPassword', a: a};
};
var $author$project$LoginPage$SubmittedForm = {$: 'SubmittedForm'};
var $rtfeldman$elm_css$Css$auto = {alignItemsOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible, cursor: $rtfeldman$elm_css$Css$Structure$Compatible, flexBasis: $rtfeldman$elm_css$Css$Structure$Compatible, intOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible, justifyContentOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrAutoOrCoverOrContain: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNumberOrAutoOrNoneOrContent: $rtfeldman$elm_css$Css$Structure$Compatible, overflow: $rtfeldman$elm_css$Css$Structure$Compatible, pointerEvents: $rtfeldman$elm_css$Css$Structure$Compatible, tableLayout: $rtfeldman$elm_css$Css$Structure$Compatible, textRendering: $rtfeldman$elm_css$Css$Structure$Compatible, touchAction: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'auto'};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$ButtonOrLink = function (a) {
	return {$: 'ButtonOrLink', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$Enabled = {$: 'Enabled'};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$Medium = {$: 'Medium'};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$WidthUnbounded = {$: 'WidthUnbounded'};
var $NoRedInk$noredink_ui$ClickableAttributes$Default = {$: 'Default'};
var $NoRedInk$noredink_ui$ClickableAttributes$init = {linkType: $NoRedInk$noredink_ui$ClickableAttributes$Default, onClick: $elm$core$Maybe$Nothing, url: $elm$core$Maybe$Nothing, urlString: $elm$core$Maybe$Nothing};
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure = $rtfeldman$elm_css$Css$hex('#0A64FF');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azureDark = $rtfeldman$elm_css$Css$hex('#004cc9');
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$primaryColors = {background: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure, border: $elm$core$Maybe$Nothing, hover: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azureDark, shadow: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azureDark, text: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$build = $NoRedInk$noredink_ui$Nri$Ui$Button$V10$ButtonOrLink(
	{clickableAttributes: $NoRedInk$noredink_ui$ClickableAttributes$init, customAttributes: _List_Nil, customStyles: _List_Nil, icon: $elm$core$Maybe$Nothing, label: '', size: $NoRedInk$noredink_ui$Nri$Ui$Button$V10$Medium, state: $NoRedInk$noredink_ui$Nri$Ui$Button$V10$Enabled, style: $NoRedInk$noredink_ui$Nri$Ui$Button$V10$primaryColors, width: $NoRedInk$noredink_ui$Nri$Ui$Button$V10$WidthUnbounded});
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$Attribute = function (a) {
	return {$: 'Attribute', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$set = function (_with) {
	return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$Attribute(
		function (_v0) {
			var config = _v0.a;
			return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$ButtonOrLink(
				_with(config));
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$label = function (label_) {
	return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$set(
		function (attributes) {
			return _Utils_update(
				attributes,
				{label: label_});
		});
};
var $rtfeldman$elm_css$Html$Styled$button = $rtfeldman$elm_css$Html$Styled$node('button');
var $tesk9$accessible_html_with_css$Accessibility$Styled$button = $rtfeldman$elm_css$Html$Styled$button;
var $rtfeldman$elm_css$Css$batch = $rtfeldman$elm_css$Css$Preprocess$ApplyStyles;
var $rtfeldman$elm_css$Css$backgroundImage = $rtfeldman$elm_css$Css$prop1('background-image');
var $rtfeldman$elm_css$Css$stringsToValue = function (list) {
	return $elm$core$List$isEmpty(list) ? {value: 'none'} : {
		value: A2($elm$core$String$join, ', ', list)
	};
};
var $rtfeldman$elm_css$Css$fontFamilies = A2(
	$elm$core$Basics$composeL,
	$rtfeldman$elm_css$Css$prop1('font-family'),
	$rtfeldman$elm_css$Css$stringsToValue);
var $rtfeldman$elm_css$Css$qt = function (str) {
	return '\"' + (str + '\"');
};
var $NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont = $rtfeldman$elm_css$Css$fontFamilies(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$qt('Muli'),
			'Helvetica',
			'Arial',
			'sans-serif'
		]));
var $rtfeldman$elm_css$Css$border = $rtfeldman$elm_css$Css$prop1('border');
var $rtfeldman$elm_css$Css$boxShadow = $rtfeldman$elm_css$Css$prop1('box-shadow');
var $rtfeldman$elm_css$Css$cursor = $rtfeldman$elm_css$Css$prop1('cursor');
var $rtfeldman$elm_css$Css$Preprocess$ExtendSelector = F2(
	function (a, b) {
		return {$: 'ExtendSelector', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$Structure$PseudoClassSelector = function (a) {
	return {$: 'PseudoClassSelector', a: a};
};
var $rtfeldman$elm_css$Css$pseudoClass = function (_class) {
	return $rtfeldman$elm_css$Css$Preprocess$ExtendSelector(
		$rtfeldman$elm_css$Css$Structure$PseudoClassSelector(_class));
};
var $rtfeldman$elm_css$Css$disabled = $rtfeldman$elm_css$Css$pseudoClass('disabled');
var $rtfeldman$elm_css$Css$ellipsis = {textOverflow: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'ellipsis'};
var $rtfeldman$elm_css$Css$hidden = {borderStyle: $rtfeldman$elm_css$Css$Structure$Compatible, overflow: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'hidden', visibility: $rtfeldman$elm_css$Css$Structure$Compatible};
var $rtfeldman$elm_css$Css$hover = $rtfeldman$elm_css$Css$pseudoClass('hover');
var $rtfeldman$elm_css$Css$inlineFlex = {display: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'inline-flex'};
var $rtfeldman$elm_css$Css$margin = $rtfeldman$elm_css$Css$prop1('margin');
var $rtfeldman$elm_css$Css$none = {backgroundImage: $rtfeldman$elm_css$Css$Structure$Compatible, blockAxisOverflow: $rtfeldman$elm_css$Css$Structure$Compatible, borderStyle: $rtfeldman$elm_css$Css$Structure$Compatible, cursor: $rtfeldman$elm_css$Css$Structure$Compatible, display: $rtfeldman$elm_css$Css$Structure$Compatible, hoverCapability: $rtfeldman$elm_css$Css$Structure$Compatible, inlineAxisOverflow: $rtfeldman$elm_css$Css$Structure$Compatible, keyframes: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNone: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNoneOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNumberOrAutoOrNoneOrContent: $rtfeldman$elm_css$Css$Structure$Compatible, listStyleType: $rtfeldman$elm_css$Css$Structure$Compatible, listStyleTypeOrPositionOrImage: $rtfeldman$elm_css$Css$Structure$Compatible, none: $rtfeldman$elm_css$Css$Structure$Compatible, outline: $rtfeldman$elm_css$Css$Structure$Compatible, pointerDevice: $rtfeldman$elm_css$Css$Structure$Compatible, pointerEvents: $rtfeldman$elm_css$Css$Structure$Compatible, resize: $rtfeldman$elm_css$Css$Structure$Compatible, scriptingSupport: $rtfeldman$elm_css$Css$Structure$Compatible, textDecorationLine: $rtfeldman$elm_css$Css$Structure$Compatible, textTransform: $rtfeldman$elm_css$Css$Structure$Compatible, touchAction: $rtfeldman$elm_css$Css$Structure$Compatible, transform: $rtfeldman$elm_css$Css$Structure$Compatible, updateFrequency: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'none'};
var $rtfeldman$elm_css$Css$notAllowed = {cursor: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'not-allowed'};
var $rtfeldman$elm_css$Css$overflow = $rtfeldman$elm_css$Css$prop1('overflow');
var $rtfeldman$elm_css$Css$pointer = {cursor: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'pointer'};
var $rtfeldman$elm_css$Css$textDecoration = $rtfeldman$elm_css$Css$prop1('text-decoration');
var $rtfeldman$elm_css$Css$textOverflow = $rtfeldman$elm_css$Css$prop1('text-overflow');
var $rtfeldman$elm_css$Css$textShadow = $rtfeldman$elm_css$Css$prop1('text-shadow');
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$buttonStyle = $rtfeldman$elm_css$Css$batch(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer),
			$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont,
			$rtfeldman$elm_css$Css$textOverflow($rtfeldman$elm_css$Css$ellipsis),
			$rtfeldman$elm_css$Css$overflow($rtfeldman$elm_css$Css$hidden),
			$rtfeldman$elm_css$Css$textDecoration($rtfeldman$elm_css$Css$none),
			$rtfeldman$elm_css$Css$backgroundImage($rtfeldman$elm_css$Css$none),
			$rtfeldman$elm_css$Css$textShadow($rtfeldman$elm_css$Css$none),
			A2($rtfeldman$elm_css$Css$property, 'transition', 'background-color 0.2s, color 0.2s, box-shadow 0.2s, border 0.2s, border-width 0s'),
			$rtfeldman$elm_css$Css$boxShadow($rtfeldman$elm_css$Css$none),
			$rtfeldman$elm_css$Css$border($rtfeldman$elm_css$Css$zero),
			$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$zero),
			$rtfeldman$elm_css$Css$hover(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$textDecoration($rtfeldman$elm_css$Css$none)
				])),
			$rtfeldman$elm_css$Css$disabled(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$notAllowed)
				])),
			$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineFlex),
			$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
			$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center)
		]));
var $rtfeldman$elm_css$Css$borderBottomColor = function (c) {
	return A2($rtfeldman$elm_css$Css$property, 'border-bottom-color', c.value);
};
var $rtfeldman$elm_css$Css$borderBottomStyle = $rtfeldman$elm_css$Css$prop1('border-bottom-style');
var $rtfeldman$elm_css$Css$borderColor = function (c) {
	return A2($rtfeldman$elm_css$Css$property, 'border-color', c.value);
};
var $rtfeldman$elm_css$Css$borderStyle = $rtfeldman$elm_css$Css$prop1('border-style');
var $rtfeldman$elm_css$Css$fontStyle = $rtfeldman$elm_css$Css$prop1('font-style');
var $rtfeldman$elm_css$Css$fontWeight = function (_v0) {
	var value = _v0.value;
	return A2($rtfeldman$elm_css$Css$property, 'font-weight', value);
};
var $rtfeldman$elm_css$Css$normal = {featureTagValue: $rtfeldman$elm_css$Css$Structure$Compatible, fontStyle: $rtfeldman$elm_css$Css$Structure$Compatible, fontWeight: $rtfeldman$elm_css$Css$Structure$Compatible, overflowWrap: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'normal', whiteSpace: $rtfeldman$elm_css$Css$Structure$Compatible};
var $rtfeldman$elm_css$Css$solid = {borderStyle: $rtfeldman$elm_css$Css$Structure$Compatible, textDecorationStyle: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'solid'};
var $rtfeldman$elm_css$Css$textAlign = function (fn) {
	return A3(
		$rtfeldman$elm_css$Css$Internal$getOverloadedProperty,
		'textAlign',
		'text-align',
		fn($rtfeldman$elm_css$Css$Internal$lengthForOverloadedProperty));
};
var $rtfeldman$elm_css$Css$visited = $rtfeldman$elm_css$Css$pseudoClass('visited');
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$colorStyle = function (colorPalette) {
	return $rtfeldman$elm_css$Css$batch(
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$color(colorPalette.text),
				$rtfeldman$elm_css$Css$backgroundColor(colorPalette.background),
				$rtfeldman$elm_css$Css$fontWeight(
				$rtfeldman$elm_css$Css$int(700)),
				$rtfeldman$elm_css$Css$textAlign($rtfeldman$elm_css$Css$center),
				function () {
				var _v0 = colorPalette.border;
				if (_v0.$ === 'Nothing') {
					return $rtfeldman$elm_css$Css$borderStyle($rtfeldman$elm_css$Css$none);
				} else {
					var color = _v0.a;
					return $rtfeldman$elm_css$Css$batch(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$borderColor(color),
								$rtfeldman$elm_css$Css$borderStyle($rtfeldman$elm_css$Css$solid)
							]));
				}
			}(),
				$rtfeldman$elm_css$Css$borderBottomStyle($rtfeldman$elm_css$Css$solid),
				$rtfeldman$elm_css$Css$borderBottomColor(colorPalette.shadow),
				$rtfeldman$elm_css$Css$fontStyle($rtfeldman$elm_css$Css$normal),
				$rtfeldman$elm_css$Css$hover(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$color(colorPalette.text),
						$rtfeldman$elm_css$Css$backgroundColor(colorPalette.hover),
						$rtfeldman$elm_css$Css$disabled(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$backgroundColor(colorPalette.background)
							]))
					])),
				$rtfeldman$elm_css$Css$visited(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$color(colorPalette.text)
					]))
			]));
};
var $rtfeldman$elm_css$Css$borderBottomWidth = $rtfeldman$elm_css$Css$prop1('border-bottom-width');
var $rtfeldman$elm_css$Css$borderBox = {backgroundClip: $rtfeldman$elm_css$Css$Structure$Compatible, boxSizing: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'border-box'};
var $rtfeldman$elm_css$Css$borderRadius = $rtfeldman$elm_css$Css$prop1('border-radius');
var $rtfeldman$elm_css$Css$borderWidth = $rtfeldman$elm_css$Css$prop1('border-width');
var $rtfeldman$elm_css$Css$boxSizing = $rtfeldman$elm_css$Css$prop1('box-sizing');
var $rtfeldman$elm_css$Css$fontSize = $rtfeldman$elm_css$Css$prop1('font-size');
var $rtfeldman$elm_css$Css$lineHeight = $rtfeldman$elm_css$Css$prop1('line-height');
var $rtfeldman$elm_css$Css$maxWidth = $rtfeldman$elm_css$Css$prop1('max-width');
var $rtfeldman$elm_css$Css$minHeight = $rtfeldman$elm_css$Css$prop1('min-height');
var $rtfeldman$elm_css$Css$minWidth = $rtfeldman$elm_css$Css$prop1('min-width');
var $rtfeldman$elm_css$Css$paddingBottom = $rtfeldman$elm_css$Css$prop1('padding-bottom');
var $rtfeldman$elm_css$Css$paddingLeft = $rtfeldman$elm_css$Css$prop1('padding-left');
var $rtfeldman$elm_css$Css$paddingRight = $rtfeldman$elm_css$Css$prop1('padding-right');
var $rtfeldman$elm_css$Css$paddingTop = $rtfeldman$elm_css$Css$prop1('padding-top');
var $rtfeldman$elm_css$Css$PercentageUnits = {$: 'PercentageUnits'};
var $rtfeldman$elm_css$Css$pct = A2($rtfeldman$elm_css$Css$Internal$lengthConverter, $rtfeldman$elm_css$Css$PercentageUnits, '%');
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$sizeConfig = function (size) {
	switch (size.$) {
		case 'Small':
			return {
				fontAndIconSize: $rtfeldman$elm_css$Css$px(15),
				height: 36,
				minWidth: 75,
				shadowHeight: 2
			};
		case 'Medium':
			return {
				fontAndIconSize: $rtfeldman$elm_css$Css$px(15),
				height: 45,
				minWidth: 100,
				shadowHeight: 3
			};
		default:
			return {
				fontAndIconSize: $rtfeldman$elm_css$Css$px(20),
				height: 56,
				minWidth: 200,
				shadowHeight: 4
			};
	}
};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$sizeStyle = F2(
	function (size, width) {
		var lineHeightPx = function () {
			switch (size.$) {
				case 'Small':
					return 15;
				case 'Medium':
					return 19;
				default:
					return 22;
			}
		}();
		var config = $NoRedInk$noredink_ui$Nri$Ui$Button$V10$sizeConfig(size);
		var sizingAttributes = function () {
			var verticalPaddingPx = 2;
			return _List_fromArray(
				[
					$rtfeldman$elm_css$Css$minHeight(
					$rtfeldman$elm_css$Css$px(config.height)),
					$rtfeldman$elm_css$Css$paddingTop(
					$rtfeldman$elm_css$Css$px(verticalPaddingPx)),
					$rtfeldman$elm_css$Css$paddingBottom(
					$rtfeldman$elm_css$Css$px(verticalPaddingPx))
				]);
		}();
		var widthAttributes = function () {
			switch (width.$) {
				case 'WidthExact':
					var pxWidth = width.a;
					return _List_fromArray(
						[
							$rtfeldman$elm_css$Css$maxWidth(
							$rtfeldman$elm_css$Css$pct(100)),
							$rtfeldman$elm_css$Css$width(
							$rtfeldman$elm_css$Css$px(pxWidth)),
							$rtfeldman$elm_css$Css$paddingRight(
							$rtfeldman$elm_css$Css$px(4)),
							$rtfeldman$elm_css$Css$paddingLeft(
							$rtfeldman$elm_css$Css$px(4))
						]);
				case 'WidthUnbounded':
					return _List_fromArray(
						[
							$rtfeldman$elm_css$Css$paddingLeft(
							$rtfeldman$elm_css$Css$px(16)),
							$rtfeldman$elm_css$Css$paddingRight(
							$rtfeldman$elm_css$Css$px(16)),
							$rtfeldman$elm_css$Css$minWidth(
							$rtfeldman$elm_css$Css$px(config.minWidth))
						]);
				case 'WidthFillContainer':
					return _List_fromArray(
						[
							$rtfeldman$elm_css$Css$paddingLeft(
							$rtfeldman$elm_css$Css$px(16)),
							$rtfeldman$elm_css$Css$paddingRight(
							$rtfeldman$elm_css$Css$px(16)),
							$rtfeldman$elm_css$Css$minWidth(
							$rtfeldman$elm_css$Css$px(config.minWidth)),
							$rtfeldman$elm_css$Css$width(
							$rtfeldman$elm_css$Css$pct(100))
						]);
				default:
					var min = width.a.min;
					var max = width.a.max;
					return _List_fromArray(
						[
							$rtfeldman$elm_css$Css$maxWidth(
							$rtfeldman$elm_css$Css$px(max)),
							$rtfeldman$elm_css$Css$minWidth(
							$rtfeldman$elm_css$Css$px(min)),
							$rtfeldman$elm_css$Css$paddingRight(
							$rtfeldman$elm_css$Css$px(16)),
							$rtfeldman$elm_css$Css$paddingLeft(
							$rtfeldman$elm_css$Css$px(16))
						]);
			}
		}();
		return $rtfeldman$elm_css$Css$batch(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$fontSize(config.fontAndIconSize),
					$rtfeldman$elm_css$Css$borderRadius(
					$rtfeldman$elm_css$Css$px(8)),
					$rtfeldman$elm_css$Css$lineHeight(
					$rtfeldman$elm_css$Css$px(lineHeightPx)),
					$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
					$rtfeldman$elm_css$Css$borderWidth(
					$rtfeldman$elm_css$Css$px(1)),
					$rtfeldman$elm_css$Css$borderBottomWidth(
					$rtfeldman$elm_css$Css$px(config.shadowHeight)),
					$rtfeldman$elm_css$Css$batch(sizingAttributes),
					$rtfeldman$elm_css$Css$batch(widthAttributes)
				]));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$buttonStyles = F4(
	function (size, width, colors, customStyles) {
		return $rtfeldman$elm_css$Css$batch(
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$buttonStyle,
					A2($NoRedInk$noredink_ui$Nri$Ui$Button$V10$sizeStyle, size, width),
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$colorStyle(colors),
					$rtfeldman$elm_css$Css$batch(customStyles)
				]));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$property = F2(
	function (key, value) {
		return A3(
			$rtfeldman$elm_css$VirtualDom$Styled$Attribute,
			A2($elm$virtual_dom$VirtualDom$property, key, value),
			false,
			'');
	});
var $rtfeldman$elm_css$Html$Styled$Attributes$boolProperty = F2(
	function (key, bool) {
		return A2(
			$rtfeldman$elm_css$VirtualDom$Styled$property,
			key,
			$elm$json$Json$Encode$bool(bool));
	});
var $rtfeldman$elm_css$Html$Styled$Attributes$disabled = $rtfeldman$elm_css$Html$Styled$Attributes$boolProperty('disabled');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$glacier = $rtfeldman$elm_css$Css$hex('#d4f0ff');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray45 = $rtfeldman$elm_css$Css$hex('#727272');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray92 = $rtfeldman$elm_css$Css$hex('#ebebeb');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$greenDark = $rtfeldman$elm_css$Css$hex('#26a300');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purple = $rtfeldman$elm_css$Css$hex('#a839e7');
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$getColorPalette = function (_v0) {
	var config = _v0.a;
	var _v1 = config.state;
	switch (_v1.$) {
		case 'Enabled':
			return config.style;
		case 'Disabled':
			return {background: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray92, border: $elm$core$Maybe$Nothing, hover: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray92, shadow: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray92, text: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray45};
		case 'Error':
			return {background: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purple, border: $elm$core$Maybe$Nothing, hover: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purple, shadow: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purple, text: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white};
		case 'Unfulfilled':
			return {background: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray92, border: $elm$core$Maybe$Nothing, hover: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray92, shadow: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray92, text: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray45};
		case 'Loading':
			return {background: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$glacier, border: $elm$core$Maybe$Nothing, hover: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$glacier, shadow: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$glacier, text: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy};
		default:
			return {background: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$greenDark, border: $elm$core$Maybe$Nothing, hover: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$greenDark, shadow: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$greenDark, text: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white};
	}
};
var $NoRedInk$noredink_ui$Nri$Ui$styled = F3(
	function (fn, description, styles) {
		var descriptionAttr = A2($rtfeldman$elm_css$Html$Styled$Attributes$attribute, 'data-nri-description', description);
		var cssAttr = $rtfeldman$elm_css$Html$Styled$Attributes$css(styles);
		return F2(
			function (attrs, children) {
				return A2(
					fn,
					A2(
						$elm$core$List$cons,
						descriptionAttr,
						A2($elm$core$List$cons, cssAttr, attrs)),
					children);
			});
	});
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$styledName = function (suffix) {
	return 'Nri-Ui-Button-V10-' + suffix;
};
var $elm$virtual_dom$VirtualDom$Normal = function (a) {
	return {$: 'Normal', a: a};
};
var $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;
var $rtfeldman$elm_css$VirtualDom$Styled$on = F2(
	function (eventName, handler) {
		return A3(
			$rtfeldman$elm_css$VirtualDom$Styled$Attribute,
			A2($elm$virtual_dom$VirtualDom$on, eventName, handler),
			false,
			'');
	});
var $rtfeldman$elm_css$Html$Styled$Events$on = F2(
	function (event, decoder) {
		return A2(
			$rtfeldman$elm_css$VirtualDom$Styled$on,
			event,
			$elm$virtual_dom$VirtualDom$Normal(decoder));
	});
var $rtfeldman$elm_css$Html$Styled$Events$onClick = function (msg) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$on,
		'click',
		$elm$json$Json$Decode$succeed(msg));
};
var $NoRedInk$noredink_ui$ClickableAttributes$toButtonAttributes = function (clickableAttributes) {
	var _v0 = clickableAttributes.onClick;
	if (_v0.$ === 'Just') {
		var handler = _v0.a;
		return _List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Events$onClick(handler)
			]);
	} else {
		return _List_Nil;
	}
};
var $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty = F2(
	function (key, string) {
		return A2(
			$rtfeldman$elm_css$VirtualDom$Styled$property,
			key,
			$elm$json$Json$Encode$string(string));
	});
var $rtfeldman$elm_css$Html$Styled$Attributes$type_ = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('type');
var $rtfeldman$elm_css$Css$breakWord = {overflowWrap: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'break-word'};
var $rtfeldman$elm_css$Css$flexShrink = $rtfeldman$elm_css$Css$prop1('flex-shrink');
var $rtfeldman$elm_css$Css$marginRight = $rtfeldman$elm_css$Css$prop1('margin-right');
var $rtfeldman$elm_css$Css$overflowWrap = $rtfeldman$elm_css$Css$prop1('overflow-wrap');
var $rtfeldman$elm_css$Css$prop2 = F3(
	function (key, argA, argB) {
		return A2($rtfeldman$elm_css$Css$property, key, argA.value + (' ' + argB.value));
	});
var $rtfeldman$elm_css$Css$padding2 = $rtfeldman$elm_css$Css$prop2('padding');
var $rtfeldman$elm_css$VirtualDom$Styled$unstyledNode = $rtfeldman$elm_css$VirtualDom$Styled$Unstyled;
var $rtfeldman$elm_css$Html$Styled$fromUnstyled = $rtfeldman$elm_css$VirtualDom$Styled$unstyledNode;
var $pablohirafuji$elm_markdown$Markdown$Block$BlockQuote = function (a) {
	return {$: 'BlockQuote', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$Block$List = F2(
	function (a, b) {
		return {$: 'List', a: a, b: b};
	});
var $pablohirafuji$elm_markdown$Markdown$Block$Paragraph = F2(
	function (a, b) {
		return {$: 'Paragraph', a: a, b: b};
	});
var $elm$core$String$right = F2(
	function (n, string) {
		return (n < 1) ? '' : A3(
			$elm$core$String$slice,
			-n,
			$elm$core$String$length(string),
			string);
	});
var $elm$core$String$trim = _String_trim;
var $pablohirafuji$elm_markdown$Markdown$Block$formatParagraphLine = function (rawParagraph) {
	return (A2($elm$core$String$right, 2, rawParagraph) === '  ') ? ($elm$core$String$trim(rawParagraph) + '  ') : $elm$core$String$trim(rawParagraph);
};
var $pablohirafuji$elm_markdown$Markdown$Block$addToParagraph = F2(
	function (paragraph, rawLine) {
		return A2(
			$pablohirafuji$elm_markdown$Markdown$Block$Paragraph,
			paragraph + ('\n' + $pablohirafuji$elm_markdown$Markdown$Block$formatParagraphLine(rawLine)),
			_List_Nil);
	});
var $elm$regex$Regex$Match = F4(
	function (match, index, number, submatches) {
		return {index: index, match: match, number: number, submatches: submatches};
	});
var $elm$regex$Regex$fromStringWith = _Regex_fromStringWith;
var $elm$regex$Regex$fromString = function (string) {
	return A2(
		$elm$regex$Regex$fromStringWith,
		{caseInsensitive: false, multiline: false},
		string);
};
var $elm$regex$Regex$never = _Regex_never;
var $pablohirafuji$elm_markdown$Markdown$Block$blockQuoteLineRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^ {0,3}(?:>[ ]?)(.*)$'));
var $pablohirafuji$elm_markdown$Markdown$Block$blankLineRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^\\s*$'));
var $elm$regex$Regex$contains = _Regex_contains;
var $pablohirafuji$elm_markdown$Markdown$Block$calcListIndentLength = function (_v0) {
	var listBlock = _v0.a;
	var indentSpace = _v0.b;
	var rawLine = _v0.c;
	var indentSpaceLength = $elm$core$String$length(indentSpace);
	var isIndentedCode = indentSpaceLength >= 4;
	var updtRawLine = isIndentedCode ? _Utils_ap(indentSpace, rawLine) : rawLine;
	var indentLength = (isIndentedCode || A2($elm$regex$Regex$contains, $pablohirafuji$elm_markdown$Markdown$Block$blankLineRegex, rawLine)) ? (listBlock.indentLength - indentSpaceLength) : listBlock.indentLength;
	return _Utils_Tuple2(
		_Utils_update(
			listBlock,
			{indentLength: indentLength}),
		updtRawLine);
};
var $pablohirafuji$elm_markdown$Markdown$Block$atxHeadingLineRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^ {0,3}(#{1,6})' + ('(?:[ \\t]+[ \\t#]+$|[ \\t]+|$)' + '(.*?)(?:\\s+[ \\t#]*)?$')));
var $pablohirafuji$elm_markdown$Markdown$Block$Heading = F3(
	function (a, b, c) {
		return {$: 'Heading', a: a, b: b, c: c};
	});
var $pablohirafuji$elm_markdown$Markdown$Block$extractATXHeadingRM = function (match) {
	var _v0 = match.submatches;
	if ((_v0.b && (_v0.a.$ === 'Just')) && _v0.b.b) {
		var lvl = _v0.a.a;
		var _v1 = _v0.b;
		var maybeHeading = _v1.a;
		return $elm$core$Maybe$Just(
			A3(
				$pablohirafuji$elm_markdown$Markdown$Block$Heading,
				A2($elm$core$Maybe$withDefault, '', maybeHeading),
				$elm$core$String$length(lvl),
				_List_Nil));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$regex$Regex$findAtMost = _Regex_findAtMost;
var $elm$core$Result$fromMaybe = F2(
	function (err, maybe) {
		if (maybe.$ === 'Just') {
			var v = maybe.a;
			return $elm$core$Result$Ok(v);
		} else {
			return $elm$core$Result$Err(err);
		}
	});
var $pablohirafuji$elm_markdown$Markdown$Block$checkATXHeadingLine = function (_v0) {
	var rawLine = _v0.a;
	var ast = _v0.b;
	return A2(
		$elm$core$Result$fromMaybe,
		_Utils_Tuple2(rawLine, ast),
		A2(
			$elm$core$Maybe$map,
			function (a) {
				return A2($elm$core$List$cons, a, ast);
			},
			A2(
				$elm$core$Maybe$andThen,
				$pablohirafuji$elm_markdown$Markdown$Block$extractATXHeadingRM,
				$elm$core$List$head(
					A3($elm$regex$Regex$findAtMost, 1, $pablohirafuji$elm_markdown$Markdown$Block$atxHeadingLineRegex, rawLine)))));
};
var $pablohirafuji$elm_markdown$Markdown$Block$BlankLine = function (a) {
	return {$: 'BlankLine', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$Block$CodeBlock = F2(
	function (a, b) {
		return {$: 'CodeBlock', a: a, b: b};
	});
var $pablohirafuji$elm_markdown$Markdown$Block$Fenced = F2(
	function (a, b) {
		return {$: 'Fenced', a: a, b: b};
	});
var $pablohirafuji$elm_markdown$Markdown$Block$addBlankLineToListBlock = F2(
	function (match, asts) {
		if (!asts.b) {
			return _List_fromArray(
				[
					_List_fromArray(
					[
						$pablohirafuji$elm_markdown$Markdown$Block$BlankLine(match.match)
					])
				]);
		} else {
			var ast = asts.a;
			var astsTail = asts.b;
			return A2(
				$elm$core$List$cons,
				A2($pablohirafuji$elm_markdown$Markdown$Block$parseBlankLine, ast, match),
				astsTail);
		}
	});
var $pablohirafuji$elm_markdown$Markdown$Block$parseBlankLine = F2(
	function (ast, match) {
		_v0$2:
		while (true) {
			if (ast.b) {
				switch (ast.a.$) {
					case 'CodeBlock':
						if ((ast.a.a.$ === 'Fenced') && ast.a.a.a) {
							var _v1 = ast.a;
							var _v2 = _v1.a;
							var fence = _v2.b;
							var code = _v1.b;
							var astTail = ast.b;
							return function (a) {
								return A2($elm$core$List$cons, a, astTail);
							}(
								A2(
									$pablohirafuji$elm_markdown$Markdown$Block$CodeBlock,
									A2($pablohirafuji$elm_markdown$Markdown$Block$Fenced, true, fence),
									code + '\n'));
						} else {
							break _v0$2;
						}
					case 'List':
						var _v3 = ast.a;
						var model = _v3.a;
						var items = _v3.b;
						var astTail = ast.b;
						return A2(
							$elm$core$List$cons,
							A2(
								$pablohirafuji$elm_markdown$Markdown$Block$List,
								model,
								A2($pablohirafuji$elm_markdown$Markdown$Block$addBlankLineToListBlock, match, items)),
							astTail);
					default:
						break _v0$2;
				}
			} else {
				break _v0$2;
			}
		}
		return A2(
			$elm$core$List$cons,
			$pablohirafuji$elm_markdown$Markdown$Block$BlankLine(match.match),
			ast);
	});
var $pablohirafuji$elm_markdown$Markdown$Block$checkBlankLine = function (_v0) {
	var rawLine = _v0.a;
	var ast = _v0.b;
	return A2(
		$elm$core$Result$fromMaybe,
		_Utils_Tuple2(rawLine, ast),
		A2(
			$elm$core$Maybe$map,
			$pablohirafuji$elm_markdown$Markdown$Block$parseBlankLine(ast),
			$elm$core$List$head(
				A3($elm$regex$Regex$findAtMost, 1, $pablohirafuji$elm_markdown$Markdown$Block$blankLineRegex, rawLine))));
};
var $pablohirafuji$elm_markdown$Markdown$Block$indentedCodeLineRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^(?: {4,4}| {0,3}\\t)(.*)$'));
var $pablohirafuji$elm_markdown$Markdown$Block$Indented = {$: 'Indented'};
var $pablohirafuji$elm_markdown$Markdown$Block$blocksAfterBlankLines = F2(
	function (ast, blankLines) {
		blocksAfterBlankLines:
		while (true) {
			if (ast.b && (ast.a.$ === 'BlankLine')) {
				var blankStr = ast.a.a;
				var astTail = ast.b;
				var $temp$ast = astTail,
					$temp$blankLines = A2($elm$core$List$cons, blankStr, blankLines);
				ast = $temp$ast;
				blankLines = $temp$blankLines;
				continue blocksAfterBlankLines;
			} else {
				return _Utils_Tuple2(ast, blankLines);
			}
		}
	});
var $pablohirafuji$elm_markdown$Markdown$Block$maybeContinueParagraph = F2(
	function (rawLine, ast) {
		_v0$3:
		while (true) {
			if (ast.b) {
				switch (ast.a.$) {
					case 'Paragraph':
						var _v1 = ast.a;
						var paragraph = _v1.a;
						var astTail = ast.b;
						return $elm$core$Maybe$Just(
							A2(
								$elm$core$List$cons,
								A2($pablohirafuji$elm_markdown$Markdown$Block$addToParagraph, paragraph, rawLine),
								astTail));
					case 'BlockQuote':
						var bqAST = ast.a.a;
						var astTail = ast.b;
						return A2(
							$elm$core$Maybe$map,
							function (updtBqAST) {
								return A2(
									$elm$core$List$cons,
									$pablohirafuji$elm_markdown$Markdown$Block$BlockQuote(updtBqAST),
									astTail);
							},
							A2($pablohirafuji$elm_markdown$Markdown$Block$maybeContinueParagraph, rawLine, bqAST));
					case 'List':
						var _v2 = ast.a;
						var model = _v2.a;
						var items = _v2.b;
						var astTail = ast.b;
						if (items.b) {
							var itemAST = items.a;
							var itemASTTail = items.b;
							return A2(
								$elm$core$Maybe$map,
								A2(
									$elm$core$Basics$composeR,
									function (a) {
										return A2($elm$core$List$cons, a, itemASTTail);
									},
									A2(
										$elm$core$Basics$composeR,
										$pablohirafuji$elm_markdown$Markdown$Block$List(model),
										function (a) {
											return A2($elm$core$List$cons, a, astTail);
										})),
								A2($pablohirafuji$elm_markdown$Markdown$Block$maybeContinueParagraph, rawLine, itemAST));
						} else {
							return $elm$core$Maybe$Nothing;
						}
					default:
						break _v0$3;
				}
			} else {
				break _v0$3;
			}
		}
		return $elm$core$Maybe$Nothing;
	});
var $elm$core$String$concat = function (strings) {
	return A2($elm$core$String$join, '', strings);
};
var $elm$regex$Regex$replace = _Regex_replaceAtMost(_Regex_infinity);
var $elm$regex$Regex$replaceAtMost = _Regex_replaceAtMost;
var $pablohirafuji$elm_markdown$Markdown$Helpers$tabRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('\\t'));
var $pablohirafuji$elm_markdown$Markdown$Helpers$indentLine = function (indentLength_) {
	return A2(
		$elm$core$Basics$composeR,
		A2(
			$elm$regex$Regex$replace,
			$pablohirafuji$elm_markdown$Markdown$Helpers$tabRegex,
			function (_v0) {
				return '    ';
			}),
		A3(
			$elm$regex$Regex$replaceAtMost,
			1,
			A2(
				$elm$core$Maybe$withDefault,
				$elm$regex$Regex$never,
				$elm$regex$Regex$fromString(
					'^ {0,' + ($elm$core$String$fromInt(indentLength_) + '}'))),
			function (_v1) {
				return '';
			}));
};
var $pablohirafuji$elm_markdown$Markdown$Block$resumeIndentedCodeBlock = F2(
	function (codeLine, _v0) {
		var remainBlocks = _v0.a;
		var blankLines = _v0.b;
		if ((remainBlocks.b && (remainBlocks.a.$ === 'CodeBlock')) && (remainBlocks.a.a.$ === 'Indented')) {
			var _v2 = remainBlocks.a;
			var _v3 = _v2.a;
			var codeStr = _v2.b;
			var remainBlocksTail = remainBlocks.b;
			return $elm$core$Maybe$Just(
				function (a) {
					return A2($elm$core$List$cons, a, remainBlocksTail);
				}(
					A2(
						$pablohirafuji$elm_markdown$Markdown$Block$CodeBlock,
						$pablohirafuji$elm_markdown$Markdown$Block$Indented,
						function (a) {
							return a + (codeLine + '\n');
						}(
							_Utils_ap(
								codeStr,
								$elm$core$String$concat(
									A2(
										$elm$core$List$map,
										function (bl) {
											return A2($pablohirafuji$elm_markdown$Markdown$Helpers$indentLine, 4, bl) + '\n';
										},
										blankLines)))))));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $pablohirafuji$elm_markdown$Markdown$Block$parseIndentedCodeLine = F2(
	function (ast, codeLine) {
		_v0$2:
		while (true) {
			if (ast.b) {
				switch (ast.a.$) {
					case 'CodeBlock':
						if (ast.a.a.$ === 'Indented') {
							var _v1 = ast.a;
							var _v2 = _v1.a;
							var codeStr = _v1.b;
							var astTail = ast.b;
							return function (a) {
								return A2($elm$core$List$cons, a, astTail);
							}(
								A2($pablohirafuji$elm_markdown$Markdown$Block$CodeBlock, $pablohirafuji$elm_markdown$Markdown$Block$Indented, codeStr + (codeLine + '\n')));
						} else {
							break _v0$2;
						}
					case 'BlankLine':
						var blankStr = ast.a.a;
						var astTail = ast.b;
						return A2(
							$elm$core$Maybe$withDefault,
							function (a) {
								return A2($elm$core$List$cons, a, ast);
							}(
								A2($pablohirafuji$elm_markdown$Markdown$Block$CodeBlock, $pablohirafuji$elm_markdown$Markdown$Block$Indented, codeLine + '\n')),
							A2(
								$pablohirafuji$elm_markdown$Markdown$Block$resumeIndentedCodeBlock,
								codeLine,
								A2(
									$pablohirafuji$elm_markdown$Markdown$Block$blocksAfterBlankLines,
									astTail,
									_List_fromArray(
										[blankStr]))));
					default:
						break _v0$2;
				}
			} else {
				break _v0$2;
			}
		}
		return A2(
			$elm$core$Maybe$withDefault,
			function (a) {
				return A2($elm$core$List$cons, a, ast);
			}(
				A2($pablohirafuji$elm_markdown$Markdown$Block$CodeBlock, $pablohirafuji$elm_markdown$Markdown$Block$Indented, codeLine + '\n')),
			A2($pablohirafuji$elm_markdown$Markdown$Block$maybeContinueParagraph, codeLine, ast));
	});
var $pablohirafuji$elm_markdown$Markdown$Block$checkIndentedCode = function (_v0) {
	var rawLine = _v0.a;
	var ast = _v0.b;
	return A2(
		$elm$core$Result$fromMaybe,
		_Utils_Tuple2(rawLine, ast),
		A2(
			$elm$core$Maybe$map,
			$pablohirafuji$elm_markdown$Markdown$Block$parseIndentedCodeLine(ast),
			A2(
				$elm$core$Maybe$withDefault,
				$elm$core$Maybe$Nothing,
				A2(
					$elm$core$Maybe$withDefault,
					$elm$core$Maybe$Nothing,
					A2(
						$elm$core$Maybe$map,
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.submatches;
							},
							$elm$core$List$head),
						$elm$core$List$head(
							A3($elm$regex$Regex$findAtMost, 1, $pablohirafuji$elm_markdown$Markdown$Block$indentedCodeLineRegex, rawLine)))))));
};
var $pablohirafuji$elm_markdown$Markdown$Entity$decimalRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('&#([0-9]{1,8});'));
var $elm$core$Char$fromCode = _Char_fromCode;
var $pablohirafuji$elm_markdown$Markdown$Entity$isBadEndUnicode = function (_int) {
	var remain_ = A2($elm$core$Basics$modBy, 16, _int);
	var remain = A2($elm$core$Basics$modBy, 131070, _int);
	return (_int >= 131070) && ((((0 <= remain) && (remain <= 15)) || ((65536 <= remain) && (remain <= 65551))) && ((remain_ === 14) || (remain_ === 15)));
};
var $pablohirafuji$elm_markdown$Markdown$Entity$isValidUnicode = function (_int) {
	return (_int === 9) || ((_int === 10) || ((_int === 13) || ((_int === 133) || (((32 <= _int) && (_int <= 126)) || (((160 <= _int) && (_int <= 55295)) || (((57344 <= _int) && (_int <= 64975)) || (((65008 <= _int) && (_int <= 65533)) || ((65536 <= _int) && (_int <= 1114109)))))))));
};
var $pablohirafuji$elm_markdown$Markdown$Entity$validUnicode = function (_int) {
	return ($pablohirafuji$elm_markdown$Markdown$Entity$isValidUnicode(_int) && (!$pablohirafuji$elm_markdown$Markdown$Entity$isBadEndUnicode(_int))) ? $elm$core$String$fromChar(
		$elm$core$Char$fromCode(_int)) : $elm$core$String$fromChar(
		$elm$core$Char$fromCode(65533));
};
var $pablohirafuji$elm_markdown$Markdown$Entity$replaceDecimal = function (match) {
	return A2(
		$elm$core$Maybe$withDefault,
		match.match,
		A2(
			$elm$core$Maybe$map,
			$pablohirafuji$elm_markdown$Markdown$Entity$validUnicode,
			A2(
				$elm$core$Maybe$andThen,
				$elm$core$String$toInt,
				A2(
					$elm$core$Maybe$withDefault,
					$elm$core$Maybe$Nothing,
					$elm$core$List$head(match.submatches)))));
};
var $pablohirafuji$elm_markdown$Markdown$Entity$replaceDecimals = A2($elm$regex$Regex$replace, $pablohirafuji$elm_markdown$Markdown$Entity$decimalRegex, $pablohirafuji$elm_markdown$Markdown$Entity$replaceDecimal);
var $pablohirafuji$elm_markdown$Markdown$Entity$entitiesRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('&([0-9a-zA-Z]+);'));
var $pablohirafuji$elm_markdown$Markdown$Entity$entities = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2('quot', 34),
			_Utils_Tuple2('amp', 38),
			_Utils_Tuple2('apos', 39),
			_Utils_Tuple2('lt', 60),
			_Utils_Tuple2('gt', 62),
			_Utils_Tuple2('nbsp', 160),
			_Utils_Tuple2('iexcl', 161),
			_Utils_Tuple2('cent', 162),
			_Utils_Tuple2('pound', 163),
			_Utils_Tuple2('curren', 164),
			_Utils_Tuple2('yen', 165),
			_Utils_Tuple2('brvbar', 166),
			_Utils_Tuple2('sect', 167),
			_Utils_Tuple2('uml', 168),
			_Utils_Tuple2('copy', 169),
			_Utils_Tuple2('ordf', 170),
			_Utils_Tuple2('laquo', 171),
			_Utils_Tuple2('not', 172),
			_Utils_Tuple2('shy', 173),
			_Utils_Tuple2('reg', 174),
			_Utils_Tuple2('macr', 175),
			_Utils_Tuple2('deg', 176),
			_Utils_Tuple2('plusmn', 177),
			_Utils_Tuple2('sup2', 178),
			_Utils_Tuple2('sup3', 179),
			_Utils_Tuple2('acute', 180),
			_Utils_Tuple2('micro', 181),
			_Utils_Tuple2('para', 182),
			_Utils_Tuple2('middot', 183),
			_Utils_Tuple2('cedil', 184),
			_Utils_Tuple2('sup1', 185),
			_Utils_Tuple2('ordm', 186),
			_Utils_Tuple2('raquo', 187),
			_Utils_Tuple2('frac14', 188),
			_Utils_Tuple2('frac12', 189),
			_Utils_Tuple2('frac34', 190),
			_Utils_Tuple2('iquest', 191),
			_Utils_Tuple2('Agrave', 192),
			_Utils_Tuple2('Aacute', 193),
			_Utils_Tuple2('Acirc', 194),
			_Utils_Tuple2('Atilde', 195),
			_Utils_Tuple2('Auml', 196),
			_Utils_Tuple2('Aring', 197),
			_Utils_Tuple2('AElig', 198),
			_Utils_Tuple2('Ccedil', 199),
			_Utils_Tuple2('Egrave', 200),
			_Utils_Tuple2('Eacute', 201),
			_Utils_Tuple2('Ecirc', 202),
			_Utils_Tuple2('Euml', 203),
			_Utils_Tuple2('Igrave', 204),
			_Utils_Tuple2('Iacute', 205),
			_Utils_Tuple2('Icirc', 206),
			_Utils_Tuple2('Iuml', 207),
			_Utils_Tuple2('ETH', 208),
			_Utils_Tuple2('Ntilde', 209),
			_Utils_Tuple2('Ograve', 210),
			_Utils_Tuple2('Oacute', 211),
			_Utils_Tuple2('Ocirc', 212),
			_Utils_Tuple2('Otilde', 213),
			_Utils_Tuple2('Ouml', 214),
			_Utils_Tuple2('times', 215),
			_Utils_Tuple2('Oslash', 216),
			_Utils_Tuple2('Ugrave', 217),
			_Utils_Tuple2('Uacute', 218),
			_Utils_Tuple2('Ucirc', 219),
			_Utils_Tuple2('Uuml', 220),
			_Utils_Tuple2('Yacute', 221),
			_Utils_Tuple2('THORN', 222),
			_Utils_Tuple2('szlig', 223),
			_Utils_Tuple2('agrave', 224),
			_Utils_Tuple2('aacute', 225),
			_Utils_Tuple2('acirc', 226),
			_Utils_Tuple2('atilde', 227),
			_Utils_Tuple2('auml', 228),
			_Utils_Tuple2('aring', 229),
			_Utils_Tuple2('aelig', 230),
			_Utils_Tuple2('ccedil', 231),
			_Utils_Tuple2('egrave', 232),
			_Utils_Tuple2('eacute', 233),
			_Utils_Tuple2('ecirc', 234),
			_Utils_Tuple2('euml', 235),
			_Utils_Tuple2('igrave', 236),
			_Utils_Tuple2('iacute', 237),
			_Utils_Tuple2('icirc', 238),
			_Utils_Tuple2('iuml', 239),
			_Utils_Tuple2('eth', 240),
			_Utils_Tuple2('ntilde', 241),
			_Utils_Tuple2('ograve', 242),
			_Utils_Tuple2('oacute', 243),
			_Utils_Tuple2('ocirc', 244),
			_Utils_Tuple2('otilde', 245),
			_Utils_Tuple2('ouml', 246),
			_Utils_Tuple2('divide', 247),
			_Utils_Tuple2('oslash', 248),
			_Utils_Tuple2('ugrave', 249),
			_Utils_Tuple2('uacute', 250),
			_Utils_Tuple2('ucirc', 251),
			_Utils_Tuple2('uuml', 252),
			_Utils_Tuple2('yacute', 253),
			_Utils_Tuple2('thorn', 254),
			_Utils_Tuple2('yuml', 255),
			_Utils_Tuple2('OElig', 338),
			_Utils_Tuple2('oelig', 339),
			_Utils_Tuple2('Scaron', 352),
			_Utils_Tuple2('scaron', 353),
			_Utils_Tuple2('Yuml', 376),
			_Utils_Tuple2('fnof', 402),
			_Utils_Tuple2('circ', 710),
			_Utils_Tuple2('tilde', 732),
			_Utils_Tuple2('Alpha', 913),
			_Utils_Tuple2('Beta', 914),
			_Utils_Tuple2('Gamma', 915),
			_Utils_Tuple2('Delta', 916),
			_Utils_Tuple2('Epsilon', 917),
			_Utils_Tuple2('Zeta', 918),
			_Utils_Tuple2('Eta', 919),
			_Utils_Tuple2('Theta', 920),
			_Utils_Tuple2('Iota', 921),
			_Utils_Tuple2('Kappa', 922),
			_Utils_Tuple2('Lambda', 923),
			_Utils_Tuple2('Mu', 924),
			_Utils_Tuple2('Nu', 925),
			_Utils_Tuple2('Xi', 926),
			_Utils_Tuple2('Omicron', 927),
			_Utils_Tuple2('Pi', 928),
			_Utils_Tuple2('Rho', 929),
			_Utils_Tuple2('Sigma', 931),
			_Utils_Tuple2('Tau', 932),
			_Utils_Tuple2('Upsilon', 933),
			_Utils_Tuple2('Phi', 934),
			_Utils_Tuple2('Chi', 935),
			_Utils_Tuple2('Psi', 936),
			_Utils_Tuple2('Omega', 937),
			_Utils_Tuple2('alpha', 945),
			_Utils_Tuple2('beta', 946),
			_Utils_Tuple2('gamma', 947),
			_Utils_Tuple2('delta', 948),
			_Utils_Tuple2('epsilon', 949),
			_Utils_Tuple2('zeta', 950),
			_Utils_Tuple2('eta', 951),
			_Utils_Tuple2('theta', 952),
			_Utils_Tuple2('iota', 953),
			_Utils_Tuple2('kappa', 954),
			_Utils_Tuple2('lambda', 955),
			_Utils_Tuple2('mu', 956),
			_Utils_Tuple2('nu', 957),
			_Utils_Tuple2('xi', 958),
			_Utils_Tuple2('omicron', 959),
			_Utils_Tuple2('pi', 960),
			_Utils_Tuple2('rho', 961),
			_Utils_Tuple2('sigmaf', 962),
			_Utils_Tuple2('sigma', 963),
			_Utils_Tuple2('tau', 964),
			_Utils_Tuple2('upsilon', 965),
			_Utils_Tuple2('phi', 966),
			_Utils_Tuple2('chi', 967),
			_Utils_Tuple2('psi', 968),
			_Utils_Tuple2('omega', 969),
			_Utils_Tuple2('thetasym', 977),
			_Utils_Tuple2('upsih', 978),
			_Utils_Tuple2('piv', 982),
			_Utils_Tuple2('ensp', 8194),
			_Utils_Tuple2('emsp', 8195),
			_Utils_Tuple2('thinsp', 8201),
			_Utils_Tuple2('zwnj', 8204),
			_Utils_Tuple2('zwj', 8205),
			_Utils_Tuple2('lrm', 8206),
			_Utils_Tuple2('rlm', 8207),
			_Utils_Tuple2('ndash', 8211),
			_Utils_Tuple2('mdash', 8212),
			_Utils_Tuple2('lsquo', 8216),
			_Utils_Tuple2('rsquo', 8217),
			_Utils_Tuple2('sbquo', 8218),
			_Utils_Tuple2('ldquo', 8220),
			_Utils_Tuple2('rdquo', 8221),
			_Utils_Tuple2('bdquo', 8222),
			_Utils_Tuple2('dagger', 8224),
			_Utils_Tuple2('Dagger', 8225),
			_Utils_Tuple2('bull', 8226),
			_Utils_Tuple2('hellip', 8230),
			_Utils_Tuple2('permil', 8240),
			_Utils_Tuple2('prime', 8242),
			_Utils_Tuple2('Prime', 8243),
			_Utils_Tuple2('lsaquo', 8249),
			_Utils_Tuple2('rsaquo', 8250),
			_Utils_Tuple2('oline', 8254),
			_Utils_Tuple2('frasl', 8260),
			_Utils_Tuple2('euro', 8364),
			_Utils_Tuple2('image', 8465),
			_Utils_Tuple2('weierp', 8472),
			_Utils_Tuple2('real', 8476),
			_Utils_Tuple2('trade', 8482),
			_Utils_Tuple2('alefsym', 8501),
			_Utils_Tuple2('larr', 8592),
			_Utils_Tuple2('uarr', 8593),
			_Utils_Tuple2('rarr', 8594),
			_Utils_Tuple2('darr', 8595),
			_Utils_Tuple2('harr', 8596),
			_Utils_Tuple2('crarr', 8629),
			_Utils_Tuple2('lArr', 8656),
			_Utils_Tuple2('uArr', 8657),
			_Utils_Tuple2('rArr', 8658),
			_Utils_Tuple2('dArr', 8659),
			_Utils_Tuple2('hArr', 8660),
			_Utils_Tuple2('forall', 8704),
			_Utils_Tuple2('part', 8706),
			_Utils_Tuple2('exist', 8707),
			_Utils_Tuple2('empty', 8709),
			_Utils_Tuple2('nabla', 8711),
			_Utils_Tuple2('isin', 8712),
			_Utils_Tuple2('notin', 8713),
			_Utils_Tuple2('ni', 8715),
			_Utils_Tuple2('prod', 8719),
			_Utils_Tuple2('sum', 8721),
			_Utils_Tuple2('minus', 8722),
			_Utils_Tuple2('lowast', 8727),
			_Utils_Tuple2('radic', 8730),
			_Utils_Tuple2('prop', 8733),
			_Utils_Tuple2('infin', 8734),
			_Utils_Tuple2('ang', 8736),
			_Utils_Tuple2('and', 8743),
			_Utils_Tuple2('or', 8744),
			_Utils_Tuple2('cap', 8745),
			_Utils_Tuple2('cup', 8746),
			_Utils_Tuple2('int', 8747),
			_Utils_Tuple2('there4', 8756),
			_Utils_Tuple2('sim', 8764),
			_Utils_Tuple2('cong', 8773),
			_Utils_Tuple2('asymp', 8776),
			_Utils_Tuple2('ne', 8800),
			_Utils_Tuple2('equiv', 8801),
			_Utils_Tuple2('le', 8804),
			_Utils_Tuple2('ge', 8805),
			_Utils_Tuple2('sub', 8834),
			_Utils_Tuple2('sup', 8835),
			_Utils_Tuple2('nsub', 8836),
			_Utils_Tuple2('sube', 8838),
			_Utils_Tuple2('supe', 8839),
			_Utils_Tuple2('oplus', 8853),
			_Utils_Tuple2('otimes', 8855),
			_Utils_Tuple2('perp', 8869),
			_Utils_Tuple2('sdot', 8901),
			_Utils_Tuple2('lceil', 8968),
			_Utils_Tuple2('rceil', 8969),
			_Utils_Tuple2('lfloor', 8970),
			_Utils_Tuple2('rfloor', 8971),
			_Utils_Tuple2('lang', 9001),
			_Utils_Tuple2('rang', 9002),
			_Utils_Tuple2('loz', 9674),
			_Utils_Tuple2('spades', 9824),
			_Utils_Tuple2('clubs', 9827),
			_Utils_Tuple2('hearts', 9829),
			_Utils_Tuple2('diams', 9830)
		]));
var $pablohirafuji$elm_markdown$Markdown$Entity$replaceEntity = function (match) {
	return A2(
		$elm$core$Maybe$withDefault,
		match.match,
		A2(
			$elm$core$Maybe$map,
			A2($elm$core$Basics$composeR, $elm$core$Char$fromCode, $elm$core$String$fromChar),
			A2(
				$elm$core$Maybe$andThen,
				function (a) {
					return A2($elm$core$Dict$get, a, $pablohirafuji$elm_markdown$Markdown$Entity$entities);
				},
				A2(
					$elm$core$Maybe$withDefault,
					$elm$core$Maybe$Nothing,
					$elm$core$List$head(match.submatches)))));
};
var $pablohirafuji$elm_markdown$Markdown$Entity$replaceEntities = A2($elm$regex$Regex$replace, $pablohirafuji$elm_markdown$Markdown$Entity$entitiesRegex, $pablohirafuji$elm_markdown$Markdown$Entity$replaceEntity);
var $pablohirafuji$elm_markdown$Markdown$Helpers$escapableRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('(\\\\+)([!\"#$%&\\\'()*+,./:;<=>?@[\\\\\\]^_`{|}~-])'));
var $pablohirafuji$elm_markdown$Markdown$Helpers$replaceEscapable = A2(
	$elm$regex$Regex$replace,
	$pablohirafuji$elm_markdown$Markdown$Helpers$escapableRegex,
	function (regexMatch) {
		var _v0 = regexMatch.submatches;
		if (((_v0.b && (_v0.a.$ === 'Just')) && _v0.b.b) && (_v0.b.a.$ === 'Just')) {
			var backslashes = _v0.a.a;
			var _v1 = _v0.b;
			var escapedStr = _v1.a.a;
			return _Utils_ap(
				A2(
					$elm$core$String$repeat,
					($elm$core$String$length(backslashes) / 2) | 0,
					'\\'),
				escapedStr);
		} else {
			return regexMatch.match;
		}
	});
var $pablohirafuji$elm_markdown$Markdown$Entity$hexadecimalRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('&#[Xx]([0-9a-fA-F]{1,8});'));
var $pablohirafuji$elm_markdown$Markdown$Entity$hexToInt = A2(
	$elm$core$Basics$composeR,
	$elm$core$String$toLower,
	A2(
		$elm$core$Basics$composeR,
		$elm$core$String$toList,
		A2(
			$elm$core$List$foldl,
			F2(
				function (hexDigit, _int) {
					return ((_int * 16) + A2(
						$elm$core$Basics$modBy,
						39,
						$elm$core$Char$toCode(hexDigit))) - 9;
				}),
			0)));
var $pablohirafuji$elm_markdown$Markdown$Entity$replaceHexadecimal = function (match) {
	return A2(
		$elm$core$Maybe$withDefault,
		match.match,
		A2(
			$elm$core$Maybe$map,
			A2($elm$core$Basics$composeR, $pablohirafuji$elm_markdown$Markdown$Entity$hexToInt, $pablohirafuji$elm_markdown$Markdown$Entity$validUnicode),
			A2(
				$elm$core$Maybe$withDefault,
				$elm$core$Maybe$Nothing,
				$elm$core$List$head(match.submatches))));
};
var $pablohirafuji$elm_markdown$Markdown$Entity$replaceHexadecimals = A2($elm$regex$Regex$replace, $pablohirafuji$elm_markdown$Markdown$Entity$hexadecimalRegex, $pablohirafuji$elm_markdown$Markdown$Entity$replaceHexadecimal);
var $pablohirafuji$elm_markdown$Markdown$Helpers$formatStr = function (str) {
	return $pablohirafuji$elm_markdown$Markdown$Entity$replaceHexadecimals(
		$pablohirafuji$elm_markdown$Markdown$Entity$replaceDecimals(
			$pablohirafuji$elm_markdown$Markdown$Entity$replaceEntities(
				$pablohirafuji$elm_markdown$Markdown$Helpers$replaceEscapable(str))));
};
var $elm$core$String$words = _String_words;
var $pablohirafuji$elm_markdown$Markdown$Block$extractOpenCodeFenceRM = function (match) {
	var _v0 = match.submatches;
	if (((_v0.b && _v0.b.b) && (_v0.b.a.$ === 'Just')) && _v0.b.b.b) {
		var maybeIndent = _v0.a;
		var _v1 = _v0.b;
		var fence = _v1.a.a;
		var _v2 = _v1.b;
		var maybeLanguage = _v2.a;
		return $elm$core$Maybe$Just(
			A2(
				$pablohirafuji$elm_markdown$Markdown$Block$Fenced,
				true,
				{
					fenceChar: A2($elm$core$String$left, 1, fence),
					fenceLength: $elm$core$String$length(fence),
					indentLength: A2(
						$elm$core$Maybe$withDefault,
						0,
						A2($elm$core$Maybe$map, $elm$core$String$length, maybeIndent)),
					language: A2(
						$elm$core$Maybe$map,
						$pablohirafuji$elm_markdown$Markdown$Helpers$formatStr,
						A2(
							$elm$core$Maybe$andThen,
							function (lang) {
								return (lang === '') ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(lang);
							},
							$elm$core$List$head(
								A2(
									$elm$core$Maybe$withDefault,
									_List_Nil,
									A2($elm$core$Maybe$map, $elm$core$String$words, maybeLanguage)))))
				}));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $pablohirafuji$elm_markdown$Markdown$Block$openCodeFenceLineRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^( {0,3})(`{3,}(?!.*`)|~{3,}(?!.*~))(.*)$'));
var $pablohirafuji$elm_markdown$Markdown$Block$checkOpenCodeFenceLine = function (_v0) {
	var rawLine = _v0.a;
	var ast = _v0.b;
	return A2(
		$elm$core$Result$fromMaybe,
		_Utils_Tuple2(rawLine, ast),
		A2(
			$elm$core$Maybe$map,
			function (a) {
				return A2($elm$core$List$cons, a, ast);
			},
			A2(
				$elm$core$Maybe$map,
				function (f) {
					return A2($pablohirafuji$elm_markdown$Markdown$Block$CodeBlock, f, '');
				},
				A2(
					$elm$core$Maybe$andThen,
					$pablohirafuji$elm_markdown$Markdown$Block$extractOpenCodeFenceRM,
					$elm$core$List$head(
						A3($elm$regex$Regex$findAtMost, 1, $pablohirafuji$elm_markdown$Markdown$Block$openCodeFenceLineRegex, rawLine))))));
};
var $pablohirafuji$elm_markdown$Markdown$Block$Ordered = function (a) {
	return {$: 'Ordered', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$Block$Unordered = {$: 'Unordered'};
var $pablohirafuji$elm_markdown$Markdown$Block$extractOrderedListRM = function (match) {
	var _v0 = match.submatches;
	if (((((((_v0.b && (_v0.a.$ === 'Just')) && _v0.b.b) && (_v0.b.a.$ === 'Just')) && _v0.b.b.b) && (_v0.b.b.a.$ === 'Just')) && _v0.b.b.b.b) && _v0.b.b.b.b.b) {
		var indentString = _v0.a.a;
		var _v1 = _v0.b;
		var start = _v1.a.a;
		var _v2 = _v1.b;
		var delimiter = _v2.a.a;
		var _v3 = _v2.b;
		var maybeIndentSpace = _v3.a;
		var _v4 = _v3.b;
		var maybeRawLine = _v4.a;
		return $elm$core$Maybe$Just(
			_Utils_Tuple3(
				{
					delimiter: delimiter,
					indentLength: $elm$core$String$length(indentString) + 1,
					isLoose: false,
					type_: A2(
						$elm$core$Maybe$withDefault,
						$pablohirafuji$elm_markdown$Markdown$Block$Unordered,
						A2(
							$elm$core$Maybe$map,
							$pablohirafuji$elm_markdown$Markdown$Block$Ordered,
							$elm$core$String$toInt(start)))
				},
				A2($elm$core$Maybe$withDefault, '', maybeIndentSpace),
				A2($elm$core$Maybe$withDefault, '', maybeRawLine)));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $pablohirafuji$elm_markdown$Markdown$Block$orderedListLineRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^( *(\\d{1,9})([.)])( {0,4}))(?:[ \\t](.*))?$'));
var $pablohirafuji$elm_markdown$Markdown$Block$checkOrderedListLine = function (rawLine) {
	return A2(
		$elm$core$Result$fromMaybe,
		rawLine,
		A2(
			$elm$core$Maybe$andThen,
			$pablohirafuji$elm_markdown$Markdown$Block$extractOrderedListRM,
			$elm$core$List$head(
				A3($elm$regex$Regex$findAtMost, 1, $pablohirafuji$elm_markdown$Markdown$Block$orderedListLineRegex, rawLine))));
};
var $pablohirafuji$elm_markdown$Markdown$Block$extractSetextHeadingRM = function (match) {
	var _v0 = match.submatches;
	if (_v0.b && (_v0.a.$ === 'Just')) {
		var delimiter = _v0.a.a;
		return A2($elm$core$String$startsWith, '=', delimiter) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(1, delimiter)) : $elm$core$Maybe$Just(
			_Utils_Tuple2(2, delimiter));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $pablohirafuji$elm_markdown$Markdown$Block$parseSetextHeadingLine = F3(
	function (rawLine, ast, _v0) {
		var lvl = _v0.a;
		var delimiter = _v0.b;
		if (ast.b && (ast.a.$ === 'Paragraph')) {
			var _v2 = ast.a;
			var rawText = _v2.a;
			var astTail = ast.b;
			return $elm$core$Maybe$Just(
				A2(
					$elm$core$List$cons,
					A3($pablohirafuji$elm_markdown$Markdown$Block$Heading, rawText, lvl, _List_Nil),
					astTail));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $pablohirafuji$elm_markdown$Markdown$Block$setextHeadingLineRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^ {0,3}(=+|-+)[ \\t]*$'));
var $pablohirafuji$elm_markdown$Markdown$Block$checkSetextHeadingLine = function (_v0) {
	var rawLine = _v0.a;
	var ast = _v0.b;
	return A2(
		$elm$core$Result$fromMaybe,
		_Utils_Tuple2(rawLine, ast),
		A2(
			$elm$core$Maybe$andThen,
			A2($pablohirafuji$elm_markdown$Markdown$Block$parseSetextHeadingLine, rawLine, ast),
			A2(
				$elm$core$Maybe$andThen,
				$pablohirafuji$elm_markdown$Markdown$Block$extractSetextHeadingRM,
				$elm$core$List$head(
					A3($elm$regex$Regex$findAtMost, 1, $pablohirafuji$elm_markdown$Markdown$Block$setextHeadingLineRegex, rawLine)))));
};
var $pablohirafuji$elm_markdown$Markdown$Block$ThematicBreak = {$: 'ThematicBreak'};
var $pablohirafuji$elm_markdown$Markdown$Block$thematicBreakLineRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^ {0,3}(?:' + ('(?:\\*[ \\t]*){3,}' + ('|(?:_[ \\t]*){3,}' + '|(?:-[ \\t]*){3,})[ \\t]*$'))));
var $pablohirafuji$elm_markdown$Markdown$Block$checkThematicBreakLine = function (_v0) {
	var rawLine = _v0.a;
	var ast = _v0.b;
	return A2(
		$elm$core$Result$fromMaybe,
		_Utils_Tuple2(rawLine, ast),
		A2(
			$elm$core$Maybe$map,
			function (_v1) {
				return A2($elm$core$List$cons, $pablohirafuji$elm_markdown$Markdown$Block$ThematicBreak, ast);
			},
			$elm$core$List$head(
				A3($elm$regex$Regex$findAtMost, 1, $pablohirafuji$elm_markdown$Markdown$Block$thematicBreakLineRegex, rawLine))));
};
var $pablohirafuji$elm_markdown$Markdown$Block$extractUnorderedListRM = function (match) {
	var _v0 = match.submatches;
	if ((((((_v0.b && (_v0.a.$ === 'Just')) && _v0.b.b) && (_v0.b.a.$ === 'Just')) && _v0.b.b.b) && _v0.b.b.b.b) && (!_v0.b.b.b.b.b)) {
		var indentString = _v0.a.a;
		var _v1 = _v0.b;
		var delimiter = _v1.a.a;
		var _v2 = _v1.b;
		var maybeIndentSpace = _v2.a;
		var _v3 = _v2.b;
		var maybeRawLine = _v3.a;
		return $elm$core$Maybe$Just(
			_Utils_Tuple3(
				{
					delimiter: delimiter,
					indentLength: $elm$core$String$length(indentString) + 1,
					isLoose: false,
					type_: $pablohirafuji$elm_markdown$Markdown$Block$Unordered
				},
				A2($elm$core$Maybe$withDefault, '', maybeIndentSpace),
				A2($elm$core$Maybe$withDefault, '', maybeRawLine)));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $pablohirafuji$elm_markdown$Markdown$Block$unorderedListLineRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^( *([\\*\\-\\+])( {0,4}))(?:[ \\t](.*))?$'));
var $pablohirafuji$elm_markdown$Markdown$Block$checkUnorderedListLine = function (rawLine) {
	return A2(
		$elm$core$Result$fromMaybe,
		rawLine,
		A2(
			$elm$core$Maybe$andThen,
			$pablohirafuji$elm_markdown$Markdown$Block$extractUnorderedListRM,
			$elm$core$List$head(
				A3($elm$regex$Regex$findAtMost, 1, $pablohirafuji$elm_markdown$Markdown$Block$unorderedListLineRegex, rawLine))));
};
var $pablohirafuji$elm_markdown$Markdown$Block$closeCodeFenceLineRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^ {0,3}(`{3,}|~{3,})\\s*$'));
var $pablohirafuji$elm_markdown$Markdown$Block$isCloseFenceLineHelp = F2(
	function (fence, match) {
		var _v0 = match.submatches;
		if (_v0.b && (_v0.a.$ === 'Just')) {
			var fenceStr = _v0.a.a;
			return (_Utils_cmp(
				$elm$core$String$length(fenceStr),
				fence.fenceLength) > -1) && _Utils_eq(
				A2($elm$core$String$left, 1, fenceStr),
				fence.fenceChar);
		} else {
			return false;
		}
	});
var $pablohirafuji$elm_markdown$Markdown$Block$isCloseFenceLine = function (fence) {
	return A2(
		$elm$core$Basics$composeR,
		A2($elm$regex$Regex$findAtMost, 1, $pablohirafuji$elm_markdown$Markdown$Block$closeCodeFenceLineRegex),
		A2(
			$elm$core$Basics$composeR,
			$elm$core$List$head,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Maybe$map(
					$pablohirafuji$elm_markdown$Markdown$Block$isCloseFenceLineHelp(fence)),
				$elm$core$Maybe$withDefault(false))));
};
var $pablohirafuji$elm_markdown$Markdown$Block$continueOrCloseCodeFence = F3(
	function (fence, previousCode, rawLine) {
		return A2($pablohirafuji$elm_markdown$Markdown$Block$isCloseFenceLine, fence, rawLine) ? A2(
			$pablohirafuji$elm_markdown$Markdown$Block$CodeBlock,
			A2($pablohirafuji$elm_markdown$Markdown$Block$Fenced, false, fence),
			previousCode) : A2(
			$pablohirafuji$elm_markdown$Markdown$Block$CodeBlock,
			A2($pablohirafuji$elm_markdown$Markdown$Block$Fenced, true, fence),
			previousCode + (A2($pablohirafuji$elm_markdown$Markdown$Helpers$indentLine, fence.indentLength, rawLine) + '\n'));
	});
var $pablohirafuji$elm_markdown$Markdown$Helpers$ifError = F2(
	function (_function, result) {
		if (result.$ === 'Ok') {
			return result;
		} else {
			var err = result.a;
			return _function(err);
		}
	});
var $pablohirafuji$elm_markdown$Markdown$Helpers$initSpacesRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^ +'));
var $pablohirafuji$elm_markdown$Markdown$Helpers$indentLength = A2(
	$elm$core$Basics$composeR,
	A2(
		$elm$regex$Regex$replace,
		$pablohirafuji$elm_markdown$Markdown$Helpers$tabRegex,
		function (_v0) {
			return '    ';
		}),
	A2(
		$elm$core$Basics$composeR,
		A2($elm$regex$Regex$findAtMost, 1, $pablohirafuji$elm_markdown$Markdown$Helpers$initSpacesRegex),
		A2(
			$elm$core$Basics$composeR,
			$elm$core$List$head,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Maybe$map(
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.match;
						},
						$elm$core$String$length)),
				$elm$core$Maybe$withDefault(0)))));
var $pablohirafuji$elm_markdown$Markdown$Block$isBlankLineLast = function (items) {
	isBlankLineLast:
	while (true) {
		if (!items.b) {
			return false;
		} else {
			var item = items.a;
			var itemsTail = items.b;
			_v1$3:
			while (true) {
				if (item.b) {
					switch (item.a.$) {
						case 'BlankLine':
							if (!item.b.b) {
								return false;
							} else {
								return true;
							}
						case 'List':
							var _v2 = item.a;
							var items_ = _v2.b;
							var $temp$items = items_;
							items = $temp$items;
							continue isBlankLineLast;
						default:
							break _v1$3;
					}
				} else {
					break _v1$3;
				}
			}
			return false;
		}
	}
};
var $pablohirafuji$elm_markdown$Markdown$Block$parseTextLine = F2(
	function (rawLine, ast) {
		return A2(
			$elm$core$Maybe$withDefault,
			A2(
				$elm$core$List$cons,
				A2(
					$pablohirafuji$elm_markdown$Markdown$Block$Paragraph,
					$pablohirafuji$elm_markdown$Markdown$Block$formatParagraphLine(rawLine),
					_List_Nil),
				ast),
			A2($pablohirafuji$elm_markdown$Markdown$Block$maybeContinueParagraph, rawLine, ast));
	});
var $elm$core$Result$withDefault = F2(
	function (def, result) {
		if (result.$ === 'Ok') {
			var a = result.a;
			return a;
		} else {
			return def;
		}
	});
var $pablohirafuji$elm_markdown$Markdown$Block$checkBlockQuote = function (_v16) {
	var rawLine = _v16.a;
	var ast = _v16.b;
	return A2(
		$elm$core$Result$fromMaybe,
		_Utils_Tuple2(rawLine, ast),
		A2(
			$elm$core$Maybe$map,
			$pablohirafuji$elm_markdown$Markdown$Block$parseBlockQuoteLine(ast),
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.submatches;
					},
					A2(
						$elm$core$Basics$composeR,
						$elm$core$List$head,
						A2(
							$elm$core$Basics$composeR,
							$elm$core$Maybe$withDefault($elm$core$Maybe$Nothing),
							$elm$core$Maybe$withDefault('')))),
				$elm$core$List$head(
					A3($elm$regex$Regex$findAtMost, 1, $pablohirafuji$elm_markdown$Markdown$Block$blockQuoteLineRegex, rawLine)))));
};
var $pablohirafuji$elm_markdown$Markdown$Block$checkListLine = function (_v15) {
	var rawLine = _v15.a;
	var ast = _v15.b;
	return A2(
		$elm$core$Result$mapError,
		function (e) {
			return _Utils_Tuple2(e, ast);
		},
		A2(
			$elm$core$Result$map,
			A2($pablohirafuji$elm_markdown$Markdown$Block$parseListLine, rawLine, ast),
			A2(
				$elm$core$Result$map,
				$pablohirafuji$elm_markdown$Markdown$Block$calcListIndentLength,
				A2(
					$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
					$pablohirafuji$elm_markdown$Markdown$Block$checkUnorderedListLine,
					$pablohirafuji$elm_markdown$Markdown$Block$checkOrderedListLine(rawLine)))));
};
var $pablohirafuji$elm_markdown$Markdown$Block$incorporateLine = F2(
	function (rawLine, ast) {
		_v11$2:
		while (true) {
			if (ast.b) {
				switch (ast.a.$) {
					case 'CodeBlock':
						if ((ast.a.a.$ === 'Fenced') && ast.a.a.a) {
							var _v12 = ast.a;
							var _v13 = _v12.a;
							var fence = _v13.b;
							var code = _v12.b;
							var astTail = ast.b;
							return function (a) {
								return A2($elm$core$List$cons, a, astTail);
							}(
								A3($pablohirafuji$elm_markdown$Markdown$Block$continueOrCloseCodeFence, fence, code, rawLine));
						} else {
							break _v11$2;
						}
					case 'List':
						var _v14 = ast.a;
						var model = _v14.a;
						var items = _v14.b;
						var astTail = ast.b;
						return (_Utils_cmp(
							$pablohirafuji$elm_markdown$Markdown$Helpers$indentLength(rawLine),
							model.indentLength) > -1) ? A5($pablohirafuji$elm_markdown$Markdown$Block$parseIndentedListLine, rawLine, model, items, ast, astTail) : A2(
							$elm$core$Result$withDefault,
							A2($pablohirafuji$elm_markdown$Markdown$Block$parseTextLine, rawLine, ast),
							A2(
								$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
								$pablohirafuji$elm_markdown$Markdown$Block$checkBlockQuote,
								A2(
									$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
									$pablohirafuji$elm_markdown$Markdown$Block$checkATXHeadingLine,
									A2(
										$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
										$pablohirafuji$elm_markdown$Markdown$Block$checkSetextHeadingLine,
										A2(
											$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
											$pablohirafuji$elm_markdown$Markdown$Block$checkOpenCodeFenceLine,
											A2(
												$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
												$pablohirafuji$elm_markdown$Markdown$Block$checkIndentedCode,
												A2(
													$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
													$pablohirafuji$elm_markdown$Markdown$Block$checkBlankLine,
													A2(
														$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
														$pablohirafuji$elm_markdown$Markdown$Block$checkListLine,
														$pablohirafuji$elm_markdown$Markdown$Block$checkThematicBreakLine(
															_Utils_Tuple2(rawLine, ast))))))))));
					default:
						break _v11$2;
				}
			} else {
				break _v11$2;
			}
		}
		return A2($pablohirafuji$elm_markdown$Markdown$Block$parseRawLine, rawLine, ast);
	});
var $pablohirafuji$elm_markdown$Markdown$Block$parseBlockQuoteLine = F2(
	function (ast, rawLine) {
		if (ast.b && (ast.a.$ === 'BlockQuote')) {
			var bqAST = ast.a.a;
			var astTail = ast.b;
			return function (a) {
				return A2($elm$core$List$cons, a, astTail);
			}(
				$pablohirafuji$elm_markdown$Markdown$Block$BlockQuote(
					A2($pablohirafuji$elm_markdown$Markdown$Block$incorporateLine, rawLine, bqAST)));
		} else {
			return function (a) {
				return A2($elm$core$List$cons, a, ast);
			}(
				$pablohirafuji$elm_markdown$Markdown$Block$BlockQuote(
					A2($pablohirafuji$elm_markdown$Markdown$Block$incorporateLine, rawLine, _List_Nil)));
		}
	});
var $pablohirafuji$elm_markdown$Markdown$Block$parseIndentedListLine = F5(
	function (rawLine, model, items, ast, astTail) {
		if (!items.b) {
			return function (a) {
				return A2($elm$core$List$cons, a, astTail);
			}(
				A2(
					$pablohirafuji$elm_markdown$Markdown$Block$List,
					model,
					function (a) {
						return A2($elm$core$List$cons, a, _List_Nil);
					}(
						function (a) {
							return A2($pablohirafuji$elm_markdown$Markdown$Block$incorporateLine, a, _List_Nil);
						}(
							A2($pablohirafuji$elm_markdown$Markdown$Helpers$indentLine, model.indentLength, rawLine)))));
		} else {
			var item = items.a;
			var itemsTail = items.b;
			var indentedRawLine = A2($pablohirafuji$elm_markdown$Markdown$Helpers$indentLine, model.indentLength, rawLine);
			var updateList = function (model_) {
				return function (a) {
					return A2($elm$core$List$cons, a, astTail);
				}(
					A2(
						$pablohirafuji$elm_markdown$Markdown$Block$List,
						model_,
						function (a) {
							return A2($elm$core$List$cons, a, itemsTail);
						}(
							A2($pablohirafuji$elm_markdown$Markdown$Block$incorporateLine, indentedRawLine, item))));
			};
			_v7$3:
			while (true) {
				if (item.b) {
					switch (item.a.$) {
						case 'BlankLine':
							if (!item.b.b) {
								return updateList(model);
							} else {
								var itemTail = item.b;
								return A2(
									$elm$core$List$all,
									function (block) {
										if (block.$ === 'BlankLine') {
											return true;
										} else {
											return false;
										}
									},
									itemTail) ? A2($pablohirafuji$elm_markdown$Markdown$Block$parseRawLine, rawLine, ast) : updateList(
									_Utils_update(
										model,
										{isLoose: true}));
							}
						case 'List':
							var _v9 = item.a;
							var model_ = _v9.a;
							var items_ = _v9.b;
							var itemTail = item.b;
							return (_Utils_cmp(
								$pablohirafuji$elm_markdown$Markdown$Helpers$indentLength(indentedRawLine),
								model_.indentLength) > -1) ? updateList(model) : ($pablohirafuji$elm_markdown$Markdown$Block$isBlankLineLast(items_) ? updateList(
								_Utils_update(
									model,
									{isLoose: true})) : updateList(model));
						default:
							break _v7$3;
					}
				} else {
					break _v7$3;
				}
			}
			return updateList(model);
		}
	});
var $pablohirafuji$elm_markdown$Markdown$Block$parseListLine = F3(
	function (rawLine, ast, _v0) {
		var listBlock = _v0.a;
		var listRawLine = _v0.b;
		var parsedRawLine = A2($pablohirafuji$elm_markdown$Markdown$Block$incorporateLine, listRawLine, _List_Nil);
		var newList = A2(
			$elm$core$List$cons,
			A2(
				$pablohirafuji$elm_markdown$Markdown$Block$List,
				listBlock,
				_List_fromArray(
					[parsedRawLine])),
			ast);
		_v1$2:
		while (true) {
			if (ast.b) {
				switch (ast.a.$) {
					case 'List':
						var _v2 = ast.a;
						var model = _v2.a;
						var items = _v2.b;
						var astTail = ast.b;
						return _Utils_eq(listBlock.delimiter, model.delimiter) ? function (a) {
							return A2($elm$core$List$cons, a, astTail);
						}(
							A2(
								$pablohirafuji$elm_markdown$Markdown$Block$List,
								_Utils_update(
									model,
									{
										indentLength: listBlock.indentLength,
										isLoose: model.isLoose || $pablohirafuji$elm_markdown$Markdown$Block$isBlankLineLast(items)
									}),
								A2($elm$core$List$cons, parsedRawLine, items))) : newList;
					case 'Paragraph':
						var _v3 = ast.a;
						var rawText = _v3.a;
						var inlines = _v3.b;
						var astTail = ast.b;
						if ((parsedRawLine.b && (parsedRawLine.a.$ === 'BlankLine')) && (!parsedRawLine.b.b)) {
							return A2(
								$elm$core$List$cons,
								A2($pablohirafuji$elm_markdown$Markdown$Block$addToParagraph, rawText, rawLine),
								astTail);
						} else {
							var _v5 = listBlock.type_;
							if (_v5.$ === 'Ordered') {
								if (_v5.a === 1) {
									return newList;
								} else {
									var _int = _v5.a;
									return A2(
										$elm$core$List$cons,
										A2($pablohirafuji$elm_markdown$Markdown$Block$addToParagraph, rawText, rawLine),
										astTail);
								}
							} else {
								return newList;
							}
						}
					default:
						break _v1$2;
				}
			} else {
				break _v1$2;
			}
		}
		return newList;
	});
var $pablohirafuji$elm_markdown$Markdown$Block$parseRawLine = F2(
	function (rawLine, ast) {
		return A2(
			$elm$core$Result$withDefault,
			A2($pablohirafuji$elm_markdown$Markdown$Block$parseTextLine, rawLine, ast),
			A2(
				$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
				$pablohirafuji$elm_markdown$Markdown$Block$checkListLine,
				A2(
					$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
					$pablohirafuji$elm_markdown$Markdown$Block$checkThematicBreakLine,
					A2(
						$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
						$pablohirafuji$elm_markdown$Markdown$Block$checkBlockQuote,
						A2(
							$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
							$pablohirafuji$elm_markdown$Markdown$Block$checkATXHeadingLine,
							A2(
								$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
								$pablohirafuji$elm_markdown$Markdown$Block$checkSetextHeadingLine,
								A2(
									$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
									$pablohirafuji$elm_markdown$Markdown$Block$checkOpenCodeFenceLine,
									A2(
										$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
										$pablohirafuji$elm_markdown$Markdown$Block$checkIndentedCode,
										$pablohirafuji$elm_markdown$Markdown$Block$checkBlankLine(
											_Utils_Tuple2(rawLine, ast))))))))));
	});
var $pablohirafuji$elm_markdown$Markdown$Block$incorporateLines = F2(
	function (rawLines, ast) {
		if (!rawLines.b) {
			return ast;
		} else {
			var rawLine = rawLines.a;
			var rawLinesTail = rawLines.b;
			return A2(
				$pablohirafuji$elm_markdown$Markdown$Block$incorporateLines,
				rawLinesTail,
				A2($pablohirafuji$elm_markdown$Markdown$Block$incorporateLine, rawLine, ast));
		}
	});
var $elm$core$String$lines = _String_lines;
var $pablohirafuji$elm_markdown$Markdown$Block$Custom = F2(
	function (a, b) {
		return {$: 'Custom', a: a, b: b};
	});
var $pablohirafuji$elm_markdown$Markdown$Block$PlainInlines = function (a) {
	return {$: 'PlainInlines', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$Config$Sanitize = function (a) {
	return {$: 'Sanitize', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$Config$defaultAllowedHtmlAttributes = _List_fromArray(
	['name', 'class']);
var $pablohirafuji$elm_markdown$Markdown$Config$defaultAllowedHtmlElements = _List_fromArray(
	['address', 'article', 'aside', 'b', 'blockquote', 'br', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'dd', 'details', 'div', 'dl', 'dt', 'figcaption', 'figure', 'footer', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr', 'i', 'legend', 'li', 'menu', 'menuitem', 'nav', 'ol', 'optgroup', 'option', 'p', 'pre', 'section', 'strike', 'summary', 'small', 'table', 'tbody', 'td', 'tfoot', 'th', 'thead', 'tr', 'ul']);
var $pablohirafuji$elm_markdown$Markdown$Config$defaultSanitizeOptions = {allowedHtmlAttributes: $pablohirafuji$elm_markdown$Markdown$Config$defaultAllowedHtmlAttributes, allowedHtmlElements: $pablohirafuji$elm_markdown$Markdown$Config$defaultAllowedHtmlElements};
var $pablohirafuji$elm_markdown$Markdown$Config$defaultOptions = {
	rawHtml: $pablohirafuji$elm_markdown$Markdown$Config$Sanitize($pablohirafuji$elm_markdown$Markdown$Config$defaultSanitizeOptions),
	softAsHardLineBreak: false
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$initParser = F3(
	function (options, refs, rawText) {
		return {matches: _List_Nil, options: options, rawText: rawText, refs: refs, tokens: _List_Nil};
	});
var $pablohirafuji$elm_markdown$Markdown$Inline$CodeInline = function (a) {
	return {$: 'CodeInline', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$Inline$Emphasis = F2(
	function (a, b) {
		return {$: 'Emphasis', a: a, b: b};
	});
var $pablohirafuji$elm_markdown$Markdown$Inline$HardLineBreak = {$: 'HardLineBreak'};
var $pablohirafuji$elm_markdown$Markdown$Inline$HtmlInline = F3(
	function (a, b, c) {
		return {$: 'HtmlInline', a: a, b: b, c: c};
	});
var $pablohirafuji$elm_markdown$Markdown$Inline$Image = F3(
	function (a, b, c) {
		return {$: 'Image', a: a, b: b, c: c};
	});
var $pablohirafuji$elm_markdown$Markdown$Inline$Link = F3(
	function (a, b, c) {
		return {$: 'Link', a: a, b: b, c: c};
	});
var $pablohirafuji$elm_markdown$Markdown$Inline$Text = function (a) {
	return {$: 'Text', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$matchToInline = function (_v0) {
	var match = _v0.a;
	var _v1 = match.type_;
	switch (_v1.$) {
		case 'NormalType':
			return $pablohirafuji$elm_markdown$Markdown$Inline$Text(match.text);
		case 'HardLineBreakType':
			return $pablohirafuji$elm_markdown$Markdown$Inline$HardLineBreak;
		case 'CodeType':
			return $pablohirafuji$elm_markdown$Markdown$Inline$CodeInline(match.text);
		case 'AutolinkType':
			var _v2 = _v1.a;
			var text = _v2.a;
			var url = _v2.b;
			return A3(
				$pablohirafuji$elm_markdown$Markdown$Inline$Link,
				url,
				$elm$core$Maybe$Nothing,
				_List_fromArray(
					[
						$pablohirafuji$elm_markdown$Markdown$Inline$Text(text)
					]));
		case 'LinkType':
			var _v3 = _v1.a;
			var url = _v3.a;
			var maybeTitle = _v3.b;
			return A3(
				$pablohirafuji$elm_markdown$Markdown$Inline$Link,
				url,
				maybeTitle,
				$pablohirafuji$elm_markdown$Markdown$InlineParser$matchesToInlines(match.matches));
		case 'ImageType':
			var _v4 = _v1.a;
			var url = _v4.a;
			var maybeTitle = _v4.b;
			return A3(
				$pablohirafuji$elm_markdown$Markdown$Inline$Image,
				url,
				maybeTitle,
				$pablohirafuji$elm_markdown$Markdown$InlineParser$matchesToInlines(match.matches));
		case 'HtmlType':
			var model = _v1.a;
			return A3(
				$pablohirafuji$elm_markdown$Markdown$Inline$HtmlInline,
				model.tag,
				model.attributes,
				$pablohirafuji$elm_markdown$Markdown$InlineParser$matchesToInlines(match.matches));
		default:
			var length = _v1.a;
			return A2(
				$pablohirafuji$elm_markdown$Markdown$Inline$Emphasis,
				length,
				$pablohirafuji$elm_markdown$Markdown$InlineParser$matchesToInlines(match.matches));
	}
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$matchesToInlines = function (matches) {
	return A2($elm$core$List$map, $pablohirafuji$elm_markdown$Markdown$InlineParser$matchToInline, matches);
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$Match = function (a) {
	return {$: 'Match', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$prepareChildMatch = F2(
	function (parentMatch, childMatch) {
		return $pablohirafuji$elm_markdown$Markdown$InlineParser$Match(
			_Utils_update(
				childMatch,
				{end: childMatch.end - parentMatch.textStart, start: childMatch.start - parentMatch.textStart, textEnd: childMatch.textEnd - parentMatch.textStart, textStart: childMatch.textStart - parentMatch.textStart}));
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$addChild = F2(
	function (parentMatch, childMatch) {
		return $pablohirafuji$elm_markdown$Markdown$InlineParser$Match(
			_Utils_update(
				parentMatch,
				{
					matches: A2(
						$elm$core$List$cons,
						A2($pablohirafuji$elm_markdown$Markdown$InlineParser$prepareChildMatch, parentMatch, childMatch),
						parentMatch.matches)
				}));
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$organizeMatch = F2(
	function (_v0, matches) {
		var match = _v0.a;
		if (!matches.b) {
			return _List_fromArray(
				[
					$pablohirafuji$elm_markdown$Markdown$InlineParser$Match(match)
				]);
		} else {
			var prevMatch = matches.a.a;
			var matchesTail = matches.b;
			return (_Utils_cmp(prevMatch.end, match.start) < 1) ? A2(
				$elm$core$List$cons,
				$pablohirafuji$elm_markdown$Markdown$InlineParser$Match(match),
				matches) : (((_Utils_cmp(prevMatch.start, match.start) < 0) && (_Utils_cmp(prevMatch.end, match.end) > 0)) ? A2(
				$elm$core$List$cons,
				A2($pablohirafuji$elm_markdown$Markdown$InlineParser$addChild, prevMatch, match),
				matchesTail) : matches);
		}
	});
var $elm$core$List$sortBy = _List_sortBy;
function $pablohirafuji$elm_markdown$Markdown$InlineParser$cyclic$organizeMatches() {
	return A2(
		$elm$core$Basics$composeR,
		$elm$core$List$sortBy(
			function (_v0) {
				var match = _v0.a;
				return match.start;
			}),
		A2(
			$elm$core$Basics$composeR,
			A2($elm$core$List$foldl, $pablohirafuji$elm_markdown$Markdown$InlineParser$organizeMatch, _List_Nil),
			$elm$core$List$map(
				function (_v1) {
					var match = _v1.a;
					return $pablohirafuji$elm_markdown$Markdown$InlineParser$Match(
						_Utils_update(
							match,
							{
								matches: $pablohirafuji$elm_markdown$Markdown$InlineParser$cyclic$organizeMatches()(match.matches)
							}));
				})));
}
try {
	var $pablohirafuji$elm_markdown$Markdown$InlineParser$organizeMatches = $pablohirafuji$elm_markdown$Markdown$InlineParser$cyclic$organizeMatches();
	$pablohirafuji$elm_markdown$Markdown$InlineParser$cyclic$organizeMatches = function () {
		return $pablohirafuji$elm_markdown$Markdown$InlineParser$organizeMatches;
	};
} catch ($) {
	throw 'Some top-level definitions from `Markdown.InlineParser` are causing infinite recursion:\n\n  ┌─────┐\n  │    organizeMatches\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $pablohirafuji$elm_markdown$Markdown$InlineParser$organizeParserMatches = function (model) {
	return _Utils_update(
		model,
		{
			matches: $pablohirafuji$elm_markdown$Markdown$InlineParser$organizeMatches(model.matches)
		});
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$NormalType = {$: 'NormalType'};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$normalMatch = function (text) {
	return $pablohirafuji$elm_markdown$Markdown$InlineParser$Match(
		{
			end: 0,
			matches: _List_Nil,
			start: 0,
			text: $pablohirafuji$elm_markdown$Markdown$Helpers$formatStr(text),
			textEnd: 0,
			textStart: 0,
			type_: $pablohirafuji$elm_markdown$Markdown$InlineParser$NormalType
		});
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$parseTextMatch = F3(
	function (rawText, _v2, parsedMatches) {
		var matchModel = _v2.a;
		var updtMatch = $pablohirafuji$elm_markdown$Markdown$InlineParser$Match(
			_Utils_update(
				matchModel,
				{
					matches: A3($pablohirafuji$elm_markdown$Markdown$InlineParser$parseTextMatches, matchModel.text, _List_Nil, matchModel.matches)
				}));
		if (!parsedMatches.b) {
			var finalStr = A2($elm$core$String$dropLeft, matchModel.end, rawText);
			return $elm$core$String$isEmpty(finalStr) ? _List_fromArray(
				[updtMatch]) : _List_fromArray(
				[
					updtMatch,
					$pablohirafuji$elm_markdown$Markdown$InlineParser$normalMatch(finalStr)
				]);
		} else {
			var matchHead = parsedMatches.a.a;
			var matchesTail = parsedMatches.b;
			return _Utils_eq(matchHead.type_, $pablohirafuji$elm_markdown$Markdown$InlineParser$NormalType) ? A2($elm$core$List$cons, updtMatch, parsedMatches) : (_Utils_eq(matchModel.end, matchHead.start) ? A2($elm$core$List$cons, updtMatch, parsedMatches) : ((_Utils_cmp(matchModel.end, matchHead.start) < 0) ? A2(
				$elm$core$List$cons,
				updtMatch,
				A2(
					$elm$core$List$cons,
					$pablohirafuji$elm_markdown$Markdown$InlineParser$normalMatch(
						A3($elm$core$String$slice, matchModel.end, matchHead.start, rawText)),
					parsedMatches)) : parsedMatches));
		}
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$parseTextMatches = F3(
	function (rawText, parsedMatches, matches) {
		parseTextMatches:
		while (true) {
			if (!matches.b) {
				if (!parsedMatches.b) {
					return $elm$core$String$isEmpty(rawText) ? _List_Nil : _List_fromArray(
						[
							$pablohirafuji$elm_markdown$Markdown$InlineParser$normalMatch(rawText)
						]);
				} else {
					var matchModel = parsedMatches.a.a;
					return (matchModel.start > 0) ? A2(
						$elm$core$List$cons,
						$pablohirafuji$elm_markdown$Markdown$InlineParser$normalMatch(
							A2($elm$core$String$left, matchModel.start, rawText)),
						parsedMatches) : parsedMatches;
				}
			} else {
				var match = matches.a;
				var matchesTail = matches.b;
				var $temp$rawText = rawText,
					$temp$parsedMatches = A3($pablohirafuji$elm_markdown$Markdown$InlineParser$parseTextMatch, rawText, match, parsedMatches),
					$temp$matches = matchesTail;
				rawText = $temp$rawText;
				parsedMatches = $temp$parsedMatches;
				matches = $temp$matches;
				continue parseTextMatches;
			}
		}
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$parseText = function (model) {
	return _Utils_update(
		model,
		{
			matches: A3($pablohirafuji$elm_markdown$Markdown$InlineParser$parseTextMatches, model.rawText, _List_Nil, model.matches)
		});
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$angleBracketLTokenRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('(\\\\*)(\\<)'));
var $elm$regex$Regex$find = _Regex_findAtMost(_Regex_infinity);
var $pablohirafuji$elm_markdown$Markdown$InlineParser$CharToken = function (a) {
	return {$: 'CharToken', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$Helpers$isEven = function (_int) {
	return !A2($elm$core$Basics$modBy, 2, _int);
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToAngleBracketLToken = function (regMatch) {
	var _v0 = regMatch.submatches;
	if ((_v0.b && _v0.b.b) && (_v0.b.a.$ === 'Just')) {
		var maybeBackslashes = _v0.a;
		var _v1 = _v0.b;
		var delimiter = _v1.a.a;
		var backslashesLength = A2(
			$elm$core$Maybe$withDefault,
			0,
			A2($elm$core$Maybe$map, $elm$core$String$length, maybeBackslashes));
		return $pablohirafuji$elm_markdown$Markdown$Helpers$isEven(backslashesLength) ? $elm$core$Maybe$Just(
			{
				index: regMatch.index + backslashesLength,
				length: 1,
				meaning: $pablohirafuji$elm_markdown$Markdown$InlineParser$CharToken(
					_Utils_chr('<'))
			}) : $elm$core$Maybe$Nothing;
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$findAngleBracketLTokens = function (str) {
	return A2(
		$elm$core$List$filterMap,
		$pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToAngleBracketLToken,
		A2($elm$regex$Regex$find, $pablohirafuji$elm_markdown$Markdown$InlineParser$angleBracketLTokenRegex, str));
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$angleBracketRTokenRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('(\\\\*)(\\>)'));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$RightAngleBracket = function (a) {
	return {$: 'RightAngleBracket', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToAngleBracketRToken = function (regMatch) {
	var _v0 = regMatch.submatches;
	if ((_v0.b && _v0.b.b) && (_v0.b.a.$ === 'Just')) {
		var maybeBackslashes = _v0.a;
		var _v1 = _v0.b;
		var backslashesLength = A2(
			$elm$core$Maybe$withDefault,
			0,
			A2($elm$core$Maybe$map, $elm$core$String$length, maybeBackslashes));
		return $elm$core$Maybe$Just(
			{
				index: regMatch.index + backslashesLength,
				length: 1,
				meaning: $pablohirafuji$elm_markdown$Markdown$InlineParser$RightAngleBracket(
					!$pablohirafuji$elm_markdown$Markdown$Helpers$isEven(backslashesLength))
			});
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$findAngleBracketRTokens = function (str) {
	return A2(
		$elm$core$List$filterMap,
		$pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToAngleBracketRToken,
		A2($elm$regex$Regex$find, $pablohirafuji$elm_markdown$Markdown$InlineParser$angleBracketRTokenRegex, str));
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$asteriskEmphasisTokenRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('(\\\\*)([^*])?(\\*+)([^*])?'));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$EmphasisToken = F2(
	function (a, b) {
		return {$: 'EmphasisToken', a: a, b: b};
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$punctuationRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('[!-#%-\\*,-/:;\\?@\\[-\\]_\\{\\}]'));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$containPunctuation = $elm$regex$Regex$contains($pablohirafuji$elm_markdown$Markdown$InlineParser$punctuationRegex);
var $pablohirafuji$elm_markdown$Markdown$InlineParser$spaceRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('\\s'));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$containSpace = $elm$regex$Regex$contains($pablohirafuji$elm_markdown$Markdown$InlineParser$spaceRegex);
var $pablohirafuji$elm_markdown$Markdown$InlineParser$charFringeRank = function (_char) {
	var string = $elm$core$String$fromChar(_char);
	return $pablohirafuji$elm_markdown$Markdown$InlineParser$containSpace(string) ? 0 : ($pablohirafuji$elm_markdown$Markdown$InlineParser$containPunctuation(string) ? 1 : 2);
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$maybeCharFringeRank = function (maybeChar) {
	return A2(
		$elm$core$Maybe$withDefault,
		0,
		A2($elm$core$Maybe$map, $pablohirafuji$elm_markdown$Markdown$InlineParser$charFringeRank, maybeChar));
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$getFringeRank = A2(
	$elm$core$Basics$composeR,
	$elm$core$Maybe$map(
		A2(
			$elm$core$Basics$composeR,
			$elm$core$String$uncons,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Maybe$map($elm$core$Tuple$first),
				$pablohirafuji$elm_markdown$Markdown$InlineParser$maybeCharFringeRank))),
	$elm$core$Maybe$withDefault(0));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToEmphasisToken = F3(
	function (_char, rawText, regMatch) {
		var _v0 = regMatch.submatches;
		if ((((_v0.b && _v0.b.b) && _v0.b.b.b) && (_v0.b.b.a.$ === 'Just')) && _v0.b.b.b.b) {
			var maybeBackslashes = _v0.a;
			var _v1 = _v0.b;
			var maybeLeftFringe = _v1.a;
			var _v2 = _v1.b;
			var delimiter = _v2.a.a;
			var _v3 = _v2.b;
			var maybeRightFringe = _v3.a;
			var leftFringeLength = A2(
				$elm$core$Maybe$withDefault,
				0,
				A2($elm$core$Maybe$map, $elm$core$String$length, maybeLeftFringe));
			var mLeftFringe = ((!(!regMatch.index)) && (!leftFringeLength)) ? $elm$core$Maybe$Just(
				A3($elm$core$String$slice, regMatch.index - 1, regMatch.index, rawText)) : maybeLeftFringe;
			var backslashesLength = A2(
				$elm$core$Maybe$withDefault,
				0,
				A2($elm$core$Maybe$map, $elm$core$String$length, maybeBackslashes));
			var isEscaped = ((!$pablohirafuji$elm_markdown$Markdown$Helpers$isEven(backslashesLength)) && (!leftFringeLength)) || _Utils_eq(
				mLeftFringe,
				$elm$core$Maybe$Just('\\'));
			var delimiterLength = isEscaped ? ($elm$core$String$length(delimiter) - 1) : $elm$core$String$length(delimiter);
			var fringeRank = _Utils_Tuple2(
				isEscaped ? 1 : $pablohirafuji$elm_markdown$Markdown$InlineParser$getFringeRank(mLeftFringe),
				$pablohirafuji$elm_markdown$Markdown$InlineParser$getFringeRank(maybeRightFringe));
			var index = ((regMatch.index + backslashesLength) + leftFringeLength) + (isEscaped ? 1 : 0);
			return ((delimiterLength <= 0) || (_Utils_eq(
				_char,
				_Utils_chr('_')) && _Utils_eq(
				fringeRank,
				_Utils_Tuple2(2, 2)))) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
				{
					index: index,
					length: delimiterLength,
					meaning: A2($pablohirafuji$elm_markdown$Markdown$InlineParser$EmphasisToken, _char, fringeRank)
				});
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$findAsteriskEmphasisTokens = function (str) {
	return A2(
		$elm$core$List$filterMap,
		A2(
			$pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToEmphasisToken,
			_Utils_chr('*'),
			str),
		A2($elm$regex$Regex$find, $pablohirafuji$elm_markdown$Markdown$InlineParser$asteriskEmphasisTokenRegex, str));
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$codeTokenRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('(\\\\*)(\\`+)'));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$CodeToken = function (a) {
	return {$: 'CodeToken', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToCodeToken = function (regMatch) {
	var _v0 = regMatch.submatches;
	if ((_v0.b && _v0.b.b) && (_v0.b.a.$ === 'Just')) {
		var maybeBackslashes = _v0.a;
		var _v1 = _v0.b;
		var backtick = _v1.a.a;
		var backslashesLength = A2(
			$elm$core$Maybe$withDefault,
			0,
			A2($elm$core$Maybe$map, $elm$core$String$length, maybeBackslashes));
		return $elm$core$Maybe$Just(
			{
				index: regMatch.index + backslashesLength,
				length: $elm$core$String$length(backtick),
				meaning: $pablohirafuji$elm_markdown$Markdown$InlineParser$CodeToken(
					!$pablohirafuji$elm_markdown$Markdown$Helpers$isEven(backslashesLength))
			});
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$findCodeTokens = function (str) {
	return A2(
		$elm$core$List$filterMap,
		$pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToCodeToken,
		A2($elm$regex$Regex$find, $pablohirafuji$elm_markdown$Markdown$InlineParser$codeTokenRegex, str));
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$hardBreakTokenRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('(?:(\\\\+)|( {2,}))\\n'));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$HardLineBreakToken = {$: 'HardLineBreakToken'};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToHardBreakToken = function (regMatch) {
	var _v0 = regMatch.submatches;
	_v0$2:
	while (true) {
		if (_v0.b) {
			if (_v0.a.$ === 'Just') {
				var backslashes = _v0.a.a;
				var backslashesLength = $elm$core$String$length(backslashes);
				return (!$pablohirafuji$elm_markdown$Markdown$Helpers$isEven(backslashesLength)) ? $elm$core$Maybe$Just(
					{index: (regMatch.index + backslashesLength) - 1, length: 2, meaning: $pablohirafuji$elm_markdown$Markdown$InlineParser$HardLineBreakToken}) : $elm$core$Maybe$Nothing;
			} else {
				if (_v0.b.b && (_v0.b.a.$ === 'Just')) {
					var _v1 = _v0.b;
					return $elm$core$Maybe$Just(
						{
							index: regMatch.index,
							length: $elm$core$String$length(regMatch.match),
							meaning: $pablohirafuji$elm_markdown$Markdown$InlineParser$HardLineBreakToken
						});
				} else {
					break _v0$2;
				}
			}
		} else {
			break _v0$2;
		}
	}
	return $elm$core$Maybe$Nothing;
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToSoftHardBreakToken = function (regMatch) {
	var _v0 = regMatch.submatches;
	_v0$2:
	while (true) {
		if (_v0.b) {
			if (_v0.a.$ === 'Just') {
				var backslashes = _v0.a.a;
				var backslashesLength = $elm$core$String$length(backslashes);
				return $pablohirafuji$elm_markdown$Markdown$Helpers$isEven(backslashesLength) ? $elm$core$Maybe$Just(
					{index: regMatch.index + backslashesLength, length: 1, meaning: $pablohirafuji$elm_markdown$Markdown$InlineParser$HardLineBreakToken}) : $elm$core$Maybe$Just(
					{index: (regMatch.index + backslashesLength) - 1, length: 2, meaning: $pablohirafuji$elm_markdown$Markdown$InlineParser$HardLineBreakToken});
			} else {
				if (_v0.b.b) {
					var _v1 = _v0.b;
					var maybeSpaces = _v1.a;
					return $elm$core$Maybe$Just(
						{
							index: regMatch.index,
							length: $elm$core$String$length(regMatch.match),
							meaning: $pablohirafuji$elm_markdown$Markdown$InlineParser$HardLineBreakToken
						});
				} else {
					break _v0$2;
				}
			}
		} else {
			break _v0$2;
		}
	}
	return $elm$core$Maybe$Nothing;
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$softAsHardLineBreakTokenRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('(?:(\\\\+)|( *))\\n'));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$findHardBreakTokens = F2(
	function (softAsHardLineBreak, str) {
		return softAsHardLineBreak ? A2(
			$elm$core$List$filterMap,
			$pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToSoftHardBreakToken,
			A2($elm$regex$Regex$find, $pablohirafuji$elm_markdown$Markdown$InlineParser$softAsHardLineBreakTokenRegex, str)) : A2(
			$elm$core$List$filterMap,
			$pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToHardBreakToken,
			A2($elm$regex$Regex$find, $pablohirafuji$elm_markdown$Markdown$InlineParser$hardBreakTokenRegex, str));
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$linkImageCloseTokenRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('(\\\\*)(\\])'));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToLinkImageCloseToken = function (regMatch) {
	var _v0 = regMatch.submatches;
	if ((_v0.b && _v0.b.b) && (_v0.b.a.$ === 'Just')) {
		var maybeBackslashes = _v0.a;
		var _v1 = _v0.b;
		var delimiter = _v1.a.a;
		var backslashesLength = A2(
			$elm$core$Maybe$withDefault,
			0,
			A2($elm$core$Maybe$map, $elm$core$String$length, maybeBackslashes));
		return $pablohirafuji$elm_markdown$Markdown$Helpers$isEven(backslashesLength) ? $elm$core$Maybe$Just(
			{
				index: regMatch.index + backslashesLength,
				length: 1,
				meaning: $pablohirafuji$elm_markdown$Markdown$InlineParser$CharToken(
					_Utils_chr(']'))
			}) : $elm$core$Maybe$Nothing;
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$findLinkImageCloseTokens = function (str) {
	return A2(
		$elm$core$List$filterMap,
		$pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToLinkImageCloseToken,
		A2($elm$regex$Regex$find, $pablohirafuji$elm_markdown$Markdown$InlineParser$linkImageCloseTokenRegex, str));
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$linkImageOpenTokenRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('(\\\\*)(\\!)?(\\[)'));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$ImageOpenToken = {$: 'ImageOpenToken'};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$LinkOpenToken = function (a) {
	return {$: 'LinkOpenToken', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToLinkImageOpenToken = function (regMatch) {
	var _v0 = regMatch.submatches;
	if (((_v0.b && _v0.b.b) && _v0.b.b.b) && (_v0.b.b.a.$ === 'Just')) {
		var maybeBackslashes = _v0.a;
		var _v1 = _v0.b;
		var maybeImageOpen = _v1.a;
		var _v2 = _v1.b;
		var delimiter = _v2.a.a;
		var backslashesLength = A2(
			$elm$core$Maybe$withDefault,
			0,
			A2($elm$core$Maybe$map, $elm$core$String$length, maybeBackslashes));
		var isEscaped = !$pablohirafuji$elm_markdown$Markdown$Helpers$isEven(backslashesLength);
		var index = (regMatch.index + backslashesLength) + ((isEscaped && _Utils_eq(
			maybeImageOpen,
			$elm$core$Maybe$Just('!'))) ? 1 : 0);
		var meaning = isEscaped ? A2(
			$elm$core$Maybe$map,
			function (_v3) {
				return $pablohirafuji$elm_markdown$Markdown$InlineParser$LinkOpenToken(true);
			},
			maybeImageOpen) : $elm$core$Maybe$Just(
			A2(
				$elm$core$Maybe$withDefault,
				$pablohirafuji$elm_markdown$Markdown$InlineParser$LinkOpenToken(true),
				A2(
					$elm$core$Maybe$map,
					function (_v4) {
						return $pablohirafuji$elm_markdown$Markdown$InlineParser$ImageOpenToken;
					},
					maybeImageOpen)));
		var length = _Utils_eq(
			meaning,
			$elm$core$Maybe$Just($pablohirafuji$elm_markdown$Markdown$InlineParser$ImageOpenToken)) ? 2 : 1;
		var toModel = function (m) {
			return {index: index, length: length, meaning: m};
		};
		return A2($elm$core$Maybe$map, toModel, meaning);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$findLinkImageOpenTokens = function (str) {
	return A2(
		$elm$core$List$filterMap,
		$pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToLinkImageOpenToken,
		A2($elm$regex$Regex$find, $pablohirafuji$elm_markdown$Markdown$InlineParser$linkImageOpenTokenRegex, str));
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$underlineEmphasisTokenRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('(\\\\*)([^_])?(\\_+)([^_])?'));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$findUnderlineEmphasisTokens = function (str) {
	return A2(
		$elm$core$List$filterMap,
		A2(
			$pablohirafuji$elm_markdown$Markdown$InlineParser$regMatchToEmphasisToken,
			_Utils_chr('_'),
			str),
		A2($elm$regex$Regex$find, $pablohirafuji$elm_markdown$Markdown$InlineParser$underlineEmphasisTokenRegex, str));
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$tokenize = function (model) {
	return _Utils_update(
		model,
		{
			tokens: A2(
				$elm$core$List$sortBy,
				function ($) {
					return $.index;
				},
				_Utils_ap(
					$pablohirafuji$elm_markdown$Markdown$InlineParser$findAngleBracketRTokens(model.rawText),
					_Utils_ap(
						$pablohirafuji$elm_markdown$Markdown$InlineParser$findAngleBracketLTokens(model.rawText),
						_Utils_ap(
							A2($pablohirafuji$elm_markdown$Markdown$InlineParser$findHardBreakTokens, model.options.softAsHardLineBreak, model.rawText),
							_Utils_ap(
								$pablohirafuji$elm_markdown$Markdown$InlineParser$findLinkImageCloseTokens(model.rawText),
								_Utils_ap(
									$pablohirafuji$elm_markdown$Markdown$InlineParser$findLinkImageOpenTokens(model.rawText),
									_Utils_ap(
										$pablohirafuji$elm_markdown$Markdown$InlineParser$findUnderlineEmphasisTokens(model.rawText),
										_Utils_ap(
											$pablohirafuji$elm_markdown$Markdown$InlineParser$findAsteriskEmphasisTokens(model.rawText),
											$pablohirafuji$elm_markdown$Markdown$InlineParser$findCodeTokens(model.rawText)))))))))
		});
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$CodeType = {$: 'CodeType'};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$EmphasisType = function (a) {
	return {$: 'EmphasisType', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$HtmlType = function (a) {
	return {$: 'HtmlType', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$ImageType = function (a) {
	return {$: 'ImageType', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$LinkType = function (a) {
	return {$: 'LinkType', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$addMatch = F2(
	function (model, match) {
		return _Utils_update(
			model,
			{
				matches: A2($elm$core$List$cons, match, model.matches)
			});
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$addToken = F2(
	function (model, token) {
		return _Utils_update(
			model,
			{
				tokens: A2($elm$core$List$cons, token, model.tokens)
			});
	});
var $elm$core$Result$andThen = F2(
	function (callback, result) {
		if (result.$ === 'Ok') {
			var value = result.a;
			return callback(value);
		} else {
			var msg = result.a;
			return $elm$core$Result$Err(msg);
		}
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$applyTTM = F2(
	function (finderFunction, model) {
		return finderFunction(
			_Utils_Tuple2(
				model.tokens,
				_Utils_update(
					model,
					{tokens: _List_Nil})));
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$AutolinkType = function (a) {
	return {$: 'AutolinkType', a: a};
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$decodeUrlRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('%(?:3B|2C|2F|3F|3A|40|26|3D|2B|24|23|25)'));
var $elm$url$Url$percentEncode = _Url_percentEncode;
var $pablohirafuji$elm_markdown$Markdown$InlineParser$encodeUrl = A2(
	$elm$core$Basics$composeR,
	$elm$url$Url$percentEncode,
	A2(
		$elm$regex$Regex$replace,
		$pablohirafuji$elm_markdown$Markdown$InlineParser$decodeUrlRegex,
		function (match) {
			return A2(
				$elm$core$Maybe$withDefault,
				match.match,
				$elm$url$Url$percentDecode(match.match));
		}));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$urlRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^([A-Za-z][A-Za-z0-9.+\\-]{1,31}:[^<>\\x00-\\x20]*)$'));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$autolinkToMatch = function (_v0) {
	var match = _v0.a;
	return A2($elm$regex$Regex$contains, $pablohirafuji$elm_markdown$Markdown$InlineParser$urlRegex, match.text) ? $elm$core$Result$Ok(
		$pablohirafuji$elm_markdown$Markdown$InlineParser$Match(
			_Utils_update(
				match,
				{
					type_: $pablohirafuji$elm_markdown$Markdown$InlineParser$AutolinkType(
						_Utils_Tuple2(
							match.text,
							$pablohirafuji$elm_markdown$Markdown$InlineParser$encodeUrl(match.text)))
				}))) : $elm$core$Result$Err(
		$pablohirafuji$elm_markdown$Markdown$InlineParser$Match(match));
};
var $pablohirafuji$elm_markdown$Markdown$Helpers$whiteSpaceChars = ' \\t\\f\\v\\r\\n';
var $pablohirafuji$elm_markdown$Markdown$InlineParser$hrefRegex = '(?:<([^<>' + ($pablohirafuji$elm_markdown$Markdown$Helpers$whiteSpaceChars + (']*)>|([^' + ($pablohirafuji$elm_markdown$Markdown$Helpers$whiteSpaceChars + ('\\(\\)\\\\]*(?:\\\\.[^' + ($pablohirafuji$elm_markdown$Markdown$Helpers$whiteSpaceChars + '\\(\\)\\\\]*)*))')))));
var $pablohirafuji$elm_markdown$Markdown$Helpers$titleRegex = '(?:[' + ($pablohirafuji$elm_markdown$Markdown$Helpers$whiteSpaceChars + (']+' + ('(?:\'([^\'\\\\]*(?:\\\\.[^\'\\\\]*)*)\'|' + ('\"([^\"\\\\]*(?:\\\\.[^\"\\\\]*)*)\"|' + '\\(([^\\)\\\\]*(?:\\\\.[^\\)\\\\]*)*)\\)))?'))));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$inlineLinkTypeOrImageTypeRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^\\(\\s*' + ($pablohirafuji$elm_markdown$Markdown$InlineParser$hrefRegex + ($pablohirafuji$elm_markdown$Markdown$Helpers$titleRegex + '\\s*\\)'))));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$prepareUrlAndTitle = function (_v0) {
	var rawUrl = _v0.a;
	var maybeTitle = _v0.b;
	return _Utils_Tuple2(
		$pablohirafuji$elm_markdown$Markdown$InlineParser$encodeUrl(
			$pablohirafuji$elm_markdown$Markdown$Helpers$formatStr(rawUrl)),
		A2($elm$core$Maybe$map, $pablohirafuji$elm_markdown$Markdown$Helpers$formatStr, maybeTitle));
};
var $pablohirafuji$elm_markdown$Markdown$Helpers$returnFirstJust = function (maybes) {
	var process = F2(
		function (a, maybeFound) {
			if (maybeFound.$ === 'Just') {
				var found = maybeFound.a;
				return $elm$core$Maybe$Just(found);
			} else {
				return a;
			}
		});
	return A3($elm$core$List$foldl, process, $elm$core$Maybe$Nothing, maybes);
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$inlineLinkTypeOrImageTypeRegexToMatch = F3(
	function (matchModel, model, regexMatch) {
		var _v0 = regexMatch.submatches;
		if ((((_v0.b && _v0.b.b) && _v0.b.b.b) && _v0.b.b.b.b) && _v0.b.b.b.b.b) {
			var maybeRawUrlAngleBrackets = _v0.a;
			var _v1 = _v0.b;
			var maybeRawUrlWithoutBrackets = _v1.a;
			var _v2 = _v1.b;
			var maybeTitleSingleQuotes = _v2.a;
			var _v3 = _v2.b;
			var maybeTitleDoubleQuotes = _v3.a;
			var _v4 = _v3.b;
			var maybeTitleParenthesis = _v4.a;
			var maybeTitle = $pablohirafuji$elm_markdown$Markdown$Helpers$returnFirstJust(
				_List_fromArray(
					[maybeTitleSingleQuotes, maybeTitleDoubleQuotes, maybeTitleParenthesis]));
			var toMatch = function (rawUrl) {
				return $pablohirafuji$elm_markdown$Markdown$InlineParser$Match(
					_Utils_update(
						matchModel,
						{
							end: matchModel.end + $elm$core$String$length(regexMatch.match),
							type_: function () {
								var _v5 = matchModel.type_;
								if (_v5.$ === 'ImageType') {
									return $pablohirafuji$elm_markdown$Markdown$InlineParser$ImageType;
								} else {
									return $pablohirafuji$elm_markdown$Markdown$InlineParser$LinkType;
								}
							}()(
								$pablohirafuji$elm_markdown$Markdown$InlineParser$prepareUrlAndTitle(
									_Utils_Tuple2(rawUrl, maybeTitle)))
						}));
			};
			var maybeRawUrl = $pablohirafuji$elm_markdown$Markdown$Helpers$returnFirstJust(
				_List_fromArray(
					[maybeRawUrlAngleBrackets, maybeRawUrlWithoutBrackets]));
			return $elm$core$Maybe$Just(
				toMatch(
					A2($elm$core$Maybe$withDefault, '', maybeRawUrl)));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$checkForInlineLinkTypeOrImageType = function (_v0) {
	var remainText = _v0.a;
	var tempMatch = _v0.b.a;
	var model = _v0.c;
	return A2(
		$elm$core$Result$fromMaybe,
		_Utils_Tuple3(
			remainText,
			$pablohirafuji$elm_markdown$Markdown$InlineParser$Match(tempMatch),
			model),
		A2(
			$elm$core$Maybe$map,
			$pablohirafuji$elm_markdown$Markdown$InlineParser$addMatch(model),
			A2(
				$elm$core$Maybe$andThen,
				A2($pablohirafuji$elm_markdown$Markdown$InlineParser$inlineLinkTypeOrImageTypeRegexToMatch, tempMatch, model),
				$elm$core$List$head(
					A3($elm$regex$Regex$findAtMost, 1, $pablohirafuji$elm_markdown$Markdown$InlineParser$inlineLinkTypeOrImageTypeRegex, remainText)))));
};
var $pablohirafuji$elm_markdown$Markdown$Helpers$insideSquareBracketRegex = '[^\\[\\]\\\\]*(?:\\\\.[^\\[\\]\\\\]*)*';
var $pablohirafuji$elm_markdown$Markdown$InlineParser$refLabelRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^\\[\\s*(' + ($pablohirafuji$elm_markdown$Markdown$Helpers$insideSquareBracketRegex + ')\\s*\\]')));
var $pablohirafuji$elm_markdown$Markdown$Helpers$whitespacesRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('[' + ($pablohirafuji$elm_markdown$Markdown$Helpers$whiteSpaceChars + ']+')));
var $pablohirafuji$elm_markdown$Markdown$Helpers$cleanWhitespaces = A2(
	$elm$core$Basics$composeR,
	$elm$core$String$trim,
	A2(
		$elm$regex$Regex$replace,
		$pablohirafuji$elm_markdown$Markdown$Helpers$whitespacesRegex,
		function (_v0) {
			return ' ';
		}));
var $pablohirafuji$elm_markdown$Markdown$Helpers$prepareRefLabel = A2($elm$core$Basics$composeR, $pablohirafuji$elm_markdown$Markdown$Helpers$cleanWhitespaces, $elm$core$String$toLower);
var $pablohirafuji$elm_markdown$Markdown$InlineParser$refRegexToMatch = F3(
	function (matchModel, model, maybeRegexMatch) {
		var regexMatchLength = A2(
			$elm$core$Maybe$withDefault,
			0,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.match;
					},
					$elm$core$String$length),
				maybeRegexMatch));
		var toMatch = function (urlTitle) {
			return $pablohirafuji$elm_markdown$Markdown$InlineParser$Match(
				_Utils_update(
					matchModel,
					{
						end: matchModel.end + regexMatchLength,
						type_: function () {
							var _v0 = matchModel.type_;
							if (_v0.$ === 'ImageType') {
								return $pablohirafuji$elm_markdown$Markdown$InlineParser$ImageType;
							} else {
								return $pablohirafuji$elm_markdown$Markdown$InlineParser$LinkType;
							}
						}()(
							$pablohirafuji$elm_markdown$Markdown$InlineParser$prepareUrlAndTitle(urlTitle))
					}));
		};
		var refLabel = function (str) {
			return $elm$core$String$isEmpty(str) ? matchModel.text : str;
		}(
			A2(
				$elm$core$Maybe$withDefault,
				matchModel.text,
				A2(
					$elm$core$Maybe$withDefault,
					$elm$core$Maybe$Nothing,
					A2(
						$elm$core$Maybe$withDefault,
						$elm$core$Maybe$Nothing,
						A2(
							$elm$core$Maybe$map,
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.submatches;
								},
								$elm$core$List$head),
							maybeRegexMatch)))));
		var maybeRefItem = A2(
			$elm$core$Dict$get,
			$pablohirafuji$elm_markdown$Markdown$Helpers$prepareRefLabel(refLabel),
			model.refs);
		return A2($elm$core$Maybe$map, toMatch, maybeRefItem);
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$checkForRefLinkTypeOrImageType = function (_v0) {
	var remainText = _v0.a;
	var tempMatch = _v0.b.a;
	var model = _v0.c;
	return A2(
		$elm$core$Result$fromMaybe,
		_Utils_Tuple3(
			remainText,
			$pablohirafuji$elm_markdown$Markdown$InlineParser$Match(tempMatch),
			model),
		A2(
			$elm$core$Maybe$map,
			$pablohirafuji$elm_markdown$Markdown$InlineParser$addMatch(model),
			A3(
				$pablohirafuji$elm_markdown$Markdown$InlineParser$refRegexToMatch,
				tempMatch,
				model,
				$elm$core$List$head(
					A3($elm$regex$Regex$findAtMost, 1, $pablohirafuji$elm_markdown$Markdown$InlineParser$refLabelRegex, remainText)))));
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$checkParsedAheadOverlapping = function (parser) {
	var _v0 = parser.matches;
	if (!_v0.b) {
		return $elm$core$Result$Err(_Utils_Tuple0);
	} else {
		var match = _v0.a.a;
		var remainMatches = _v0.b;
		var overlappingMatches = A2(
			$elm$core$List$filter,
			function (_v1) {
				var testMatch = _v1.a;
				return (_Utils_cmp(match.end, testMatch.start) > 0) && (_Utils_cmp(match.end, testMatch.end) < 0);
			},
			remainMatches);
		return ($elm$core$List$isEmpty(remainMatches) || $elm$core$List$isEmpty(overlappingMatches)) ? $elm$core$Result$Ok(parser) : $elm$core$Result$Err(_Utils_Tuple0);
	}
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$emailRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^([a-zA-Z0-9.!#$%&\'*+\\/=?^_`{|}~\\-]+@[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?)*)$'));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$emailAutolinkTypeToMatch = function (_v0) {
	var match = _v0.a;
	return A2($elm$regex$Regex$contains, $pablohirafuji$elm_markdown$Markdown$InlineParser$emailRegex, match.text) ? $elm$core$Result$Ok(
		$pablohirafuji$elm_markdown$Markdown$InlineParser$Match(
			_Utils_update(
				match,
				{
					type_: $pablohirafuji$elm_markdown$Markdown$InlineParser$AutolinkType(
						_Utils_Tuple2(
							match.text,
							'mailto:' + $pablohirafuji$elm_markdown$Markdown$InlineParser$encodeUrl(match.text)))
				}))) : $elm$core$Result$Err(
		$pablohirafuji$elm_markdown$Markdown$InlineParser$Match(match));
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$filterTokens = F2(
	function (filter, model) {
		return _Utils_update(
			model,
			{
				tokens: A2($elm$core$List$filter, filter, model.tokens)
			});
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$findToken = F2(
	function (isToken, tokens) {
		var search = F2(
			function (token, _v2) {
				var maybeToken = _v2.a;
				var innerTokens = _v2.b;
				var remainTokens = _v2.c;
				if (maybeToken.$ === 'Nothing') {
					return isToken(token) ? _Utils_Tuple3(
						$elm$core$Maybe$Just(token),
						innerTokens,
						_List_Nil) : _Utils_Tuple3(
						$elm$core$Maybe$Nothing,
						A2($elm$core$List$cons, token, innerTokens),
						_List_Nil);
				} else {
					return _Utils_Tuple3(
						maybeToken,
						innerTokens,
						A2($elm$core$List$cons, token, remainTokens));
				}
			});
		var _return = function (_v0) {
			var maybeToken = _v0.a;
			var innerTokens = _v0.b;
			var remainTokens = _v0.c;
			return A2(
				$elm$core$Maybe$map,
				function (token) {
					return _Utils_Tuple3(
						token,
						$elm$core$List$reverse(innerTokens),
						$elm$core$List$reverse(remainTokens));
				},
				maybeToken);
		};
		return _return(
			A3(
				$elm$core$List$foldl,
				search,
				_Utils_Tuple3($elm$core$Maybe$Nothing, _List_Nil, _List_Nil),
				tokens));
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$HtmlModel = F2(
	function (tag, attributes) {
		return {attributes: attributes, tag: tag};
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$HtmlToken = F2(
	function (a, b) {
		return {$: 'HtmlToken', a: a, b: b};
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$attributesFromRegex = function (regexMatch) {
	var _v0 = regexMatch.submatches;
	_v0$2:
	while (true) {
		if (_v0.b && (_v0.a.$ === 'Just')) {
			if (_v0.a.a === '') {
				return $elm$core$Maybe$Nothing;
			} else {
				if ((_v0.b.b && _v0.b.b.b) && _v0.b.b.b.b) {
					var name = _v0.a.a;
					var _v1 = _v0.b;
					var maybeDoubleQuotes = _v1.a;
					var _v2 = _v1.b;
					var maybeSingleQuotes = _v2.a;
					var _v3 = _v2.b;
					var maybeUnquoted = _v3.a;
					var maybeValue = $pablohirafuji$elm_markdown$Markdown$Helpers$returnFirstJust(
						_List_fromArray(
							[maybeDoubleQuotes, maybeSingleQuotes, maybeUnquoted]));
					return $elm$core$Maybe$Just(
						_Utils_Tuple2(name, maybeValue));
				} else {
					break _v0$2;
				}
			}
		} else {
			break _v0$2;
		}
	}
	return $elm$core$Maybe$Nothing;
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$htmlAttributesRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('([a-zA-Z:_][a-zA-Z0-9\\-_.:]*)(?: ?= ?(?:\"([^\"]*)\"|\'([^\']*)\'|([^\\s\"\'=<>`]*)))?'));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$applyAttributesRegex = A2(
	$elm$core$Basics$composeR,
	$elm$regex$Regex$find($pablohirafuji$elm_markdown$Markdown$InlineParser$htmlAttributesRegex),
	$elm$core$List$filterMap($pablohirafuji$elm_markdown$Markdown$InlineParser$attributesFromRegex));
var $elm$core$List$member = F2(
	function (x, xs) {
		return A2(
			$elm$core$List$any,
			function (a) {
				return _Utils_eq(a, x);
			},
			xs);
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$htmlFromRegex = F3(
	function (model, match, regexMatch) {
		var _v0 = regexMatch.submatches;
		if ((((_v0.b && _v0.b.b) && (_v0.b.a.$ === 'Just')) && _v0.b.b.b) && _v0.b.b.b.b) {
			var maybeClose = _v0.a;
			var _v1 = _v0.b;
			var tag = _v1.a.a;
			var _v2 = _v1.b;
			var maybeAttributes = _v2.a;
			var _v3 = _v2.b;
			var maybeSelfClosing = _v3.a;
			var updateModel = function (attrs) {
				return A2(
					$pablohirafuji$elm_markdown$Markdown$InlineParser$addToken,
					model,
					{
						index: match.start,
						length: match.end - match.start,
						meaning: A2(
							$pablohirafuji$elm_markdown$Markdown$InlineParser$HtmlToken,
							_Utils_eq(maybeClose, $elm$core$Maybe$Nothing) && _Utils_eq(maybeSelfClosing, $elm$core$Maybe$Nothing),
							A2($pablohirafuji$elm_markdown$Markdown$InlineParser$HtmlModel, tag, attrs))
					});
			};
			var filterAttributes = F2(
				function (attrs, allowed) {
					return A2(
						$elm$core$List$filter,
						function (attr) {
							return A2($elm$core$List$member, attr.a, allowed);
						},
						attrs);
				});
			var attributes = A2(
				$elm$core$Maybe$withDefault,
				_List_Nil,
				A2($elm$core$Maybe$map, $pablohirafuji$elm_markdown$Markdown$InlineParser$applyAttributesRegex, maybeAttributes));
			var noAttributesInCloseTag = _Utils_eq(maybeClose, $elm$core$Maybe$Nothing) || ((!_Utils_eq(maybeClose, $elm$core$Maybe$Nothing)) && _Utils_eq(attributes, _List_Nil));
			var _v4 = model.options.rawHtml;
			switch (_v4.$) {
				case 'ParseUnsafe':
					return noAttributesInCloseTag ? $elm$core$Maybe$Just(
						updateModel(attributes)) : $elm$core$Maybe$Nothing;
				case 'Sanitize':
					var allowedHtmlElements = _v4.a.allowedHtmlElements;
					var allowedHtmlAttributes = _v4.a.allowedHtmlAttributes;
					return (A2($elm$core$List$member, tag, allowedHtmlElements) && noAttributesInCloseTag) ? $elm$core$Maybe$Just(
						updateModel(
							A2(filterAttributes, attributes, allowedHtmlAttributes))) : $elm$core$Maybe$Nothing;
				default:
					return $elm$core$Maybe$Nothing;
			}
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$htmlRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^(\\/)?([a-zA-Z][a-zA-Z0-9\\-]*)(?:\\s+([^<>]*?))?(\\/)?$'));
var $pablohirafuji$elm_markdown$Markdown$InlineParser$htmlToToken = F2(
	function (model, _v0) {
		var match = _v0.a;
		var _v1 = model.options.rawHtml;
		if (_v1.$ === 'DontParse') {
			return $elm$core$Maybe$Nothing;
		} else {
			return A2(
				$elm$core$Maybe$andThen,
				A2($pablohirafuji$elm_markdown$Markdown$InlineParser$htmlFromRegex, model, match),
				$elm$core$List$head(
					A3($elm$regex$Regex$findAtMost, 1, $pablohirafuji$elm_markdown$Markdown$InlineParser$htmlRegex, match.text)));
		}
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$isCloseToken = F2(
	function (htmlModel, token) {
		var _v0 = token.meaning;
		if ((_v0.$ === 'HtmlToken') && (!_v0.a)) {
			var htmlModel_ = _v0.b;
			return _Utils_eq(htmlModel.tag, htmlModel_.tag);
		} else {
			return false;
		}
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$isCodeTokenPair = F2(
	function (closeToken, openToken) {
		var _v0 = openToken.meaning;
		if (_v0.$ === 'CodeToken') {
			var isEscaped = _v0.a;
			return isEscaped ? _Utils_eq(openToken.length - 1, closeToken.length) : _Utils_eq(openToken.length, closeToken.length);
		} else {
			return false;
		}
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$isLinkTypeOrImageOpenToken = function (token) {
	var _v0 = token.meaning;
	switch (_v0.$) {
		case 'LinkOpenToken':
			return true;
		case 'ImageOpenToken':
			return true;
		default:
			return false;
	}
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$isOpenEmphasisToken = F2(
	function (closeToken, openToken) {
		var _v0 = openToken.meaning;
		if (_v0.$ === 'EmphasisToken') {
			var openChar = _v0.a;
			var _v1 = _v0.b;
			var openLR = _v1.a;
			var openRR = _v1.b;
			var _v2 = closeToken.meaning;
			if (_v2.$ === 'EmphasisToken') {
				var closeChar = _v2.a;
				var _v3 = _v2.b;
				var closeLR = _v3.a;
				var closeRR = _v3.b;
				return _Utils_eq(openChar, closeChar) ? ((_Utils_eq(openLR, openRR) || _Utils_eq(closeLR, closeRR)) ? (!(!A2($elm$core$Basics$modBy, 3, closeToken.length + openToken.length))) : true) : false;
			} else {
				return false;
			}
		} else {
			return false;
		}
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$voidHtmlTags = _List_fromArray(
	['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr']);
var $pablohirafuji$elm_markdown$Markdown$InlineParser$isVoidTag = function (htmlModel) {
	return A2($elm$core$List$member, htmlModel.tag, $pablohirafuji$elm_markdown$Markdown$InlineParser$voidHtmlTags);
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$HardLineBreakType = {$: 'HardLineBreakType'};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$SoftLineBreakToken = {$: 'SoftLineBreakToken'};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$reverseTokens = function (model) {
	return _Utils_update(
		model,
		{
			tokens: $elm$core$List$reverse(model.tokens)
		});
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$tokenToMatch = F2(
	function (token, type_) {
		return $pablohirafuji$elm_markdown$Markdown$InlineParser$Match(
			{end: token.index + token.length, matches: _List_Nil, start: token.index, text: '', textEnd: 0, textStart: 0, type_: type_});
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$lineBreakTTM = function (_v0) {
	lineBreakTTM:
	while (true) {
		var tokens = _v0.a;
		var model = _v0.b;
		if (!tokens.b) {
			return $pablohirafuji$elm_markdown$Markdown$InlineParser$reverseTokens(model);
		} else {
			var token = tokens.a;
			var tokensTail = tokens.b;
			if (_Utils_eq(token.meaning, $pablohirafuji$elm_markdown$Markdown$InlineParser$HardLineBreakToken) || (_Utils_eq(token.meaning, $pablohirafuji$elm_markdown$Markdown$InlineParser$SoftLineBreakToken) && model.options.softAsHardLineBreak)) {
				return $pablohirafuji$elm_markdown$Markdown$InlineParser$lineBreakTTM(
					function (b) {
						return _Utils_Tuple2(tokensTail, b);
					}(
						_Utils_update(
							model,
							{
								matches: A2(
									$elm$core$List$cons,
									A2($pablohirafuji$elm_markdown$Markdown$InlineParser$tokenToMatch, token, $pablohirafuji$elm_markdown$Markdown$InlineParser$HardLineBreakType),
									model.matches)
							})));
			} else {
				var $temp$_v0 = _Utils_Tuple2(
					tokensTail,
					A2($pablohirafuji$elm_markdown$Markdown$InlineParser$addToken, model, token));
				_v0 = $temp$_v0;
				continue lineBreakTTM;
			}
		}
	}
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$removeParsedAheadTokens = F2(
	function (tokensTail, parser) {
		var _v0 = parser.matches;
		if (!_v0.b) {
			return _Utils_Tuple2(tokensTail, parser);
		} else {
			var match = _v0.a.a;
			return _Utils_Tuple2(
				A2(
					$elm$core$List$filter,
					function (token) {
						return _Utils_cmp(token.index, match.end) > -1;
					},
					tokensTail),
				parser);
		}
	});
var $elm$core$Result$toMaybe = function (result) {
	if (result.$ === 'Ok') {
		var v = result.a;
		return $elm$core$Maybe$Just(v);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$angleBracketsToMatch = F4(
	function (closeToken, isEscaped, model, _v24) {
		var openToken = _v24.a;
		var remainTokens = _v24.c;
		return function (result) {
			if (result.$ === 'Err') {
				var tempMatch = result.a;
				return (!isEscaped) ? A2(
					$pablohirafuji$elm_markdown$Markdown$InlineParser$htmlToToken,
					_Utils_update(
						model,
						{tokens: remainTokens}),
					tempMatch) : $elm$core$Result$toMaybe(result);
			} else {
				return $elm$core$Result$toMaybe(result);
			}
		}(
			A2(
				$elm$core$Result$map,
				function (newMatch) {
					return _Utils_update(
						model,
						{
							matches: A2($elm$core$List$cons, newMatch, model.matches),
							tokens: remainTokens
						});
				},
				A2(
					$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
					$pablohirafuji$elm_markdown$Markdown$InlineParser$emailAutolinkTypeToMatch,
					$pablohirafuji$elm_markdown$Markdown$InlineParser$autolinkToMatch(
						A6(
							$pablohirafuji$elm_markdown$Markdown$InlineParser$tokenPairToMatch,
							model,
							function (s) {
								return s;
							},
							$pablohirafuji$elm_markdown$Markdown$InlineParser$CodeType,
							openToken,
							closeToken,
							_List_Nil)))));
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$codeAutolinkTypeHtmlTagTTM = function (_v21) {
	codeAutolinkTypeHtmlTagTTM:
	while (true) {
		var tokens = _v21.a;
		var model = _v21.b;
		if (!tokens.b) {
			return $pablohirafuji$elm_markdown$Markdown$InlineParser$reverseTokens(model);
		} else {
			var token = tokens.a;
			var tokensTail = tokens.b;
			var _v23 = token.meaning;
			switch (_v23.$) {
				case 'CodeToken':
					var isEscaped = _v23.a;
					return $pablohirafuji$elm_markdown$Markdown$InlineParser$codeAutolinkTypeHtmlTagTTM(
						function (b) {
							return _Utils_Tuple2(tokensTail, b);
						}(
							A2(
								$elm$core$Maybe$withDefault,
								A2($pablohirafuji$elm_markdown$Markdown$InlineParser$addToken, model, token),
								A2(
									$elm$core$Maybe$map,
									A2($pablohirafuji$elm_markdown$Markdown$InlineParser$codeToMatch, token, model),
									A2(
										$pablohirafuji$elm_markdown$Markdown$InlineParser$findToken,
										$pablohirafuji$elm_markdown$Markdown$InlineParser$isCodeTokenPair(token),
										model.tokens)))));
				case 'RightAngleBracket':
					var isEscaped = _v23.a;
					return $pablohirafuji$elm_markdown$Markdown$InlineParser$codeAutolinkTypeHtmlTagTTM(
						function (b) {
							return _Utils_Tuple2(tokensTail, b);
						}(
							A2(
								$pablohirafuji$elm_markdown$Markdown$InlineParser$filterTokens,
								A2(
									$elm$core$Basics$composeR,
									function ($) {
										return $.meaning;
									},
									$elm$core$Basics$neq(
										$pablohirafuji$elm_markdown$Markdown$InlineParser$CharToken(
											_Utils_chr('<')))),
								A2(
									$elm$core$Maybe$withDefault,
									model,
									A2(
										$elm$core$Maybe$andThen,
										A3($pablohirafuji$elm_markdown$Markdown$InlineParser$angleBracketsToMatch, token, isEscaped, model),
										A2(
											$pablohirafuji$elm_markdown$Markdown$InlineParser$findToken,
											A2(
												$elm$core$Basics$composeR,
												function ($) {
													return $.meaning;
												},
												$elm$core$Basics$eq(
													$pablohirafuji$elm_markdown$Markdown$InlineParser$CharToken(
														_Utils_chr('<')))),
											model.tokens))))));
				default:
					var $temp$_v21 = _Utils_Tuple2(
						tokensTail,
						A2($pablohirafuji$elm_markdown$Markdown$InlineParser$addToken, model, token));
					_v21 = $temp$_v21;
					continue codeAutolinkTypeHtmlTagTTM;
			}
		}
	}
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$codeToMatch = F3(
	function (closeToken, model, _v20) {
		var openToken = _v20.a;
		var remainTokens = _v20.c;
		var updtOpenToken = _Utils_eq(
			openToken.meaning,
			$pablohirafuji$elm_markdown$Markdown$InlineParser$CodeToken(true)) ? _Utils_update(
			openToken,
			{index: openToken.index + 1, length: openToken.length - 1}) : openToken;
		return _Utils_update(
			model,
			{
				matches: A2(
					$elm$core$List$cons,
					A6($pablohirafuji$elm_markdown$Markdown$InlineParser$tokenPairToMatch, model, $pablohirafuji$elm_markdown$Markdown$Helpers$cleanWhitespaces, $pablohirafuji$elm_markdown$Markdown$InlineParser$CodeType, updtOpenToken, closeToken, _List_Nil),
					model.matches),
				tokens: remainTokens
			});
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$emphasisTTM = function (_v16) {
	emphasisTTM:
	while (true) {
		var tokens = _v16.a;
		var model = _v16.b;
		if (!tokens.b) {
			return $pablohirafuji$elm_markdown$Markdown$InlineParser$reverseTokens(model);
		} else {
			var token = tokens.a;
			var tokensTail = tokens.b;
			var _v18 = token.meaning;
			if (_v18.$ === 'EmphasisToken') {
				var _char = _v18.a;
				var _v19 = _v18.b;
				var leftRank = _v19.a;
				var rightRank = _v19.b;
				if (_Utils_eq(leftRank, rightRank)) {
					if ((!(!rightRank)) && ((!_Utils_eq(
						_char,
						_Utils_chr('_'))) || (rightRank === 1))) {
						return $pablohirafuji$elm_markdown$Markdown$InlineParser$emphasisTTM(
							A2(
								$elm$core$Maybe$withDefault,
								_Utils_Tuple2(
									tokensTail,
									A2($pablohirafuji$elm_markdown$Markdown$InlineParser$addToken, model, token)),
								A2(
									$elm$core$Maybe$map,
									A3($pablohirafuji$elm_markdown$Markdown$InlineParser$emphasisToMatch, token, tokensTail, model),
									A2(
										$pablohirafuji$elm_markdown$Markdown$InlineParser$findToken,
										$pablohirafuji$elm_markdown$Markdown$InlineParser$isOpenEmphasisToken(token),
										model.tokens))));
					} else {
						var $temp$_v16 = _Utils_Tuple2(tokensTail, model);
						_v16 = $temp$_v16;
						continue emphasisTTM;
					}
				} else {
					if (_Utils_cmp(leftRank, rightRank) < 0) {
						var $temp$_v16 = _Utils_Tuple2(
							tokensTail,
							A2($pablohirafuji$elm_markdown$Markdown$InlineParser$addToken, model, token));
						_v16 = $temp$_v16;
						continue emphasisTTM;
					} else {
						return $pablohirafuji$elm_markdown$Markdown$InlineParser$emphasisTTM(
							A2(
								$elm$core$Maybe$withDefault,
								_Utils_Tuple2(tokensTail, model),
								A2(
									$elm$core$Maybe$map,
									A3($pablohirafuji$elm_markdown$Markdown$InlineParser$emphasisToMatch, token, tokensTail, model),
									A2(
										$pablohirafuji$elm_markdown$Markdown$InlineParser$findToken,
										$pablohirafuji$elm_markdown$Markdown$InlineParser$isOpenEmphasisToken(token),
										model.tokens))));
					}
				}
			} else {
				var $temp$_v16 = _Utils_Tuple2(
					tokensTail,
					A2($pablohirafuji$elm_markdown$Markdown$InlineParser$addToken, model, token));
				_v16 = $temp$_v16;
				continue emphasisTTM;
			}
		}
	}
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$emphasisToMatch = F4(
	function (closeToken, tokensTail, model, _v15) {
		var openToken = _v15.a;
		var innerTokens = _v15.b;
		var remainTokens = _v15.c;
		var remainLength = openToken.length - closeToken.length;
		var updt = (!remainLength) ? {closeToken: closeToken, openToken: openToken, remainTokens: remainTokens, tokensTail: tokensTail} : ((remainLength > 0) ? {
			closeToken: closeToken,
			openToken: _Utils_update(
				openToken,
				{index: openToken.index + remainLength, length: closeToken.length}),
			remainTokens: A2(
				$elm$core$List$cons,
				_Utils_update(
					openToken,
					{length: remainLength}),
				remainTokens),
			tokensTail: tokensTail
		} : {
			closeToken: _Utils_update(
				closeToken,
				{length: openToken.length}),
			openToken: openToken,
			remainTokens: remainTokens,
			tokensTail: A2(
				$elm$core$List$cons,
				_Utils_update(
					closeToken,
					{index: closeToken.index + openToken.length, length: -remainLength}),
				tokensTail)
		});
		var match = A6(
			$pablohirafuji$elm_markdown$Markdown$InlineParser$tokenPairToMatch,
			model,
			function (s) {
				return s;
			},
			$pablohirafuji$elm_markdown$Markdown$InlineParser$EmphasisType(updt.openToken.length),
			updt.openToken,
			updt.closeToken,
			$elm$core$List$reverse(innerTokens));
		return _Utils_Tuple2(
			updt.tokensTail,
			_Utils_update(
				model,
				{
					matches: A2($elm$core$List$cons, match, model.matches),
					tokens: updt.remainTokens
				}));
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$htmlElementTTM = function (_v12) {
	htmlElementTTM:
	while (true) {
		var tokens = _v12.a;
		var model = _v12.b;
		if (!tokens.b) {
			return $pablohirafuji$elm_markdown$Markdown$InlineParser$reverseTokens(model);
		} else {
			var token = tokens.a;
			var tokensTail = tokens.b;
			var _v14 = token.meaning;
			if (_v14.$ === 'HtmlToken') {
				var isOpen = _v14.a;
				var htmlModel = _v14.b;
				return ($pablohirafuji$elm_markdown$Markdown$InlineParser$isVoidTag(htmlModel) || (!isOpen)) ? $pablohirafuji$elm_markdown$Markdown$InlineParser$htmlElementTTM(
					function (b) {
						return _Utils_Tuple2(tokensTail, b);
					}(
						A2(
							$pablohirafuji$elm_markdown$Markdown$InlineParser$addMatch,
							model,
							A2(
								$pablohirafuji$elm_markdown$Markdown$InlineParser$tokenToMatch,
								token,
								$pablohirafuji$elm_markdown$Markdown$InlineParser$HtmlType(htmlModel))))) : $pablohirafuji$elm_markdown$Markdown$InlineParser$htmlElementTTM(
					A2(
						$elm$core$Maybe$withDefault,
						function (b) {
							return _Utils_Tuple2(tokensTail, b);
						}(
							A2(
								$pablohirafuji$elm_markdown$Markdown$InlineParser$addMatch,
								model,
								A2(
									$pablohirafuji$elm_markdown$Markdown$InlineParser$tokenToMatch,
									token,
									$pablohirafuji$elm_markdown$Markdown$InlineParser$HtmlType(htmlModel)))),
						A2(
							$elm$core$Maybe$map,
							A3($pablohirafuji$elm_markdown$Markdown$InlineParser$htmlElementToMatch, token, model, htmlModel),
							A2(
								$pablohirafuji$elm_markdown$Markdown$InlineParser$findToken,
								$pablohirafuji$elm_markdown$Markdown$InlineParser$isCloseToken(htmlModel),
								tokensTail))));
			} else {
				var $temp$_v12 = _Utils_Tuple2(
					tokensTail,
					A2($pablohirafuji$elm_markdown$Markdown$InlineParser$addToken, model, token));
				_v12 = $temp$_v12;
				continue htmlElementTTM;
			}
		}
	}
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$htmlElementToMatch = F4(
	function (openToken, model, htmlModel, _v11) {
		var closeToken = _v11.a;
		var innerTokens = _v11.b;
		var remainTokens = _v11.c;
		return _Utils_Tuple2(
			remainTokens,
			_Utils_update(
				model,
				{
					matches: A2(
						$elm$core$List$cons,
						A6(
							$pablohirafuji$elm_markdown$Markdown$InlineParser$tokenPairToMatch,
							model,
							function (s) {
								return s;
							},
							$pablohirafuji$elm_markdown$Markdown$InlineParser$HtmlType(htmlModel),
							openToken,
							closeToken,
							innerTokens),
						model.matches)
				}));
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$linkImageTypeTTM = function (_v8) {
	linkImageTypeTTM:
	while (true) {
		var tokens = _v8.a;
		var model = _v8.b;
		if (!tokens.b) {
			return $pablohirafuji$elm_markdown$Markdown$InlineParser$reverseTokens(model);
		} else {
			var token = tokens.a;
			var tokensTail = tokens.b;
			var _v10 = token.meaning;
			if ((_v10.$ === 'CharToken') && (']' === _v10.a.valueOf())) {
				return $pablohirafuji$elm_markdown$Markdown$InlineParser$linkImageTypeTTM(
					A2(
						$elm$core$Maybe$withDefault,
						_Utils_Tuple2(tokensTail, model),
						A2(
							$elm$core$Maybe$andThen,
							A3($pablohirafuji$elm_markdown$Markdown$InlineParser$linkOrImageTypeToMatch, token, tokensTail, model),
							A2($pablohirafuji$elm_markdown$Markdown$InlineParser$findToken, $pablohirafuji$elm_markdown$Markdown$InlineParser$isLinkTypeOrImageOpenToken, model.tokens))));
			} else {
				var $temp$_v8 = _Utils_Tuple2(
					tokensTail,
					A2($pablohirafuji$elm_markdown$Markdown$InlineParser$addToken, model, token));
				_v8 = $temp$_v8;
				continue linkImageTypeTTM;
			}
		}
	}
};
var $pablohirafuji$elm_markdown$Markdown$InlineParser$linkOrImageTypeToMatch = F4(
	function (closeToken, tokensTail, model, _v1) {
		var openToken = _v1.a;
		var innerTokens = _v1.b;
		var remainTokens = _v1.c;
		var tempMatch = function (isLinkType) {
			return A6(
				$pablohirafuji$elm_markdown$Markdown$InlineParser$tokenPairToMatch,
				model,
				function (s) {
					return s;
				},
				isLinkType ? $pablohirafuji$elm_markdown$Markdown$InlineParser$LinkType(
					_Utils_Tuple2('', $elm$core$Maybe$Nothing)) : $pablohirafuji$elm_markdown$Markdown$InlineParser$ImageType(
					_Utils_Tuple2('', $elm$core$Maybe$Nothing)),
				openToken,
				closeToken,
				$elm$core$List$reverse(innerTokens));
		};
		var removeOpenToken = _Utils_Tuple2(
			tokensTail,
			_Utils_update(
				model,
				{
					tokens: _Utils_ap(innerTokens, remainTokens)
				}));
		var remainText = A2($elm$core$String$dropLeft, closeToken.index + 1, model.rawText);
		var linkOpenTokenToInactive = function (model_) {
			var process = function (token) {
				var _v7 = token.meaning;
				if (_v7.$ === 'LinkOpenToken') {
					return _Utils_update(
						token,
						{
							meaning: $pablohirafuji$elm_markdown$Markdown$InlineParser$LinkOpenToken(false)
						});
				} else {
					return token;
				}
			};
			return _Utils_update(
				model_,
				{
					tokens: A2($elm$core$List$map, process, model_.tokens)
				});
		};
		var args = function (isLinkType) {
			return _Utils_Tuple3(
				remainText,
				tempMatch(isLinkType),
				_Utils_update(
					model,
					{tokens: remainTokens}));
		};
		var _v2 = openToken.meaning;
		switch (_v2.$) {
			case 'ImageOpenToken':
				return $elm$core$Result$toMaybe(
					A2(
						$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
						function (_v4) {
							return $elm$core$Result$Ok(removeOpenToken);
						},
						A2(
							$elm$core$Result$map,
							$pablohirafuji$elm_markdown$Markdown$InlineParser$removeParsedAheadTokens(tokensTail),
							A2(
								$elm$core$Result$andThen,
								$pablohirafuji$elm_markdown$Markdown$InlineParser$checkParsedAheadOverlapping,
								A2(
									$elm$core$Result$mapError,
									function (_v3) {
										return _Utils_Tuple0;
									},
									A2(
										$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
										$pablohirafuji$elm_markdown$Markdown$InlineParser$checkForRefLinkTypeOrImageType,
										$pablohirafuji$elm_markdown$Markdown$InlineParser$checkForInlineLinkTypeOrImageType(
											args(false))))))));
			case 'LinkOpenToken':
				if (_v2.a) {
					return $elm$core$Result$toMaybe(
						A2(
							$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
							function (_v6) {
								return $elm$core$Result$Ok(removeOpenToken);
							},
							A2(
								$elm$core$Result$map,
								$pablohirafuji$elm_markdown$Markdown$InlineParser$removeParsedAheadTokens(tokensTail),
								A2(
									$elm$core$Result$map,
									linkOpenTokenToInactive,
									A2(
										$elm$core$Result$andThen,
										$pablohirafuji$elm_markdown$Markdown$InlineParser$checkParsedAheadOverlapping,
										A2(
											$elm$core$Result$mapError,
											function (_v5) {
												return _Utils_Tuple0;
											},
											A2(
												$pablohirafuji$elm_markdown$Markdown$Helpers$ifError,
												$pablohirafuji$elm_markdown$Markdown$InlineParser$checkForRefLinkTypeOrImageType,
												$pablohirafuji$elm_markdown$Markdown$InlineParser$checkForInlineLinkTypeOrImageType(
													args(true)))))))));
				} else {
					return $elm$core$Maybe$Just(removeOpenToken);
				}
			default:
				return $elm$core$Maybe$Nothing;
		}
	});
var $pablohirafuji$elm_markdown$Markdown$InlineParser$tokenPairToMatch = F6(
	function (model, processText, type_, openToken, closeToken, innerTokens) {
		var textStart = openToken.index + openToken.length;
		var textEnd = closeToken.index;
		var start = openToken.index;
		var end = closeToken.index + closeToken.length;
		var match = {
			end: end,
			matches: _List_Nil,
			start: start,
			text: processText(
				A3($elm$core$String$slice, textStart, textEnd, model.rawText)),
			textEnd: textEnd,
			textStart: textStart,
			type_: type_
		};
		var matches = A2(
			$elm$core$List$map,
			function (_v0) {
				var matchModel = _v0.a;
				return A2($pablohirafuji$elm_markdown$Markdown$InlineParser$prepareChildMatch, match, matchModel);
			},
			$pablohirafuji$elm_markdown$Markdown$InlineParser$cyclic$tokensToMatches()(
				_Utils_update(
					model,
					{matches: _List_Nil, tokens: innerTokens})).matches);
		return $pablohirafuji$elm_markdown$Markdown$InlineParser$Match(
			_Utils_update(
				match,
				{matches: matches}));
	});
function $pablohirafuji$elm_markdown$Markdown$InlineParser$cyclic$tokensToMatches() {
	return A2(
		$elm$core$Basics$composeR,
		$pablohirafuji$elm_markdown$Markdown$InlineParser$applyTTM($pablohirafuji$elm_markdown$Markdown$InlineParser$codeAutolinkTypeHtmlTagTTM),
		A2(
			$elm$core$Basics$composeR,
			$pablohirafuji$elm_markdown$Markdown$InlineParser$applyTTM($pablohirafuji$elm_markdown$Markdown$InlineParser$htmlElementTTM),
			A2(
				$elm$core$Basics$composeR,
				$pablohirafuji$elm_markdown$Markdown$InlineParser$applyTTM($pablohirafuji$elm_markdown$Markdown$InlineParser$linkImageTypeTTM),
				A2(
					$elm$core$Basics$composeR,
					$pablohirafuji$elm_markdown$Markdown$InlineParser$applyTTM($pablohirafuji$elm_markdown$Markdown$InlineParser$emphasisTTM),
					$pablohirafuji$elm_markdown$Markdown$InlineParser$applyTTM($pablohirafuji$elm_markdown$Markdown$InlineParser$lineBreakTTM)))));
}
try {
	var $pablohirafuji$elm_markdown$Markdown$InlineParser$tokensToMatches = $pablohirafuji$elm_markdown$Markdown$InlineParser$cyclic$tokensToMatches();
	$pablohirafuji$elm_markdown$Markdown$InlineParser$cyclic$tokensToMatches = function () {
		return $pablohirafuji$elm_markdown$Markdown$InlineParser$tokensToMatches;
	};
} catch ($) {
	throw 'Some top-level definitions from `Markdown.InlineParser` are causing infinite recursion:\n\n  ┌─────┐\n  │    angleBracketsToMatch\n  │     ↓\n  │    tokensToMatches\n  │     ↓\n  │    codeAutolinkTypeHtmlTagTTM\n  │     ↓\n  │    codeToMatch\n  │     ↓\n  │    emphasisTTM\n  │     ↓\n  │    emphasisToMatch\n  │     ↓\n  │    htmlElementTTM\n  │     ↓\n  │    htmlElementToMatch\n  │     ↓\n  │    linkImageTypeTTM\n  │     ↓\n  │    linkOrImageTypeToMatch\n  │     ↓\n  │    tokenPairToMatch\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $pablohirafuji$elm_markdown$Markdown$InlineParser$parse = F3(
	function (options, refs, rawText) {
		return $pablohirafuji$elm_markdown$Markdown$InlineParser$matchesToInlines(
			$pablohirafuji$elm_markdown$Markdown$InlineParser$parseText(
				$pablohirafuji$elm_markdown$Markdown$InlineParser$organizeParserMatches(
					$pablohirafuji$elm_markdown$Markdown$InlineParser$tokensToMatches(
						$pablohirafuji$elm_markdown$Markdown$InlineParser$tokenize(
							A3(
								$pablohirafuji$elm_markdown$Markdown$InlineParser$initParser,
								options,
								refs,
								$elm$core$String$trim(rawText)))))).matches);
	});
var $pablohirafuji$elm_markdown$Markdown$Block$parseInline = F4(
	function (maybeOptions, textAsParagraph, refs, block) {
		var options = A2($elm$core$Maybe$withDefault, $pablohirafuji$elm_markdown$Markdown$Config$defaultOptions, maybeOptions);
		switch (block.$) {
			case 'Heading':
				var rawText = block.a;
				var lvl = block.b;
				return A3(
					$pablohirafuji$elm_markdown$Markdown$Block$Heading,
					rawText,
					lvl,
					A3($pablohirafuji$elm_markdown$Markdown$InlineParser$parse, options, refs, rawText));
			case 'Paragraph':
				var rawText = block.a;
				var inlines = A3($pablohirafuji$elm_markdown$Markdown$InlineParser$parse, options, refs, rawText);
				if ((inlines.b && (inlines.a.$ === 'HtmlInline')) && (!inlines.b.b)) {
					var _v3 = inlines.a;
					return $pablohirafuji$elm_markdown$Markdown$Block$PlainInlines(inlines);
				} else {
					return textAsParagraph ? A2($pablohirafuji$elm_markdown$Markdown$Block$Paragraph, rawText, inlines) : $pablohirafuji$elm_markdown$Markdown$Block$PlainInlines(inlines);
				}
			case 'BlockQuote':
				var blocks = block.a;
				return $pablohirafuji$elm_markdown$Markdown$Block$BlockQuote(
					A3(
						$pablohirafuji$elm_markdown$Markdown$Block$parseInlines,
						maybeOptions,
						true,
						_Utils_Tuple2(refs, blocks)));
			case 'List':
				var model = block.a;
				var items = block.b;
				return A2(
					$pablohirafuji$elm_markdown$Markdown$Block$List,
					model,
					function (a) {
						return A2($elm$core$List$map, a, items);
					}(
						A2(
							$elm$core$Basics$composeL,
							A2($pablohirafuji$elm_markdown$Markdown$Block$parseInlines, maybeOptions, model.isLoose),
							function (b) {
								return _Utils_Tuple2(refs, b);
							})));
			case 'Custom':
				var customBlock = block.a;
				var blocks = block.b;
				return A2(
					$pablohirafuji$elm_markdown$Markdown$Block$Custom,
					customBlock,
					A3(
						$pablohirafuji$elm_markdown$Markdown$Block$parseInlines,
						maybeOptions,
						true,
						_Utils_Tuple2(refs, blocks)));
			default:
				return block;
		}
	});
var $pablohirafuji$elm_markdown$Markdown$Block$parseInlines = F3(
	function (maybeOptions, textAsParagraph, _v0) {
		var refs = _v0.a;
		var blocks = _v0.b;
		return A2(
			$elm$core$List$map,
			A3($pablohirafuji$elm_markdown$Markdown$Block$parseInline, maybeOptions, textAsParagraph, refs),
			blocks);
	});
var $elm$core$Tuple$mapSecond = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			x,
			func(y));
	});
var $pablohirafuji$elm_markdown$Markdown$Block$dropRefString = F2(
	function (rawText, inlineMatch) {
		var strippedText = A2($elm$core$String$dropLeft, inlineMatch.matchLength, rawText);
		return A2($elm$regex$Regex$contains, $pablohirafuji$elm_markdown$Markdown$Block$blankLineRegex, strippedText) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(strippedText);
	});
var $elm$core$Dict$member = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$get, key, dict);
		if (_v0.$ === 'Just') {
			return true;
		} else {
			return false;
		}
	});
var $pablohirafuji$elm_markdown$Markdown$Block$insertLinkMatch = F2(
	function (refs, linkMatch) {
		return A2($elm$core$Dict$member, linkMatch.inside, refs) ? refs : A3(
			$elm$core$Dict$insert,
			linkMatch.inside,
			_Utils_Tuple2(linkMatch.url, linkMatch.maybeTitle),
			refs);
	});
var $pablohirafuji$elm_markdown$Markdown$Block$extractUrlTitleRegex = function (regexMatch) {
	var _v0 = regexMatch.submatches;
	if ((((((_v0.b && (_v0.a.$ === 'Just')) && _v0.b.b) && _v0.b.b.b) && _v0.b.b.b.b) && _v0.b.b.b.b.b) && _v0.b.b.b.b.b.b) {
		var rawText = _v0.a.a;
		var _v1 = _v0.b;
		var maybeRawUrlAngleBrackets = _v1.a;
		var _v2 = _v1.b;
		var maybeRawUrlWithoutBrackets = _v2.a;
		var _v3 = _v2.b;
		var maybeTitleSingleQuotes = _v3.a;
		var _v4 = _v3.b;
		var maybeTitleDoubleQuotes = _v4.a;
		var _v5 = _v4.b;
		var maybeTitleParenthesis = _v5.a;
		var toReturn = function (rawUrl) {
			return {
				inside: rawText,
				matchLength: $elm$core$String$length(regexMatch.match),
				maybeTitle: $pablohirafuji$elm_markdown$Markdown$Helpers$returnFirstJust(
					_List_fromArray(
						[maybeTitleSingleQuotes, maybeTitleDoubleQuotes, maybeTitleParenthesis])),
				url: rawUrl
			};
		};
		var maybeRawUrl = $pablohirafuji$elm_markdown$Markdown$Helpers$returnFirstJust(
			_List_fromArray(
				[maybeRawUrlAngleBrackets, maybeRawUrlWithoutBrackets]));
		return A2($elm$core$Maybe$map, toReturn, maybeRawUrl);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $pablohirafuji$elm_markdown$Markdown$Block$hrefRegex = '\\s*(?:<([^<>\\s]*)>|([^\\s]*))';
var $pablohirafuji$elm_markdown$Markdown$Block$refRegex = A2(
	$elm$core$Maybe$withDefault,
	$elm$regex$Regex$never,
	$elm$regex$Regex$fromString('^\\s*\\[(' + ($pablohirafuji$elm_markdown$Markdown$Helpers$insideSquareBracketRegex + (')\\]:' + ($pablohirafuji$elm_markdown$Markdown$Block$hrefRegex + ($pablohirafuji$elm_markdown$Markdown$Helpers$titleRegex + '\\s*(?![^\\n])'))))));
var $pablohirafuji$elm_markdown$Markdown$Block$maybeLinkMatch = function (rawText) {
	return A2(
		$elm$core$Maybe$andThen,
		function (linkMatch) {
			return ((linkMatch.url === '') || (linkMatch.inside === '')) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(linkMatch);
		},
		A2(
			$elm$core$Maybe$map,
			function (linkMatch) {
				return _Utils_update(
					linkMatch,
					{
						inside: $pablohirafuji$elm_markdown$Markdown$Helpers$prepareRefLabel(linkMatch.inside)
					});
			},
			A2(
				$elm$core$Maybe$andThen,
				$pablohirafuji$elm_markdown$Markdown$Block$extractUrlTitleRegex,
				$elm$core$List$head(
					A3($elm$regex$Regex$findAtMost, 1, $pablohirafuji$elm_markdown$Markdown$Block$refRegex, rawText)))));
};
var $pablohirafuji$elm_markdown$Markdown$Block$parseReference = F2(
	function (refs, rawText) {
		parseReference:
		while (true) {
			var _v0 = $pablohirafuji$elm_markdown$Markdown$Block$maybeLinkMatch(rawText);
			if (_v0.$ === 'Just') {
				var linkMatch = _v0.a;
				var updtRefs = A2($pablohirafuji$elm_markdown$Markdown$Block$insertLinkMatch, refs, linkMatch);
				var maybeStrippedText = A2($pablohirafuji$elm_markdown$Markdown$Block$dropRefString, rawText, linkMatch);
				if (maybeStrippedText.$ === 'Just') {
					var strippedText = maybeStrippedText.a;
					var $temp$refs = updtRefs,
						$temp$rawText = strippedText;
					refs = $temp$refs;
					rawText = $temp$rawText;
					continue parseReference;
				} else {
					return _Utils_Tuple2(updtRefs, $elm$core$Maybe$Nothing);
				}
			} else {
				return _Utils_Tuple2(
					refs,
					$elm$core$Maybe$Just(rawText));
			}
		}
	});
var $elm$core$Dict$union = F2(
	function (t1, t2) {
		return A3($elm$core$Dict$foldl, $elm$core$Dict$insert, t2, t1);
	});
var $pablohirafuji$elm_markdown$Markdown$Block$parseReferences = function (refs) {
	return A2(
		$elm$core$List$foldl,
		$pablohirafuji$elm_markdown$Markdown$Block$parseReferencesHelp,
		_Utils_Tuple2(refs, _List_Nil));
};
var $pablohirafuji$elm_markdown$Markdown$Block$parseReferencesHelp = F2(
	function (block, _v0) {
		var refs = _v0.a;
		var parsedAST = _v0.b;
		switch (block.$) {
			case 'Paragraph':
				var rawText = block.a;
				var _v2 = A2($pablohirafuji$elm_markdown$Markdown$Block$parseReference, $elm$core$Dict$empty, rawText);
				var paragraphRefs = _v2.a;
				var maybeUpdtText = _v2.b;
				var updtRefs = A2($elm$core$Dict$union, paragraphRefs, refs);
				if (maybeUpdtText.$ === 'Just') {
					var updtText = maybeUpdtText.a;
					return _Utils_Tuple2(
						updtRefs,
						A2(
							$elm$core$List$cons,
							A2($pablohirafuji$elm_markdown$Markdown$Block$Paragraph, updtText, _List_Nil),
							parsedAST));
				} else {
					return _Utils_Tuple2(updtRefs, parsedAST);
				}
			case 'List':
				var model = block.a;
				var items = block.b;
				var _v4 = A3(
					$elm$core$List$foldl,
					F2(
						function (item, _v5) {
							var refs__ = _v5.a;
							var parsedItems = _v5.b;
							return A2(
								$elm$core$Tuple$mapSecond,
								function (a) {
									return A2($elm$core$List$cons, a, parsedItems);
								},
								A2($pablohirafuji$elm_markdown$Markdown$Block$parseReferences, refs__, item));
						}),
					_Utils_Tuple2(refs, _List_Nil),
					items);
				var updtRefs = _v4.a;
				var updtItems = _v4.b;
				return _Utils_Tuple2(
					updtRefs,
					A2(
						$elm$core$List$cons,
						A2($pablohirafuji$elm_markdown$Markdown$Block$List, model, updtItems),
						parsedAST));
			case 'BlockQuote':
				var blocks = block.a;
				return A2(
					$elm$core$Tuple$mapSecond,
					function (a) {
						return A2($elm$core$List$cons, a, parsedAST);
					},
					A2(
						$elm$core$Tuple$mapSecond,
						$pablohirafuji$elm_markdown$Markdown$Block$BlockQuote,
						A2($pablohirafuji$elm_markdown$Markdown$Block$parseReferences, refs, blocks)));
			case 'Custom':
				var customBlock = block.a;
				var blocks = block.b;
				return A2(
					$elm$core$Tuple$mapSecond,
					function (a) {
						return A2($elm$core$List$cons, a, parsedAST);
					},
					A2(
						$elm$core$Tuple$mapSecond,
						$pablohirafuji$elm_markdown$Markdown$Block$Custom(customBlock),
						A2($pablohirafuji$elm_markdown$Markdown$Block$parseReferences, refs, blocks)));
			default:
				return _Utils_Tuple2(
					refs,
					A2($elm$core$List$cons, block, parsedAST));
		}
	});
var $pablohirafuji$elm_markdown$Markdown$Block$parse = function (maybeOptions) {
	return A2(
		$elm$core$Basics$composeR,
		$elm$core$String$lines,
		A2(
			$elm$core$Basics$composeR,
			function (a) {
				return A2($pablohirafuji$elm_markdown$Markdown$Block$incorporateLines, a, _List_Nil);
			},
			A2(
				$elm$core$Basics$composeR,
				$pablohirafuji$elm_markdown$Markdown$Block$parseReferences($elm$core$Dict$empty),
				A2($pablohirafuji$elm_markdown$Markdown$Block$parseInlines, maybeOptions, true))));
};
var $elm$html$Html$a = _VirtualDom_node('a');
var $elm$html$Html$Attributes$stringProperty = F2(
	function (key, string) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$string(string));
	});
var $elm$html$Html$Attributes$alt = $elm$html$Html$Attributes$stringProperty('alt');
var $elm$html$Html$Attributes$attribute = $elm$virtual_dom$VirtualDom$attribute;
var $pablohirafuji$elm_markdown$Markdown$Inline$attributeToAttribute = function (_v0) {
	var name = _v0.a;
	var maybeValue = _v0.b;
	return A2(
		$elm$html$Html$Attributes$attribute,
		name,
		A2($elm$core$Maybe$withDefault, name, maybeValue));
};
var $pablohirafuji$elm_markdown$Markdown$Inline$attributesToHtmlAttributes = $elm$core$List$map($pablohirafuji$elm_markdown$Markdown$Inline$attributeToAttribute);
var $elm$html$Html$br = _VirtualDom_node('br');
var $elm$html$Html$code = _VirtualDom_node('code');
var $elm$html$Html$em = _VirtualDom_node('em');
var $pablohirafuji$elm_markdown$Markdown$Inline$extractText = function (inlines) {
	return A3($elm$core$List$foldl, $pablohirafuji$elm_markdown$Markdown$Inline$extractTextHelp, '', inlines);
};
var $pablohirafuji$elm_markdown$Markdown$Inline$extractTextHelp = F2(
	function (inline, text) {
		switch (inline.$) {
			case 'Text':
				var str = inline.a;
				return _Utils_ap(text, str);
			case 'HardLineBreak':
				return text + ' ';
			case 'CodeInline':
				var str = inline.a;
				return _Utils_ap(text, str);
			case 'Link':
				var inlines = inline.c;
				return _Utils_ap(
					text,
					$pablohirafuji$elm_markdown$Markdown$Inline$extractText(inlines));
			case 'Image':
				var inlines = inline.c;
				return _Utils_ap(
					text,
					$pablohirafuji$elm_markdown$Markdown$Inline$extractText(inlines));
			case 'HtmlInline':
				var inlines = inline.c;
				return _Utils_ap(
					text,
					$pablohirafuji$elm_markdown$Markdown$Inline$extractText(inlines));
			case 'Emphasis':
				var inlines = inline.b;
				return _Utils_ap(
					text,
					$pablohirafuji$elm_markdown$Markdown$Inline$extractText(inlines));
			default:
				var inlines = inline.b;
				return _Utils_ap(
					text,
					$pablohirafuji$elm_markdown$Markdown$Inline$extractText(inlines));
		}
	});
var $elm$html$Html$Attributes$href = function (url) {
	return A2(
		$elm$html$Html$Attributes$stringProperty,
		'href',
		_VirtualDom_noJavaScriptUri(url));
};
var $elm$html$Html$img = _VirtualDom_node('img');
var $elm$html$Html$node = $elm$virtual_dom$VirtualDom$node;
var $elm$html$Html$Attributes$src = function (url) {
	return A2(
		$elm$html$Html$Attributes$stringProperty,
		'src',
		_VirtualDom_noJavaScriptOrHtmlUri(url));
};
var $elm$html$Html$strong = _VirtualDom_node('strong');
var $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;
var $elm$html$Html$Attributes$title = $elm$html$Html$Attributes$stringProperty('title');
var $pablohirafuji$elm_markdown$Markdown$Inline$defaultHtml = F2(
	function (customTransformer, inline) {
		var transformer = A2(
			$elm$core$Maybe$withDefault,
			$pablohirafuji$elm_markdown$Markdown$Inline$defaultHtml($elm$core$Maybe$Nothing),
			customTransformer);
		switch (inline.$) {
			case 'Text':
				var str = inline.a;
				return $elm$html$Html$text(str);
			case 'HardLineBreak':
				return A2($elm$html$Html$br, _List_Nil, _List_Nil);
			case 'CodeInline':
				var codeStr = inline.a;
				return A2(
					$elm$html$Html$code,
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text(codeStr)
						]));
			case 'Link':
				var url = inline.a;
				var maybeTitle = inline.b;
				var inlines = inline.c;
				if (maybeTitle.$ === 'Just') {
					var title_ = maybeTitle.a;
					return A2(
						$elm$html$Html$a,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$href(url),
								$elm$html$Html$Attributes$title(title_)
							]),
						A2($elm$core$List$map, transformer, inlines));
				} else {
					return A2(
						$elm$html$Html$a,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$href(url)
							]),
						A2($elm$core$List$map, transformer, inlines));
				}
			case 'Image':
				var url = inline.a;
				var maybeTitle = inline.b;
				var inlines = inline.c;
				if (maybeTitle.$ === 'Just') {
					var title_ = maybeTitle.a;
					return A2(
						$elm$html$Html$img,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$alt(
								$pablohirafuji$elm_markdown$Markdown$Inline$extractText(inlines)),
								$elm$html$Html$Attributes$src(url),
								$elm$html$Html$Attributes$title(title_)
							]),
						_List_Nil);
				} else {
					return A2(
						$elm$html$Html$img,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$alt(
								$pablohirafuji$elm_markdown$Markdown$Inline$extractText(inlines)),
								$elm$html$Html$Attributes$src(url)
							]),
						_List_Nil);
				}
			case 'HtmlInline':
				var tag = inline.a;
				var attrs = inline.b;
				var inlines = inline.c;
				return A3(
					$elm$html$Html$node,
					tag,
					$pablohirafuji$elm_markdown$Markdown$Inline$attributesToHtmlAttributes(attrs),
					A2($elm$core$List$map, transformer, inlines));
			case 'Emphasis':
				var length = inline.a;
				var inlines = inline.b;
				switch (length) {
					case 1:
						return A2(
							$elm$html$Html$em,
							_List_Nil,
							A2($elm$core$List$map, transformer, inlines));
					case 2:
						return A2(
							$elm$html$Html$strong,
							_List_Nil,
							A2($elm$core$List$map, transformer, inlines));
					default:
						return ((length - 2) > 0) ? A2(
							$elm$html$Html$strong,
							_List_Nil,
							function (a) {
								return A2($elm$core$List$cons, a, _List_Nil);
							}(
								transformer(
									A2($pablohirafuji$elm_markdown$Markdown$Inline$Emphasis, length - 2, inlines)))) : A2(
							$elm$html$Html$em,
							_List_Nil,
							A2($elm$core$List$map, transformer, inlines));
				}
			default:
				var inlines = inline.b;
				return $elm$html$Html$text('');
		}
	});
var $pablohirafuji$elm_markdown$Markdown$Inline$toHtml = $pablohirafuji$elm_markdown$Markdown$Inline$defaultHtml($elm$core$Maybe$Nothing);
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$renderMarkdown = function (markdown) {
	var _v0 = A2($pablohirafuji$elm_markdown$Markdown$Block$parse, $elm$core$Maybe$Nothing, markdown);
	if ((_v0.b && (_v0.a.$ === 'Paragraph')) && (!_v0.b.b)) {
		var _v1 = _v0.a;
		var inlines = _v1.b;
		return A2(
			$elm$core$List$map,
			A2($elm$core$Basics$composeR, $pablohirafuji$elm_markdown$Markdown$Inline$toHtml, $rtfeldman$elm_css$Html$Styled$fromUnstyled),
			inlines);
	} else {
		return _List_fromArray(
			[
				$tesk9$accessible_html_with_css$Accessibility$Styled$text(markdown)
			]);
	}
};
var $rtfeldman$elm_css$Html$Styled$span = $rtfeldman$elm_css$Html$Styled$node('span');
var $tesk9$accessible_html_with_css$Accessibility$Styled$span = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$span(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$viewLabel = F3(
	function (size, maybeSvg, label_) {
		var _v0 = $NoRedInk$noredink_ui$Nri$Ui$Button$V10$sizeConfig(size);
		var fontAndIconSize = _v0.fontAndIconSize;
		return A5(
			$NoRedInk$noredink_ui$Nri$Ui$styled,
			$tesk9$accessible_html_with_css$Accessibility$Styled$span,
			'button-label-span',
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$overflow($rtfeldman$elm_css$Css$hidden),
					$rtfeldman$elm_css$Css$overflowWrap($rtfeldman$elm_css$Css$breakWord),
					A2(
					$rtfeldman$elm_css$Css$padding2,
					$rtfeldman$elm_css$Css$px(2),
					$rtfeldman$elm_css$Css$zero),
					$rtfeldman$elm_css$Css$displayFlex,
					$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center)
				]),
			_List_Nil,
			function () {
				if (maybeSvg.$ === 'Nothing') {
					return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$renderMarkdown(label_);
				} else {
					var svg = maybeSvg.a;
					return A2(
						$elm$core$List$cons,
						$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
							A2(
								$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$flexShrink($rtfeldman$elm_css$Css$zero),
										$rtfeldman$elm_css$Css$marginRight(
										$rtfeldman$elm_css$Css$px(5))
									]),
								A2(
									$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight,
									fontAndIconSize,
									A2($NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth, fontAndIconSize, svg)))),
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$renderMarkdown(label_));
				}
			}());
	});
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$renderButton = function (button_) {
	var config = button_.a;
	var isDisabled = function () {
		var _v0 = config.state;
		switch (_v0.$) {
			case 'Enabled':
				return false;
			case 'Disabled':
				return true;
			case 'Error':
				return true;
			case 'Unfulfilled':
				return false;
			case 'Loading':
				return true;
			default:
				return true;
		}
	}();
	var buttonStyle_ = $NoRedInk$noredink_ui$Nri$Ui$Button$V10$getColorPalette(button_);
	return A5(
		$NoRedInk$noredink_ui$Nri$Ui$styled,
		$tesk9$accessible_html_with_css$Accessibility$Styled$button,
		$NoRedInk$noredink_ui$Nri$Ui$Button$V10$styledName('customButton'),
		_List_fromArray(
			[
				A4($NoRedInk$noredink_ui$Nri$Ui$Button$V10$buttonStyles, config.size, config.width, buttonStyle_, config.customStyles)
			]),
		_Utils_ap(
			$NoRedInk$noredink_ui$ClickableAttributes$toButtonAttributes(config.clickableAttributes),
			A2(
				$elm$core$List$cons,
				$rtfeldman$elm_css$Html$Styled$Attributes$disabled(isDisabled),
				A2(
					$elm$core$List$cons,
					$rtfeldman$elm_css$Html$Styled$Attributes$type_('button'),
					config.customAttributes))),
		_List_fromArray(
			[
				A3($NoRedInk$noredink_ui$Nri$Ui$Button$V10$viewLabel, config.size, config.icon, config.label)
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$button = F2(
	function (name, attributes) {
		return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$renderButton(
			A3(
				$elm$core$List$foldl,
				F2(
					function (_v0, b) {
						var attribute = _v0.a;
						return attribute(b);
					}),
				$NoRedInk$noredink_ui$Nri$Ui$Button$V10$build,
				A2(
					$elm$core$List$cons,
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$label(name),
					attributes)));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$css = function (styles) {
	return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$set(
		function (config) {
			return _Utils_update(
				config,
				{
					customStyles: A2($elm$core$List$append, config.customStyles, styles)
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Container$V2$Attribute = function (a) {
	return {$: 'Attribute', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Container$V2$css = function (css_) {
	return $NoRedInk$noredink_ui$Nri$Ui$Container$V2$Attribute(
		function (config) {
			return _Utils_update(
				config,
				{
					css: _Utils_ap(config.css, css_)
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$Css = function (a) {
	return {$: 'Css', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$css = $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$Css;
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$Attribute = F2(
	function (a, b) {
		return {$: 'Attribute', a: a, b: b};
	});
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$emptyEventsAndValues = {currentValue: $elm$core$Maybe$Nothing, floatingContent: $elm$core$Maybe$Nothing, fromString: $elm$core$Maybe$Nothing, onBlur: $elm$core$Maybe$Nothing, onEnter: $elm$core$Maybe$Nothing, onFocus: $elm$core$Maybe$Nothing, onInput: $elm$core$Maybe$Nothing, toString: $elm$core$Maybe$Nothing};
var $rtfeldman$elm_css$Css$absolute = {position: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'absolute'};
var $rtfeldman$elm_css$Css$padding = $rtfeldman$elm_css$Css$prop1('padding');
var $rtfeldman$elm_css$Css$textBottom = $rtfeldman$elm_css$Css$prop1('text-bottom');
var $rtfeldman$elm_css$Css$transparent = {color: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'transparent'};
var $rtfeldman$elm_css$Css$verticalAlign = function (fn) {
	return A3(
		$rtfeldman$elm_css$Css$Internal$getOverloadedProperty,
		'verticalAlign',
		'vertical-align',
		fn($rtfeldman$elm_css$Css$Internal$lengthForOverloadedProperty));
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$clickableTextStyles = _List_fromArray(
	[
		$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer),
		$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont,
		$rtfeldman$elm_css$Css$backgroundImage($rtfeldman$elm_css$Css$none),
		$rtfeldman$elm_css$Css$textShadow($rtfeldman$elm_css$Css$none),
		$rtfeldman$elm_css$Css$boxShadow($rtfeldman$elm_css$Css$none),
		$rtfeldman$elm_css$Css$border($rtfeldman$elm_css$Css$zero),
		$rtfeldman$elm_css$Css$disabled(
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$notAllowed)
			])),
		$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure),
		$rtfeldman$elm_css$Css$hover(
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azureDark)
			])),
		$rtfeldman$elm_css$Css$backgroundColor($rtfeldman$elm_css$Css$transparent),
		$rtfeldman$elm_css$Css$fontWeight(
		$rtfeldman$elm_css$Css$int(600)),
		$rtfeldman$elm_css$Css$textAlign($rtfeldman$elm_css$Css$left),
		$rtfeldman$elm_css$Css$borderStyle($rtfeldman$elm_css$Css$none),
		$rtfeldman$elm_css$Css$textDecoration($rtfeldman$elm_css$Css$none),
		$rtfeldman$elm_css$Css$padding($rtfeldman$elm_css$Css$zero),
		$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineBlock),
		$rtfeldman$elm_css$Css$verticalAlign($rtfeldman$elm_css$Css$textBottom),
		$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$zero)
	]);
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$dataDescriptor = function (descriptor) {
	return 'clickable-text-v2-' + descriptor;
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$Medium = {$: 'Medium'};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$defaults = {clickableAttributes: $NoRedInk$noredink_ui$ClickableAttributes$init, customAttributes: _List_Nil, customStyles: _List_Nil, icon: $elm$core$Maybe$Nothing, label: '', size: $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$Medium};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$Attribute = function (a) {
	return {$: 'Attribute', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$set = function (_with) {
	return $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$Attribute(
		function (config) {
			return _with(config);
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$label = function (label_) {
	return $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$set(
		function (attributes) {
			return _Utils_update(
				attributes,
				{label: label_});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$nriDescription = function (description) {
	return A2($rtfeldman$elm_css$Html$Styled$Attributes$attribute, 'data-nri-description', description);
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$sizeToPx = function (size) {
	switch (size.$) {
		case 'Small':
			return $rtfeldman$elm_css$Css$px(15);
		case 'Medium':
			return $rtfeldman$elm_css$Css$px(17);
		default:
			return $rtfeldman$elm_css$Css$px(20);
	}
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$viewContent = function (config) {
	var fontSize = $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$sizeToPx(config.size);
	return A2(
		$rtfeldman$elm_css$Html$Styled$span,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$css(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$fontSize(fontSize)
					]))
			]),
		function () {
			var _v0 = config.icon;
			if (_v0.$ === 'Just') {
				var icon_ = _v0.a;
				return _List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Html$Styled$div,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$Attributes$css(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$displayFlex,
										$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
										A2($rtfeldman$elm_css$Css$property, 'line-height', 'normal')
									]))
							]),
						_List_fromArray(
							[
								$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
								A2(
									$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
									_List_fromArray(
										[
											function () {
											var _v1 = config.size;
											switch (_v1.$) {
												case 'Small':
													return $rtfeldman$elm_css$Css$marginRight(
														$rtfeldman$elm_css$Css$px(3));
												case 'Medium':
													return $rtfeldman$elm_css$Css$marginRight(
														$rtfeldman$elm_css$Css$px(3));
												default:
													return $rtfeldman$elm_css$Css$marginRight(
														$rtfeldman$elm_css$Css$px(4));
											}
										}()
										]),
									A2(
										$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight,
										fontSize,
										A2($NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth, fontSize, icon_)))),
								A2(
								$rtfeldman$elm_css$Html$Styled$span,
								_List_fromArray(
									[
										$NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$nriDescription('clickable-text-label')
									]),
								_List_fromArray(
									[
										$rtfeldman$elm_css$Html$Styled$text(config.label)
									]))
							]))
					]);
			} else {
				return _List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$text(config.label)
					]);
			}
		}());
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$button = F2(
	function (label_, attributes) {
		var config = A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, b) {
					var attribute = _v0.a;
					return attribute(b);
				}),
			$NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$defaults,
			A2(
				$elm$core$List$cons,
				$NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$label(label_),
				attributes));
		return A5(
			$NoRedInk$noredink_ui$Nri$Ui$styled,
			$rtfeldman$elm_css$Html$Styled$button,
			$NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$dataDescriptor('button'),
			_Utils_ap($NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$clickableTextStyles, config.customStyles),
			_Utils_ap(
				$NoRedInk$noredink_ui$ClickableAttributes$toButtonAttributes(config.clickableAttributes),
				config.customAttributes),
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$viewContent(config)
				]));
	});
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$css = function (styles) {
	return $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$set(
		function (config) {
			return _Utils_update(
				config,
				{
					customStyles: A2($elm$core$List$append, config.customStyles, styles)
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$custom = function (attributes) {
	return $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$set(
		function (config) {
			return _Utils_update(
				config,
				{
					customAttributes: A2($elm$core$List$append, config.customAttributes, attributes)
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$defaultMarginTop = 9;
var $NoRedInk$noredink_ui$ClickableAttributes$onClick = F2(
	function (msg, clickableAttributes) {
		return _Utils_update(
			clickableAttributes,
			{
				onClick: $elm$core$Maybe$Just(msg)
			});
	});
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$setClickableAttributes = function (apply) {
	return $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$set(
		function (attributes) {
			return _Utils_update(
				attributes,
				{
					clickableAttributes: apply(attributes.clickableAttributes)
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$onClick = function (msg) {
	return $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$setClickableAttributes(
		$NoRedInk$noredink_ui$ClickableAttributes$onClick(msg));
};
var $rtfeldman$elm_css$Css$right = $rtfeldman$elm_css$Css$prop1('right');
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$Small = {$: 'Small'};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$small = $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$set(
	function (attributes) {
		return _Utils_update(
			attributes,
			{size: $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$Small});
	});
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$viewPasswordFloatingContent = F3(
	function (label, toggle, config) {
		return (config.stringValue === '') ? $rtfeldman$elm_css$Html$Styled$text('') : A2(
			$NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$button,
			label,
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$onClick(toggle),
					$NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$small,
					$NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$css(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
							$rtfeldman$elm_css$Css$right(
							$rtfeldman$elm_css$Css$px(15)),
							config.noMarginTop ? $rtfeldman$elm_css$Css$top(
							$rtfeldman$elm_css$Css$px(22 - $NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$defaultMarginTop)) : $rtfeldman$elm_css$Css$top(
							$rtfeldman$elm_css$Css$px(22)),
							$rtfeldman$elm_css$Css$fontSize(
							$rtfeldman$elm_css$Css$px(13))
						])),
					$NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$custom(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$type_('button')
						]))
				]));
	});
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$password = F2(
	function (autocomplete, settings) {
		return A2(
			$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$Attribute,
			_Utils_update(
				$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$emptyEventsAndValues,
				{
					floatingContent: $elm$core$Maybe$Just(
						A2(
							$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$viewPasswordFloatingContent,
							settings.showPassword ? 'Hide password' : 'Show password',
							settings.setShowPassword(!settings.showPassword))),
					fromString: $elm$core$Maybe$Just($elm$core$Basics$identity),
					onInput: $elm$core$Maybe$Just(settings.onInput),
					toString: $elm$core$Maybe$Just($elm$core$Basics$identity)
				}),
			function (config) {
				return _Utils_update(
					config,
					{
						autocomplete: $elm$core$Maybe$Just(autocomplete),
						fieldType: $elm$core$Maybe$Just(
							settings.showPassword ? 'text' : 'password'),
						inputCss: A2(
							$elm$core$List$cons,
							$rtfeldman$elm_css$Css$paddingRight(
								$rtfeldman$elm_css$Css$px(135)),
							config.inputCss),
						inputMode: $elm$core$Maybe$Nothing
					});
			});
	});
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$currentPassword = $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$password('current-password');
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$email = function (onInput_) {
	return A2(
		$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$Attribute,
		_Utils_update(
			$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$emptyEventsAndValues,
			{
				fromString: $elm$core$Maybe$Just($elm$core$Basics$identity),
				onInput: $elm$core$Maybe$Just(onInput_),
				toString: $elm$core$Maybe$Just($elm$core$Basics$identity)
			}),
		function (config) {
			return _Utils_update(
				config,
				{
					autocomplete: $elm$core$Maybe$Just('email'),
					fieldType: $elm$core$Maybe$Just('text'),
					inputMode: $elm$core$Maybe$Just('email')
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$Subhead = {$: 'Subhead'};
var $rtfeldman$elm_css$Html$Styled$h3 = $rtfeldman$elm_css$Html$Styled$node('h3');
var $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$customize = F2(
	function (attr, customizations) {
		switch (attr.$) {
			case 'Style_':
				var newStyle = attr.a;
				return _Utils_update(
					customizations,
					{style: newStyle});
			case 'Css':
				var css_ = attr.a;
				return _Utils_update(
					customizations,
					{
						css: _Utils_ap(customizations.css, css_)
					});
			case 'Attributes_':
				var attributes = attr.a;
				return _Utils_update(
					customizations,
					{
						attributes: _Utils_ap(customizations.attributes, attributes)
					});
			default:
				return customizations;
		}
	});
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray20 = $rtfeldman$elm_css$Css$hex('#333333');
var $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$headingStyles = function (config) {
	return $rtfeldman$elm_css$Css$batch(
		_List_fromArray(
			[
				config.font,
				$rtfeldman$elm_css$Css$fontSize(
				$rtfeldman$elm_css$Css$px(config.size)),
				$rtfeldman$elm_css$Css$color(config.color),
				$rtfeldman$elm_css$Css$lineHeight(
				$rtfeldman$elm_css$Css$px(config.lineHeight)),
				$rtfeldman$elm_css$Css$fontWeight(
				$rtfeldman$elm_css$Css$int(config.weight)),
				$rtfeldman$elm_css$Css$padding($rtfeldman$elm_css$Css$zero),
				$rtfeldman$elm_css$Css$textAlign($rtfeldman$elm_css$Css$left),
				$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$zero)
			]));
};
var $rtfeldman$elm_css$Css$letterSpacing = $rtfeldman$elm_css$Css$prop1('letter-spacing');
var $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$getStyles = function (style_) {
	switch (style_.$) {
		case 'Top':
			return $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$headingStyles(
				{color: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy, font: $NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont, lineHeight: 38, size: 30, weight: 700});
		case 'Tagline':
			return $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$headingStyles(
				{color: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray45, font: $NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont, lineHeight: 30, size: 20, weight: 400});
		case 'Subhead':
			return $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$headingStyles(
				{color: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy, font: $NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont, lineHeight: 26, size: 20, weight: 700});
		default:
			return $rtfeldman$elm_css$Css$batch(
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$headingStyles(
						{color: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray20, font: $NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont, lineHeight: 21, size: 16, weight: 700}),
						$rtfeldman$elm_css$Css$letterSpacing(
						$rtfeldman$elm_css$Css$px(-0.13))
					]));
	}
};
var $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$view = F4(
	function (tag, customizations, attrs, content) {
		var _final = A3($elm$core$List$foldl, $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$customize, customizations, attrs);
		return A2(
			tag,
			A2(
				$elm$core$List$cons,
				$rtfeldman$elm_css$Html$Styled$Attributes$css(
					_List_fromArray(
						[
							$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$getStyles(_final.style),
							$rtfeldman$elm_css$Css$batch(_final.css)
						])),
				_final.attributes),
			content);
	});
var $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h3 = A2(
	$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$view,
	$rtfeldman$elm_css$Html$Styled$h3,
	{attributes: _List_Nil, css: _List_Nil, style: $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$Subhead});
var $NoRedInk$noredink_ui$Nri$Ui$Container$V2$html = function (content) {
	return $NoRedInk$noredink_ui$Nri$Ui$Container$V2$Attribute(
		function (config) {
			return _Utils_update(
				config,
				{content: content});
		});
};
var $rtfeldman$elm_css$Css$marginBottom = $rtfeldman$elm_css$Css$prop1('margin-bottom');
var $rtfeldman$elm_css$Css$marginTop = $rtfeldman$elm_css$Css$prop1('margin-top');
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$setClickableAttributes = function (apply) {
	return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$set(
		function (attributes) {
			return _Utils_update(
				attributes,
				{
					clickableAttributes: apply(attributes.clickableAttributes)
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick = function (msg) {
	return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$setClickableAttributes(
		$NoRedInk$noredink_ui$ClickableAttributes$onClick(msg));
};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$primary = $NoRedInk$noredink_ui$Nri$Ui$Button$V10$set(
	function (attributes) {
		return _Utils_update(
			attributes,
			{style: $NoRedInk$noredink_ui$Nri$Ui$Button$V10$primaryColors});
	});
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$value = function (value_) {
	return A2(
		$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$Attribute,
		_Utils_update(
			$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$emptyEventsAndValues,
			{
				currentValue: $elm$core$Maybe$Just(value_)
			}),
		$elm$core$Basics$identity);
};
var $rtfeldman$elm_css$Css$prop3 = F4(
	function (key, argA, argB, argC) {
		return A2($rtfeldman$elm_css$Css$property, key, argA.value + (' ' + (argB.value + (' ' + argC.value))));
	});
var $rtfeldman$elm_css$Css$border3 = $rtfeldman$elm_css$Css$prop3('border');
var $NoRedInk$noredink_ui$Nri$Ui$Shadows$V1$low = A2($rtfeldman$elm_css$Css$property, 'box-shadow', '0 0.8px 0.7px hsl(0deg 0% 0% / 0.1), 0 1px 1px -1.2px hsl(0deg 0% 0% / 0.1), 0 5px 2.5px -2.5px hsl(0deg 0% 0% / 0.1);');
var $NoRedInk$noredink_ui$Nri$Ui$Container$V2$defaultStyles = _List_fromArray(
	[
		$rtfeldman$elm_css$Css$borderRadius(
		$rtfeldman$elm_css$Css$px(8)),
		A3(
		$rtfeldman$elm_css$Css$border3,
		$rtfeldman$elm_css$Css$px(1),
		$rtfeldman$elm_css$Css$solid,
		$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray92),
		$NoRedInk$noredink_ui$Nri$Ui$Shadows$V1$low,
		$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white)
	]);
var $NoRedInk$noredink_ui$Nri$Ui$Container$V2$defaultSettings = {attributes: _List_Nil, containerType: 'default-container', content: _List_Nil, css: $NoRedInk$noredink_ui$Nri$Ui$Container$V2$defaultStyles, padding: 20};
var $NoRedInk$noredink_ui$Nri$Ui$Container$V2$view = function (attributes) {
	var settings = A3(
		$elm$core$List$foldl,
		function (_v0) {
			var set = _v0.a;
			return set;
		},
		$NoRedInk$noredink_ui$Nri$Ui$Container$V2$defaultSettings,
		attributes);
	return A5(
		$NoRedInk$noredink_ui$Nri$Ui$styled,
		$rtfeldman$elm_css$Html$Styled$div,
		settings.containerType,
		A2(
			$elm$core$List$cons,
			$rtfeldman$elm_css$Css$padding(
				$rtfeldman$elm_css$Css$px(settings.padding)),
			settings.css),
		settings.attributes,
		settings.content);
};
var $NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$Writing = {$: 'Writing'};
var $NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$Standard = {$: 'Standard'};
var $NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$NoError = {$: 'NoError'};
var $NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$noError = $NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$NoError;
var $NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$noGuidance = $elm$core$Maybe$Nothing;
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$emptyConfig = {autocomplete: $elm$core$Maybe$Nothing, autofocus: false, containerCss: _List_Nil, custom: _List_Nil, disabled: false, error: $NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$noError, fieldType: $elm$core$Maybe$Nothing, guidance: $NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$noGuidance, hideLabel: false, id: $elm$core$Maybe$Nothing, inputCss: _List_Nil, inputMode: $elm$core$Maybe$Nothing, inputStyle: $NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$Standard, loading: false, noMarginTop: false, placeholder: $elm$core$Maybe$Nothing, readOnly: false};
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$applyConfig = function (attributes) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, config) {
				var update = _v0.b;
				return update(config);
			}),
		$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$emptyConfig,
		attributes);
};
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$orExisting = F3(
	function (f, _new, previous) {
		var _v0 = f(previous);
		if (_v0.$ === 'Just') {
			var just = _v0.a;
			return $elm$core$Maybe$Just(just);
		} else {
			return f(_new);
		}
	});
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$applyEvents = A2(
	$elm$core$List$foldl,
	F2(
		function (_v0, existing) {
			var eventsAndValues = _v0.a;
			return {
				currentValue: A3(
					$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$orExisting,
					function ($) {
						return $.currentValue;
					},
					eventsAndValues,
					existing),
				floatingContent: A3(
					$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$orExisting,
					function ($) {
						return $.floatingContent;
					},
					eventsAndValues,
					existing),
				fromString: A3(
					$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$orExisting,
					function ($) {
						return $.fromString;
					},
					eventsAndValues,
					existing),
				onBlur: A3(
					$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$orExisting,
					function ($) {
						return $.onBlur;
					},
					eventsAndValues,
					existing),
				onEnter: A3(
					$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$orExisting,
					function ($) {
						return $.onEnter;
					},
					eventsAndValues,
					existing),
				onFocus: A3(
					$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$orExisting,
					function ($) {
						return $.onFocus;
					},
					eventsAndValues,
					existing),
				onInput: A3(
					$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$orExisting,
					function ($) {
						return $.onInput;
					},
					eventsAndValues,
					existing),
				toString: A3(
					$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$orExisting,
					function ($) {
						return $.toString;
					},
					eventsAndValues,
					existing)
			};
		}),
	$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$emptyEventsAndValues);
var $rtfeldman$elm_css$Html$Styled$Attributes$autofocus = $rtfeldman$elm_css$Html$Styled$Attributes$boolProperty('autofocus');
var $rtfeldman$elm_css$Html$Styled$Attributes$class = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('className');
var $Gizra$elm_keyboard_event$Keyboard$Event$KeyboardEvent = F7(
	function (altKey, ctrlKey, key, keyCode, metaKey, repeat, shiftKey) {
		return {altKey: altKey, ctrlKey: ctrlKey, key: key, keyCode: keyCode, metaKey: metaKey, repeat: repeat, shiftKey: shiftKey};
	});
var $elm$json$Json$Decode$fail = _Json_fail;
var $Gizra$elm_keyboard_event$Keyboard$Event$decodeKey = $elm$json$Json$Decode$maybe(
	A2(
		$elm$json$Json$Decode$andThen,
		function (key) {
			return $elm$core$String$isEmpty(key) ? $elm$json$Json$Decode$fail('empty key') : $elm$json$Json$Decode$succeed(key);
		},
		A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string)));
var $Gizra$elm_keyboard_event$Keyboard$Event$decodeNonZero = A2(
	$elm$json$Json$Decode$andThen,
	function (code) {
		return (!code) ? $elm$json$Json$Decode$fail('code was zero') : $elm$json$Json$Decode$succeed(code);
	},
	$elm$json$Json$Decode$int);
var $Gizra$elm_keyboard_event$Keyboard$Event$decodeKeyCode = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2($elm$json$Json$Decode$field, 'keyCode', $Gizra$elm_keyboard_event$Keyboard$Event$decodeNonZero),
			A2($elm$json$Json$Decode$field, 'which', $Gizra$elm_keyboard_event$Keyboard$Event$decodeNonZero),
			A2($elm$json$Json$Decode$field, 'charCode', $Gizra$elm_keyboard_event$Keyboard$Event$decodeNonZero),
			$elm$json$Json$Decode$succeed(0)
		]));
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$A = {$: 'A'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Add = {$: 'Add'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Alt = {$: 'Alt'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Ambiguous = function (a) {
	return {$: 'Ambiguous', a: a};
};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$B = {$: 'B'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Backspace = {$: 'Backspace'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$C = {$: 'C'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$CapsLock = {$: 'CapsLock'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$ChromeSearch = {$: 'ChromeSearch'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Command = {$: 'Command'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Ctrl = function (a) {
	return {$: 'Ctrl', a: a};
};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$D = {$: 'D'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Decimal = {$: 'Decimal'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Delete = {$: 'Delete'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Divide = {$: 'Divide'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Down = {$: 'Down'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$E = {$: 'E'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Eight = {$: 'Eight'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$End = {$: 'End'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Enter = {$: 'Enter'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Escape = {$: 'Escape'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F = {$: 'F'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F1 = {$: 'F1'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F10 = {$: 'F10'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F11 = {$: 'F11'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F12 = {$: 'F12'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F2 = {$: 'F2'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F3 = {$: 'F3'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F4 = {$: 'F4'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F5 = {$: 'F5'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F6 = {$: 'F6'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F7 = {$: 'F7'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F8 = {$: 'F8'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F9 = {$: 'F9'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Five = {$: 'Five'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Four = {$: 'Four'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$G = {$: 'G'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$H = {$: 'H'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Home = {$: 'Home'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$I = {$: 'I'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Insert = {$: 'Insert'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$J = {$: 'J'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$K = {$: 'K'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$L = {$: 'L'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Left = {$: 'Left'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$M = {$: 'M'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Multiply = {$: 'Multiply'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$N = {$: 'N'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Nine = {$: 'Nine'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumLock = {$: 'NumLock'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadEight = {$: 'NumpadEight'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadFive = {$: 'NumpadFive'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadFour = {$: 'NumpadFour'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadNine = {$: 'NumpadNine'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadOne = {$: 'NumpadOne'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadSeven = {$: 'NumpadSeven'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadSix = {$: 'NumpadSix'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadThree = {$: 'NumpadThree'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadTwo = {$: 'NumpadTwo'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadZero = {$: 'NumpadZero'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$O = {$: 'O'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$One = {$: 'One'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$P = {$: 'P'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$PageDown = {$: 'PageDown'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$PageUp = {$: 'PageUp'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$PauseBreak = {$: 'PauseBreak'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$PrintScreen = {$: 'PrintScreen'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Q = {$: 'Q'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$R = {$: 'R'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Right = {$: 'Right'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$S = {$: 'S'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$ScrollLock = {$: 'ScrollLock'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Seven = {$: 'Seven'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Shift = function (a) {
	return {$: 'Shift', a: a};
};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Six = {$: 'Six'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Spacebar = {$: 'Spacebar'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Subtract = {$: 'Subtract'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$T = {$: 'T'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Tab = {$: 'Tab'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Three = {$: 'Three'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Two = {$: 'Two'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$U = {$: 'U'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Unknown = function (a) {
	return {$: 'Unknown', a: a};
};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Up = {$: 'Up'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$V = {$: 'V'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$W = {$: 'W'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Windows = {$: 'Windows'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$X = {$: 'X'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Y = {$: 'Y'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Z = {$: 'Z'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Zero = {$: 'Zero'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$fromCode = function (keyCode) {
	switch (keyCode) {
		case 8:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Backspace;
		case 9:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Tab;
		case 13:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Enter;
		case 16:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Shift($elm$core$Maybe$Nothing);
		case 17:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Ctrl($elm$core$Maybe$Nothing);
		case 18:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Alt;
		case 19:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$PauseBreak;
		case 20:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$CapsLock;
		case 27:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Escape;
		case 32:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Spacebar;
		case 33:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$PageUp;
		case 34:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$PageDown;
		case 35:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$End;
		case 36:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Home;
		case 37:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Left;
		case 38:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Up;
		case 39:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Right;
		case 40:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Down;
		case 44:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$PrintScreen;
		case 45:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Insert;
		case 46:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Delete;
		case 48:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Zero;
		case 49:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$One;
		case 50:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Two;
		case 51:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Three;
		case 52:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Four;
		case 53:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Five;
		case 54:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Six;
		case 55:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Seven;
		case 56:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Eight;
		case 57:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Nine;
		case 65:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$A;
		case 66:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$B;
		case 67:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$C;
		case 68:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$D;
		case 69:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$E;
		case 70:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F;
		case 71:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$G;
		case 72:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$H;
		case 73:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$I;
		case 74:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$J;
		case 75:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$K;
		case 76:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$L;
		case 77:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$M;
		case 78:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$N;
		case 79:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$O;
		case 80:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$P;
		case 81:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Q;
		case 82:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$R;
		case 83:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$S;
		case 84:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$T;
		case 85:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$U;
		case 86:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$V;
		case 87:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$W;
		case 88:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$X;
		case 89:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Y;
		case 90:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Z;
		case 91:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Ambiguous(
				_List_fromArray(
					[$SwiftsNamesake$proper_keyboard$Keyboard$Key$Windows, $SwiftsNamesake$proper_keyboard$Keyboard$Key$Command, $SwiftsNamesake$proper_keyboard$Keyboard$Key$ChromeSearch]));
		case 96:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadZero;
		case 97:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadOne;
		case 98:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadTwo;
		case 99:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadThree;
		case 100:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadFour;
		case 101:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadFive;
		case 102:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadSix;
		case 103:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadSeven;
		case 104:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadEight;
		case 105:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadNine;
		case 106:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Multiply;
		case 107:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Add;
		case 109:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Subtract;
		case 110:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Decimal;
		case 111:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Divide;
		case 112:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F1;
		case 113:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F2;
		case 114:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F3;
		case 115:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F4;
		case 116:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F5;
		case 117:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F6;
		case 118:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F7;
		case 119:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F8;
		case 120:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F9;
		case 121:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F10;
		case 122:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F11;
		case 123:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F12;
		case 144:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumLock;
		case 145:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$ScrollLock;
		default:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Unknown(keyCode);
	}
};
var $Gizra$elm_keyboard_event$Keyboard$Event$decodeKeyboardEvent = A8(
	$elm$json$Json$Decode$map7,
	$Gizra$elm_keyboard_event$Keyboard$Event$KeyboardEvent,
	A2($elm$json$Json$Decode$field, 'altKey', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'ctrlKey', $elm$json$Json$Decode$bool),
	$Gizra$elm_keyboard_event$Keyboard$Event$decodeKey,
	A2($elm$json$Json$Decode$map, $SwiftsNamesake$proper_keyboard$Keyboard$Key$fromCode, $Gizra$elm_keyboard_event$Keyboard$Event$decodeKeyCode),
	A2($elm$json$Json$Decode$field, 'metaKey', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'repeat', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'shiftKey', $elm$json$Json$Decode$bool));
var $Gizra$elm_keyboard_event$Keyboard$Event$considerKeyboardEvent = function (func) {
	return A2(
		$elm$json$Json$Decode$andThen,
		function (event) {
			var _v0 = func(event);
			if (_v0.$ === 'Just') {
				var msg = _v0.a;
				return $elm$json$Json$Decode$succeed(msg);
			} else {
				return $elm$json$Json$Decode$fail('Ignoring keyboard event');
			}
		},
		$Gizra$elm_keyboard_event$Keyboard$Event$decodeKeyboardEvent);
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$toListString = $elm$core$String$join(' ');
var $tesk9$accessible_html_with_css$Accessibility$Styled$Aria$describedBy = A2(
	$elm$core$Basics$composeL,
	$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$aria('describedby'),
	$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$toListString);
var $NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$getErrorMessage = function (error) {
	switch (error.$) {
		case 'NoError':
			return $elm$core$Maybe$Nothing;
		case 'Error':
			return $elm$core$Maybe$Nothing;
		default:
			var message = error.a;
			return $elm$core$Maybe$Just(message);
	}
};
var $elm$json$Json$Encode$null = _Json_encodeNull;
var $rtfeldman$elm_css$Html$Styled$Attributes$property = $rtfeldman$elm_css$VirtualDom$Styled$property;
var $NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$none = A2($rtfeldman$elm_css$Html$Styled$Attributes$property, 'Html.Attributes.Extra.none', $elm$json$Json$Encode$null);
var $NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$describedBy = F2(
	function (idValue, config) {
		var _v0 = _Utils_Tuple2(
			$NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$getErrorMessage(config.error),
			config.guidance);
		if ((_v0.a.$ === 'Nothing') && (_v0.b.$ === 'Just')) {
			var _v1 = _v0.a;
			return $tesk9$accessible_html_with_css$Accessibility$Styled$Aria$describedBy(
				_List_fromArray(
					[idValue + '_guidance']));
		} else {
			return $NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$none;
		}
	});
var $elm$core$Basics$always = F2(
	function (a, _v0) {
		return a;
	});
var $NoRedInk$noredink_ui$Nri$Ui$Util$dashify = function () {
	var regex = A2(
		$elm$core$Maybe$withDefault,
		$elm$regex$Regex$never,
		$elm$regex$Regex$fromString(' '));
	return A2(
		$elm$regex$Regex$replace,
		regex,
		$elm$core$Basics$always('-'));
}();
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$generateId = function (labelText) {
	return 'Nri-Ui-TextInput-' + $NoRedInk$noredink_ui$Nri$Ui$Util$dashify(labelText);
};
var $NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$getIsInError = function (error) {
	switch (error.$) {
		case 'NoError':
			return false;
		case 'Error':
			return true;
		default:
			return true;
	}
};
var $rtfeldman$elm_css$Html$Styled$Attributes$id = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('id');
var $elm$core$String$endsWith = _String_endsWith;
var $rtfeldman$elm_css$Css$makeImportant = function (_v0) {
	var str = _v0.a;
	return A2(
		$elm$core$String$endsWith,
		' !important',
		$elm$core$String$toLower(str)) ? $rtfeldman$elm_css$Css$Structure$Property(str) : $rtfeldman$elm_css$Css$Structure$Property(str + ' !important');
};
var $rtfeldman$elm_css$Css$Preprocess$mapAllProperties = F2(
	function (update, styles) {
		if (!styles.b) {
			return styles;
		} else {
			if (!styles.b.b) {
				var only = styles.a;
				return _List_fromArray(
					[
						A2($rtfeldman$elm_css$Css$Preprocess$mapProperties, update, only)
					]);
			} else {
				var first = styles.a;
				var rest = styles.b;
				return A2(
					$elm$core$List$cons,
					first,
					A2($rtfeldman$elm_css$Css$Preprocess$mapAllProperties, update, rest));
			}
		}
	});
var $rtfeldman$elm_css$Css$Preprocess$mapProperties = F2(
	function (update, style) {
		switch (style.$) {
			case 'AppendProperty':
				var property = style.a;
				return $rtfeldman$elm_css$Css$Preprocess$AppendProperty(
					update(property));
			case 'ExtendSelector':
				var selector = style.a;
				var styles = style.b;
				return A2(
					$rtfeldman$elm_css$Css$Preprocess$ExtendSelector,
					selector,
					A2($rtfeldman$elm_css$Css$Preprocess$mapAllProperties, update, styles));
			case 'NestSnippet':
				return style;
			case 'WithPseudoElement':
				return style;
			case 'WithMedia':
				return style;
			case 'WithKeyframes':
				return style;
			default:
				var otherStyles = style.a;
				return $rtfeldman$elm_css$Css$Preprocess$ApplyStyles(
					A2(
						$elm$core$List$map,
						$rtfeldman$elm_css$Css$Preprocess$mapProperties(update),
						otherStyles));
		}
	});
var $rtfeldman$elm_css$Css$important = $rtfeldman$elm_css$Css$Preprocess$mapProperties($rtfeldman$elm_css$Css$makeImportant);
var $rtfeldman$elm_css$Html$Styled$input = $rtfeldman$elm_css$Html$Styled$node('input');
var $rtfeldman$elm_css$Css$Structure$AdjacentSibling = {$: 'AdjacentSibling'};
var $rtfeldman$elm_css$Css$Preprocess$NestSnippet = F2(
	function (a, b) {
		return {$: 'NestSnippet', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$Global$adjacentSiblings = $rtfeldman$elm_css$Css$Preprocess$NestSnippet($rtfeldman$elm_css$Css$Structure$AdjacentSibling);
var $rtfeldman$elm_css$Css$prop6 = F7(
	function (key, argA, argB, argC, argD, argE, argF) {
		return A2($rtfeldman$elm_css$Css$property, key, argA.value + (' ' + (argB.value + (' ' + (argC.value + (' ' + (argD.value + (' ' + (argE.value + (' ' + argF.value))))))))));
	});
var $rtfeldman$elm_css$Css$boxShadow6 = $rtfeldman$elm_css$Css$prop6('box-shadow');
var $rtfeldman$elm_css$Css$focus = $rtfeldman$elm_css$Css$pseudoClass('focus');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray75 = $rtfeldman$elm_css$Css$hex('#bfbfbf');
var $NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$inputPaddingVertical = $rtfeldman$elm_css$Css$px(12);
var $rtfeldman$elm_css$Css$inset = {borderStyle: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'inset'};
var $rtfeldman$elm_css$Css$Structure$TypeSelector = function (a) {
	return {$: 'TypeSelector', a: a};
};
var $rtfeldman$elm_css$Css$Global$typeSelector = F2(
	function (selectorStr, styles) {
		var sequence = A2(
			$rtfeldman$elm_css$Css$Structure$TypeSelectorSequence,
			$rtfeldman$elm_css$Css$Structure$TypeSelector(selectorStr),
			_List_Nil);
		var sel = A3($rtfeldman$elm_css$Css$Structure$Selector, sequence, _List_Nil, $elm$core$Maybe$Nothing);
		return $rtfeldman$elm_css$Css$Preprocess$Snippet(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$Preprocess$StyleBlockDeclaration(
					A3($rtfeldman$elm_css$Css$Preprocess$StyleBlock, sel, _List_Nil, styles))
				]));
	});
var $rtfeldman$elm_css$Css$Global$label = $rtfeldman$elm_css$Css$Global$typeSelector('label');
var $rtfeldman$elm_css$Css$outline = $rtfeldman$elm_css$Css$prop1('outline');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purpleLight = $rtfeldman$elm_css$Css$hex('#f7ebff');
var $NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$quizFont = $rtfeldman$elm_css$Css$fontFamilies(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$qt('Georgia'),
			'serif'
		]));
var $NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$ugFont = $rtfeldman$elm_css$Css$fontFamilies(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$qt('Georgia'),
			'serif'
		]));
var $rtfeldman$elm_css$Css$Global$withClass = function (str) {
	return $rtfeldman$elm_css$Css$Preprocess$ExtendSelector(
		$rtfeldman$elm_css$Css$Structure$ClassSelector(str));
};
var $NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$writingLineHeight = $rtfeldman$elm_css$Css$px(27);
var $NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$writingPadding = $rtfeldman$elm_css$Css$px(15);
var $NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$writingPaddingTop = $rtfeldman$elm_css$Css$px(20);
var $NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$input = F2(
	function (theme, isInError) {
		var sharedStyles = $rtfeldman$elm_css$Css$batch(
			_List_fromArray(
				[
					A3(
					$rtfeldman$elm_css$Css$border3,
					$rtfeldman$elm_css$Css$px(1),
					$rtfeldman$elm_css$Css$solid,
					$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray75),
					$rtfeldman$elm_css$Css$width(
					$rtfeldman$elm_css$Css$pct(100)),
					$rtfeldman$elm_css$Css$borderRadius(
					$rtfeldman$elm_css$Css$px(8)),
					A2(
					$rtfeldman$elm_css$Css$pseudoClass,
					'placeholder',
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray45)
						])),
					$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray20),
					$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineBlock),
					$rtfeldman$elm_css$Css$verticalAlign($rtfeldman$elm_css$Css$top),
					$rtfeldman$elm_css$Css$marginBottom($rtfeldman$elm_css$Css$zero),
					$rtfeldman$elm_css$Css$marginTop(
					$rtfeldman$elm_css$Css$px($NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$defaultMarginTop)),
					A6(
					$rtfeldman$elm_css$Css$boxShadow6,
					$rtfeldman$elm_css$Css$inset,
					$rtfeldman$elm_css$Css$zero,
					$rtfeldman$elm_css$Css$px(3),
					$rtfeldman$elm_css$Css$zero,
					$rtfeldman$elm_css$Css$zero,
					$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray92),
					A2($rtfeldman$elm_css$Css$property, 'transition', 'border-color 0.4s ease'),
					$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
					$rtfeldman$elm_css$Css$focus(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$borderColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure),
							$rtfeldman$elm_css$Css$outline($rtfeldman$elm_css$Css$none),
							A6(
							$rtfeldman$elm_css$Css$boxShadow6,
							$rtfeldman$elm_css$Css$inset,
							$rtfeldman$elm_css$Css$zero,
							$rtfeldman$elm_css$Css$px(3),
							$rtfeldman$elm_css$Css$zero,
							$rtfeldman$elm_css$Css$zero,
							$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$glacier)
						])),
					isInError ? $rtfeldman$elm_css$Css$batch(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$borderColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purple),
							A6(
							$rtfeldman$elm_css$Css$boxShadow6,
							$rtfeldman$elm_css$Css$inset,
							$rtfeldman$elm_css$Css$zero,
							$rtfeldman$elm_css$Css$px(3),
							$rtfeldman$elm_css$Css$zero,
							$rtfeldman$elm_css$Css$zero,
							$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purpleLight),
							$rtfeldman$elm_css$Css$focus(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$borderColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purple),
									A6(
									$rtfeldman$elm_css$Css$boxShadow6,
									$rtfeldman$elm_css$Css$inset,
									$rtfeldman$elm_css$Css$zero,
									$rtfeldman$elm_css$Css$px(3),
									$rtfeldman$elm_css$Css$zero,
									$rtfeldman$elm_css$Css$zero,
									$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purpleLight)
								]))
						])) : $rtfeldman$elm_css$Css$batch(_List_Nil)
				]));
		return $rtfeldman$elm_css$Css$batch(
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Css$Global$withClass,
					'override-sass-styles',
					_List_fromArray(
						[
							function () {
							switch (theme.$) {
								case 'Standard':
									return $rtfeldman$elm_css$Css$batch(
										_List_fromArray(
											[
												sharedStyles,
												A2(
												$rtfeldman$elm_css$Css$padding2,
												$NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$inputPaddingVertical,
												$rtfeldman$elm_css$Css$px(15)),
												$rtfeldman$elm_css$Css$fontSize(
												$rtfeldman$elm_css$Css$px(15)),
												$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont
											]));
								case 'UserGenerated':
									return $rtfeldman$elm_css$Css$batch(
										_List_fromArray(
											[
												sharedStyles,
												A2(
												$rtfeldman$elm_css$Css$padding2,
												$NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$inputPaddingVertical,
												$rtfeldman$elm_css$Css$px(15)),
												$rtfeldman$elm_css$Css$fontSize(
												$rtfeldman$elm_css$Css$px(15)),
												$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$ugFont
											]));
								case 'Writing':
									return $rtfeldman$elm_css$Css$batch(
										_List_fromArray(
											[
												sharedStyles,
												$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$quizFont,
												$rtfeldman$elm_css$Css$fontSize(
												$rtfeldman$elm_css$Css$px(18)),
												$rtfeldman$elm_css$Css$lineHeight($NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$writingLineHeight),
												$rtfeldman$elm_css$Css$padding($NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$writingPadding),
												$rtfeldman$elm_css$Css$paddingTop($NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$writingPaddingTop),
												$rtfeldman$elm_css$Css$focus(
												_List_fromArray(
													[
														$rtfeldman$elm_css$Css$Global$adjacentSiblings(
														_List_fromArray(
															[
																$rtfeldman$elm_css$Css$Global$label(
																_List_fromArray(
																	[
																		$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure),
																		$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white),
																		$rtfeldman$elm_css$Css$borderColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure),
																		isInError ? $rtfeldman$elm_css$Css$batch(
																		_List_fromArray(
																			[
																				$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purple),
																				$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white),
																				$rtfeldman$elm_css$Css$borderColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purple)
																			])) : $rtfeldman$elm_css$Css$batch(_List_Nil)
																	]))
															]))
													]))
											]));
								default:
									return $rtfeldman$elm_css$Css$batch(
										_List_fromArray(
											[
												sharedStyles,
												A2(
												$rtfeldman$elm_css$Css$padding2,
												$NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$inputPaddingVertical,
												$rtfeldman$elm_css$Css$px(15)),
												$rtfeldman$elm_css$Css$fontSize(
												$rtfeldman$elm_css$Css$px(15)),
												$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont
											]));
							}
						}()
						]))
				]));
	});
var $elm$core$Maybe$map2 = F3(
	function (func, ma, mb) {
		if (ma.$ === 'Nothing') {
			return $elm$core$Maybe$Nothing;
		} else {
			var a = ma.a;
			if (mb.$ === 'Nothing') {
				return $elm$core$Maybe$Nothing;
			} else {
				var b = mb.a;
				return $elm$core$Maybe$Just(
					A2(func, a, b));
			}
		}
	});
var $rtfeldman$elm_css$Html$Styled$Events$onBlur = function (msg) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$on,
		'blur',
		$elm$json$Json$Decode$succeed(msg));
};
var $rtfeldman$elm_css$Html$Styled$Events$onFocus = function (msg) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$on,
		'focus',
		$elm$json$Json$Decode$succeed(msg));
};
var $rtfeldman$elm_css$Html$Styled$Events$alwaysStop = function (x) {
	return _Utils_Tuple2(x, true);
};
var $elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {
	return {$: 'MayStopPropagation', a: a};
};
var $rtfeldman$elm_css$Html$Styled$Events$stopPropagationOn = F2(
	function (event, decoder) {
		return A2(
			$rtfeldman$elm_css$VirtualDom$Styled$on,
			event,
			$elm$virtual_dom$VirtualDom$MayStopPropagation(decoder));
	});
var $elm$json$Json$Decode$at = F2(
	function (fields, decoder) {
		return A3($elm$core$List$foldr, $elm$json$Json$Decode$field, decoder, fields);
	});
var $rtfeldman$elm_css$Html$Styled$Events$targetValue = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['target', 'value']),
	$elm$json$Json$Decode$string);
var $rtfeldman$elm_css$Html$Styled$Events$onInput = function (tagger) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$stopPropagationOn,
		'input',
		A2(
			$elm$json$Json$Decode$map,
			$rtfeldman$elm_css$Html$Styled$Events$alwaysStop,
			A2($elm$json$Json$Decode$map, tagger, $rtfeldman$elm_css$Html$Styled$Events$targetValue)));
};
var $rtfeldman$elm_css$Html$Styled$Attributes$placeholder = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('placeholder');
var $rtfeldman$elm_css$Css$Structure$PseudoElement = function (a) {
	return {$: 'PseudoElement', a: a};
};
var $rtfeldman$elm_css$Css$Preprocess$WithPseudoElement = F2(
	function (a, b) {
		return {$: 'WithPseudoElement', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$pseudoElement = function (element) {
	return $rtfeldman$elm_css$Css$Preprocess$WithPseudoElement(
		$rtfeldman$elm_css$Css$Structure$PseudoElement(element));
};
var $rtfeldman$elm_css$Html$Styled$Attributes$readonly = $rtfeldman$elm_css$Html$Styled$Attributes$boolProperty('readOnly');
var $rtfeldman$elm_css$Css$relative = {position: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'relative'};
var $rtfeldman$elm_css$Html$Styled$Attributes$step = function (n) {
	return A2($rtfeldman$elm_css$Html$Styled$Attributes$stringProperty, 'step', n);
};
var $rtfeldman$elm_css$Html$Styled$Attributes$value = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('value');
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$AlertRole = {$: 'AlertRole'};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Attribute = function (a) {
	return {$: 'Attribute', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$alertRole = $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Attribute(
	function (config) {
		return _Utils_update(
			config,
			{
				role: $elm$core$Maybe$Just($NoRedInk$noredink_ui$Nri$Ui$Message$V3$AlertRole)
			});
	});
var $NoRedInk$noredink_ui$Nri$Ui$Text$V6$Attribute = function (a) {
	return {$: 'Attribute', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Text$V6$css = function (styles) {
	return $NoRedInk$noredink_ui$Nri$Ui$Text$V6$Attribute(
		function (config) {
			return _Utils_update(
				config,
				{
					styles: _Utils_ap(config.styles, styles)
				});
		});
};
var $rtfeldman$elm_css$Css$Global$a = $rtfeldman$elm_css$Css$Global$typeSelector('a');
var $rtfeldman$elm_css$Css$borderBottom3 = $rtfeldman$elm_css$Css$prop3('border-bottom');
var $rtfeldman$elm_css$Css$Structure$Descendant = {$: 'Descendant'};
var $rtfeldman$elm_css$Css$Global$descendants = $rtfeldman$elm_css$Css$Preprocess$NestSnippet($rtfeldman$elm_css$Css$Structure$Descendant);
var $rtfeldman$elm_css$Css$lastChild = $rtfeldman$elm_css$Css$pseudoClass('last-child');
var $NoRedInk$noredink_ui$Nri$Ui$Text$V6$paragraphStyles = function (config) {
	return _List_fromArray(
		[
			config.font,
			$rtfeldman$elm_css$Css$fontSize(
			$rtfeldman$elm_css$Css$px(config.size)),
			$rtfeldman$elm_css$Css$color(config.color),
			$rtfeldman$elm_css$Css$lineHeight(
			$rtfeldman$elm_css$Css$px(config.lineHeight)),
			$rtfeldman$elm_css$Css$fontWeight(
			$rtfeldman$elm_css$Css$int(config.weight)),
			$rtfeldman$elm_css$Css$padding($rtfeldman$elm_css$Css$zero),
			$rtfeldman$elm_css$Css$textAlign($rtfeldman$elm_css$Css$left),
			A4(
			$rtfeldman$elm_css$Css$margin4,
			$rtfeldman$elm_css$Css$px(0),
			$rtfeldman$elm_css$Css$px(0),
			$rtfeldman$elm_css$Css$px(config.margin),
			$rtfeldman$elm_css$Css$px(0)),
			$rtfeldman$elm_css$Css$Global$descendants(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$Global$a(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$textDecoration($rtfeldman$elm_css$Css$none),
							$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure),
							A3(
							$rtfeldman$elm_css$Css$borderBottom3,
							$rtfeldman$elm_css$Css$px(1),
							$rtfeldman$elm_css$Css$solid,
							$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure),
							$rtfeldman$elm_css$Css$visited(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure)
								]))
						]))
				])),
			$rtfeldman$elm_css$Css$lastChild(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$zero)
				]))
		]);
};
var $NoRedInk$noredink_ui$Nri$Ui$Text$V6$defaultSettings = {content: _List_Nil, customAttributes: _List_Nil, noBreak: false, styles: _List_Nil};
var $NoRedInk$noredink_ui$Nri$Ui$Text$V6$buildSettings = A2(
	$elm$core$List$foldl,
	F2(
		function (_v0, acc) {
			var f = _v0.a;
			return f(acc);
		}),
	$NoRedInk$noredink_ui$Nri$Ui$Text$V6$defaultSettings);
var $rtfeldman$elm_css$Css$noWrap = {flexDirectionOrWrap: $rtfeldman$elm_css$Css$Structure$Compatible, flexWrap: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'nowrap', whiteSpace: $rtfeldman$elm_css$Css$Structure$Compatible};
var $rtfeldman$elm_css$Html$Styled$p = $rtfeldman$elm_css$Html$Styled$node('p');
var $tesk9$accessible_html_with_css$Accessibility$Styled$p = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$p(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $rtfeldman$elm_css$Css$whiteSpace = $rtfeldman$elm_css$Css$prop1('white-space');
var $NoRedInk$noredink_ui$Nri$Ui$Text$V6$view = function (attributes) {
	var settings = $NoRedInk$noredink_ui$Nri$Ui$Text$V6$buildSettings(attributes);
	return A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$p,
		A2(
			$elm$core$List$cons,
			$rtfeldman$elm_css$Html$Styled$Attributes$css(
				_List_fromArray(
					[
						settings.noBreak ? $rtfeldman$elm_css$Css$whiteSpace($rtfeldman$elm_css$Css$noWrap) : $rtfeldman$elm_css$Css$batch(_List_Nil),
						$rtfeldman$elm_css$Css$batch(settings.styles)
					])),
			settings.customAttributes),
		settings.content);
};
var $NoRedInk$noredink_ui$Nri$Ui$Text$V6$caption = function (attributes) {
	return $NoRedInk$noredink_ui$Nri$Ui$Text$V6$view(
		A2(
			$elm$core$List$cons,
			$NoRedInk$noredink_ui$Nri$Ui$Text$V6$css(
				$NoRedInk$noredink_ui$Nri$Ui$Text$V6$paragraphStyles(
					{color: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray45, font: $NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont, lineHeight: 18, margin: 5, size: 13, weight: 400})),
			attributes));
};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$css = function (styles) {
	return $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Attribute(
		function (config) {
			return _Utils_update(
				config,
				{
					customStyles: A2($elm$core$List$append, config.customStyles, styles)
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Error = {$: 'Error'};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$error = $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Attribute(
	function (config) {
		return _Utils_update(
			config,
			{theme: $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Error});
	});
var $NoRedInk$noredink_ui$Nri$Ui$Text$V6$custom = function (attributes) {
	return $NoRedInk$noredink_ui$Nri$Ui$Text$V6$Attribute(
		function (config) {
			return _Utils_update(
				config,
				{
					customAttributes: A2($elm$core$List$append, config.customAttributes, attributes)
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Text$V6$id = function (id_) {
	return $NoRedInk$noredink_ui$Nri$Ui$Text$V6$custom(
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$id(id_)
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$plaintext = function (content) {
	return $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Attribute(
		function (config) {
			return _Utils_update(
				config,
				{
					content: _List_fromArray(
						[
							$tesk9$accessible_html_with_css$Accessibility$Styled$text(content)
						])
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Text$V6$plaintext = function (content) {
	return $NoRedInk$noredink_ui$Nri$Ui$Text$V6$Attribute(
		function (config) {
			return _Utils_update(
				config,
				{
					content: _List_fromArray(
						[
							$tesk9$accessible_html_with_css$Accessibility$Styled$text(content)
						])
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Tiny = {$: 'Tiny'};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$tiny = $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Attribute(
	function (config) {
		return _Utils_update(
			config,
			{size: $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Tiny});
	});
var $rtfeldman$elm_css$Css$alignSelf = function (fn) {
	return A3(
		$rtfeldman$elm_css$Css$Internal$getOverloadedProperty,
		'alignSelf',
		'align-self',
		fn($rtfeldman$elm_css$Css$Internal$lengthForOverloadedProperty));
};
var $rtfeldman$elm_css$Css$Structure$AllQuery = function (a) {
	return {$: 'AllQuery', a: a};
};
var $rtfeldman$elm_css$Css$Media$all = $rtfeldman$elm_css$Css$Structure$AllQuery;
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$ButtonOrLink = function (a) {
	return {$: 'ButtonOrLink', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$Secondary = {$: 'Secondary'};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$Small = {$: 'Small'};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$build = F2(
	function (label, icon) {
		return $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$ButtonOrLink(
			{clickableAttributes: $NoRedInk$noredink_ui$ClickableAttributes$init, customAttributes: _List_Nil, customStyles: _List_Nil, disabled: false, hasBorder: false, height: $elm$core$Maybe$Nothing, icon: icon, label: label, size: $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$Small, theme: $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$Secondary, width: $elm$core$Maybe$Nothing});
	});
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$red = $rtfeldman$elm_css$Css$hex('#e70d4f');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$redDark = $rtfeldman$elm_css$Css$hex('#c2003a');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$redLight = $rtfeldman$elm_css$Css$hex('#ffe0e6');
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$applyTheme = function (theme) {
	switch (theme.$) {
		case 'Primary':
			return {background: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure, backgroundHovered: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azureDark, borderBottom: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azureDark, includeBorder: false, mainHovered: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white, main_: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white};
		case 'Secondary':
			return {background: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white, backgroundHovered: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$glacier, borderBottom: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure, includeBorder: true, mainHovered: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azureDark, main_: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure};
		case 'Danger':
			return {background: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$red, backgroundHovered: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$redDark, borderBottom: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$redDark, includeBorder: false, mainHovered: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white, main_: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white};
		default:
			return {background: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white, backgroundHovered: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$redLight, borderBottom: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$red, includeBorder: true, mainHovered: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$redDark, main_: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$red};
	}
};
var $rtfeldman$elm_css$Css$borderLeftWidth = $rtfeldman$elm_css$Css$prop1('border-left-width');
var $rtfeldman$elm_css$Css$borderRightWidth = $rtfeldman$elm_css$Css$prop1('border-right-width');
var $rtfeldman$elm_css$Css$borderTopWidth = $rtfeldman$elm_css$Css$prop1('border-top-width');
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$largeSize = 56;
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$mediumSize = 45;
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$smallSize = 36;
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$getSize = function (size) {
	switch (size.$) {
		case 'Small':
			return $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$smallSize;
		case 'Medium':
			return $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$mediumSize;
		default:
			return $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$largeSize;
	}
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$getBorder = F4(
	function (size, width, height, includeBorder) {
		var w = A2(
			$elm$core$Maybe$withDefault,
			$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$getSize(size),
			width);
		var orZero = function (value) {
			return includeBorder ? value : 0;
		};
		var horizontalSettings = (_Utils_cmp(w, $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$smallSize) < 0) ? {leftBorder: 1, leftPadding: 2, rightBorder: 1, rightPadding: 2} : ((_Utils_cmp(w, $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$mediumSize) < 0) ? {leftBorder: 1, leftPadding: 7, rightBorder: 1, rightPadding: 7} : ((_Utils_cmp(w, $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$largeSize) < 0) ? {leftBorder: 1, leftPadding: 9, rightBorder: 1, rightPadding: 9} : {leftBorder: 1, leftPadding: 12, rightBorder: 1, rightPadding: 12}));
		var h = A2(
			$elm$core$Maybe$withDefault,
			$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$getSize(size),
			height);
		var verticalSettings = (_Utils_cmp(h, $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$smallSize) < 0) ? {bottomBorder: 2, bottomPadding: 1, topBorder: 1, topPadding: 1} : ((_Utils_cmp(h, $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$mediumSize) < 0) ? {bottomBorder: 2, bottomPadding: 7, topBorder: 1, topPadding: 7} : ((_Utils_cmp(h, $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$largeSize) < 0) ? {bottomBorder: 3, bottomPadding: 8, topBorder: 1, topPadding: 10} : {bottomBorder: 4, bottomPadding: 11, topBorder: 1, topPadding: 13}));
		return {
			bottomBorder: verticalSettings.bottomBorder,
			bottomPadding: verticalSettings.bottomPadding,
			leftBorder: orZero(horizontalSettings.leftBorder),
			leftPadding: horizontalSettings.leftPadding,
			rightBorder: orZero(horizontalSettings.rightBorder),
			rightPadding: horizontalSettings.rightPadding,
			topBorder: orZero(verticalSettings.topBorder),
			topPadding: verticalSettings.topPadding
		};
	});
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$buttonOrLinkStyles = F2(
	function (config, _v0) {
		var main_ = _v0.main_;
		var mainHovered = _v0.mainHovered;
		var background = _v0.background;
		var backgroundHovered = _v0.backgroundHovered;
		var borderBottom = _v0.borderBottom;
		var includeBorder = _v0.includeBorder;
		var cursor = config.disabled ? $rtfeldman$elm_css$Css$notAllowed : $rtfeldman$elm_css$Css$pointer;
		var bordersAndPadding = A4($NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$getBorder, config.size, config.width, config.height, includeBorder);
		return _List_fromArray(
			[
				A2($rtfeldman$elm_css$Css$property, 'transition', 'background-color 0.2s, color 0.2s, border-width 0s, border-color 0.2s'),
				$rtfeldman$elm_css$Css$textDecoration($rtfeldman$elm_css$Css$none),
				$rtfeldman$elm_css$Css$color(main_),
				$rtfeldman$elm_css$Css$visited(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$color(main_)
					])),
				$rtfeldman$elm_css$Css$hover(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$textDecoration($rtfeldman$elm_css$Css$none),
						$rtfeldman$elm_css$Css$color(mainHovered),
						$rtfeldman$elm_css$Css$cursor(cursor)
					])),
				$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$zero),
				$rtfeldman$elm_css$Css$textAlign($rtfeldman$elm_css$Css$center),
				$rtfeldman$elm_css$Css$batch(
				config.hasBorder ? _List_fromArray(
					[
						$rtfeldman$elm_css$Css$borderRadius(
						$rtfeldman$elm_css$Css$px(8)),
						$rtfeldman$elm_css$Css$borderColor(main_),
						$rtfeldman$elm_css$Css$borderBottomColor(borderBottom),
						$rtfeldman$elm_css$Css$borderStyle($rtfeldman$elm_css$Css$solid),
						includeBorder ? $rtfeldman$elm_css$Css$batch(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$borderTopWidth(
								$rtfeldman$elm_css$Css$px(bordersAndPadding.topBorder)),
								$rtfeldman$elm_css$Css$borderRightWidth(
								$rtfeldman$elm_css$Css$px(bordersAndPadding.rightBorder)),
								$rtfeldman$elm_css$Css$borderLeftWidth(
								$rtfeldman$elm_css$Css$px(bordersAndPadding.leftBorder))
							])) : $rtfeldman$elm_css$Css$borderWidth($rtfeldman$elm_css$Css$zero),
						$rtfeldman$elm_css$Css$borderBottomWidth(
						$rtfeldman$elm_css$Css$px(bordersAndPadding.bottomBorder)),
						$rtfeldman$elm_css$Css$backgroundColor(background),
						$rtfeldman$elm_css$Css$hover(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$borderColor(borderBottom),
								$rtfeldman$elm_css$Css$backgroundColor(backgroundHovered)
							])),
						A4(
						$rtfeldman$elm_css$Css$padding4,
						$rtfeldman$elm_css$Css$px(bordersAndPadding.topPadding),
						$rtfeldman$elm_css$Css$px(bordersAndPadding.rightPadding),
						$rtfeldman$elm_css$Css$px(bordersAndPadding.bottomPadding),
						$rtfeldman$elm_css$Css$px(bordersAndPadding.leftPadding)),
						$rtfeldman$elm_css$Css$height(
						$rtfeldman$elm_css$Css$px(
							$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$getSize(config.size)))
					]) : _List_fromArray(
					[
						$rtfeldman$elm_css$Css$borderWidth($rtfeldman$elm_css$Css$zero),
						$rtfeldman$elm_css$Css$padding($rtfeldman$elm_css$Css$zero),
						$rtfeldman$elm_css$Css$backgroundColor($rtfeldman$elm_css$Css$transparent)
					])),
				$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineBlock),
				$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
				$rtfeldman$elm_css$Css$width(
				$rtfeldman$elm_css$Css$px(
					A2(
						$elm$core$Maybe$withDefault,
						$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$getSize(config.size),
						config.width))),
				$rtfeldman$elm_css$Css$height(
				$rtfeldman$elm_css$Css$px(
					A2(
						$elm$core$Maybe$withDefault,
						$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$getSize(config.size),
						config.height)))
			]);
	});
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$disabledTheme = {background: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white, backgroundHovered: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white, borderBottom: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray75, includeBorder: true, mainHovered: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray75, main_: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray75};
var $rtfeldman$elm_css$Css$maxHeight = $rtfeldman$elm_css$Css$prop1('max-height');
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$renderIcon = F2(
	function (config, includeBorder) {
		var size = $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$getSize(config.size);
		var bordersAndPadding = A4($NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$getBorder, config.size, config.width, config.height, includeBorder);
		var iconHeight = config.hasBorder ? ((((size - bordersAndPadding.topPadding) - bordersAndPadding.bottomPadding) - bordersAndPadding.topBorder) - bordersAndPadding.bottomBorder) : A2($elm$core$Maybe$withDefault, size, config.height);
		var iconWidth = config.hasBorder ? ((((size - bordersAndPadding.leftPadding) - bordersAndPadding.rightPadding) - bordersAndPadding.leftBorder) - bordersAndPadding.rightBorder) : A2($elm$core$Maybe$withDefault, size, config.width);
		return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
			A2(
				$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$displayFlex,
						$rtfeldman$elm_css$Css$maxWidth(
						$rtfeldman$elm_css$Css$px(iconWidth)),
						$rtfeldman$elm_css$Css$maxHeight(
						$rtfeldman$elm_css$Css$px(iconHeight)),
						$rtfeldman$elm_css$Css$height(
						$rtfeldman$elm_css$Css$pct(100)),
						$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$auto)
					]),
				config.icon));
	});
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$renderButton = function (button_) {
	var config = button_.a;
	var theme = config.disabled ? $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$disabledTheme : $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$applyTheme(config.theme);
	return A2(
		$rtfeldman$elm_css$Html$Styled$button,
		_Utils_ap(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$class('Nri-Ui-Clickable-Svg-V1__button'),
					$rtfeldman$elm_css$Html$Styled$Attributes$type_('button'),
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
					_Utils_ap(
						A2($NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$buttonOrLinkStyles, config, theme),
						config.customStyles)),
					$rtfeldman$elm_css$Html$Styled$Attributes$disabled(config.disabled),
					$tesk9$accessible_html_with_css$Accessibility$Styled$Widget$label(config.label)
				]),
			_Utils_ap(
				$NoRedInk$noredink_ui$ClickableAttributes$toButtonAttributes(config.clickableAttributes),
				config.customAttributes)),
		_List_fromArray(
			[
				A2($NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$renderIcon, config, theme.includeBorder)
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$button = F3(
	function (name, icon, attributes) {
		return $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$renderButton(
			A3(
				$elm$core$List$foldl,
				F2(
					function (_v0, b) {
						var attribute = _v0.a;
						return attribute(b);
					}),
				A2($NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$build, name, icon),
				attributes));
	});
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$Attribute = function (a) {
	return {$: 'Attribute', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$set = function (_with) {
	return $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$Attribute(
		function (_v0) {
			var config = _v0.a;
			return $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$ButtonOrLink(
				_with(config));
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$exactHeight = function (inPx) {
	return $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$set(
		function (attributes) {
			return _Utils_update(
				attributes,
				{
					height: $elm$core$Maybe$Just(inPx)
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$exactWidth = function (inPx) {
	return $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$set(
		function (attributes) {
			return _Utils_update(
				attributes,
				{
					width: $elm$core$Maybe$Just(inPx)
				});
		});
};
var $rtfeldman$elm_css$Css$Media$feature = F2(
	function (key, _v0) {
		var value = _v0.value;
		return {
			feature: key,
			value: $elm$core$Maybe$Just(value)
		};
	});
var $rtfeldman$elm_css$Css$Media$maxWidth = function (value) {
	return A2($rtfeldman$elm_css$Css$Media$feature, 'max-width', value);
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$setClickableAttributes = function (apply) {
	return $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$set(
		function (attributes) {
			return _Utils_update(
				attributes,
				{
					clickableAttributes: apply(attributes.clickableAttributes)
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$onClick = function (msg) {
	return $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$setClickableAttributes(
		$NoRedInk$noredink_ui$ClickableAttributes$onClick(msg));
};
var $rtfeldman$elm_css$Css$Preprocess$WithMedia = F2(
	function (a, b) {
		return {$: 'WithMedia', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$Media$withMedia = $rtfeldman$elm_css$Css$Preprocess$WithMedia;
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$x = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 25 25')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M1.067 6.015c-1.423-1.422-1.423-3.526 0-4.948 1.422-1.423 3.526-1.423 4.948 0l6.371 6.37 6.371-6.37c1.422-1.423 3.783-1.423 5.176 0 1.423 1.422 1.423 3.782 0 5.176l-6.37 6.37 6.37 6.372c1.423 1.422 1.423 3.526 0 4.948-1.422 1.423-3.526 1.423-4.948 0l-6.371-6.37-6.371 6.37c-1.422 1.423-3.783 1.423-5.176 0-1.423-1.422-1.423-3.782 0-5.176l6.37-6.143-6.37-6.599z')
					]),
				_List_Nil)
			])));
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$bannerDismissButton = function (msg) {
	return A5(
		$NoRedInk$noredink_ui$Nri$Ui$styled,
		$tesk9$accessible_html_with_css$Accessibility$Styled$div,
		'dismiss-button-container',
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Css$padding2,
				$rtfeldman$elm_css$Css$zero,
				$rtfeldman$elm_css$Css$px(20)),
				$rtfeldman$elm_css$Css$displayFlex,
				A2(
				$rtfeldman$elm_css$Css$Media$withMedia,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$Media$all(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$Media$maxWidth(
								$rtfeldman$elm_css$Css$px(1000))
							]))
					]),
				_List_fromArray(
					[
						A4(
						$rtfeldman$elm_css$Css$padding4,
						$rtfeldman$elm_css$Css$px(10),
						$rtfeldman$elm_css$Css$zero,
						$rtfeldman$elm_css$Css$px(10),
						$rtfeldman$elm_css$Css$px(15))
					]))
			]),
		_List_Nil,
		_List_fromArray(
			[
				A3(
				$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$button,
				'Dismiss banner',
				$NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$x,
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$onClick(msg),
						$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$exactWidth(16),
						$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$exactHeight(16)
					]))
			]));
};
var $rtfeldman$elm_css$Css$Structure$Child = {$: 'Child'};
var $rtfeldman$elm_css$Css$Global$children = $rtfeldman$elm_css$Css$Preprocess$NestSnippet($rtfeldman$elm_css$Css$Structure$Child);
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Tip = {$: 'Tip'};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$configFromAttributes = function (attr) {
	return A3(
		$elm$core$List$foldl,
		function (_v0) {
			var set = _v0.a;
			return set;
		},
		{codeDetails: $elm$core$Maybe$Nothing, content: _List_Nil, customAttributes: _List_Nil, customStyles: _List_Nil, icon: $elm$core$Maybe$Nothing, onDismiss: $elm$core$Maybe$Nothing, role: $elm$core$Maybe$Nothing, size: $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Tiny, theme: $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Tip},
		attr);
};
var $rtfeldman$elm_css$Css$Global$div = $rtfeldman$elm_css$Css$Global$typeSelector('div');
var $rtfeldman$elm_css$Css$flexBasis = $rtfeldman$elm_css$Css$prop1('flex-basis');
var $rtfeldman$elm_css$Css$flexStart = $rtfeldman$elm_css$Css$prop1('flex-start');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$frost = $rtfeldman$elm_css$Css$hex('#eef9ff');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$greenLightest = $rtfeldman$elm_css$Css$hex('#e6ffed');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$sunshine = $rtfeldman$elm_css$Css$hex('#fffadc');
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$getBackgroundColor = F2(
	function (size, theme) {
		var _v0 = _Utils_Tuple2(size, theme);
		_v0$0:
		while (true) {
			switch (_v0.b.$) {
				case 'Tip':
					switch (_v0.a.$) {
						case 'Tiny':
							break _v0$0;
						case 'Large':
							var _v2 = _v0.a;
							var _v3 = _v0.b;
							return $rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$sunshine);
						default:
							var _v4 = _v0.a;
							var _v5 = _v0.b;
							return $rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$frost);
					}
				case 'Error':
					if (_v0.a.$ === 'Tiny') {
						break _v0$0;
					} else {
						var _v6 = _v0.b;
						return $rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purpleLight);
					}
				case 'Alert':
					if (_v0.a.$ === 'Tiny') {
						break _v0$0;
					} else {
						var _v7 = _v0.b;
						return $rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$sunshine);
					}
				case 'Success':
					if (_v0.a.$ === 'Tiny') {
						break _v0$0;
					} else {
						var _v8 = _v0.b;
						return $rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$greenLightest);
					}
				default:
					if (_v0.a.$ === 'Tiny') {
						break _v0$0;
					} else {
						var backgroundColor = _v0.b.a.backgroundColor;
						return $rtfeldman$elm_css$Css$backgroundColor(backgroundColor);
					}
			}
		}
		var _v1 = _v0.a;
		return $rtfeldman$elm_css$Css$batch(_List_Nil);
	});
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$greenDarkest = $rtfeldman$elm_css$Css$hex('#228000');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purpleDark = $rtfeldman$elm_css$Css$hex('#7721a7');
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$getColor = F2(
	function (size, theme) {
		switch (theme.$) {
			case 'Custom':
				var color = theme.a.color;
				return color;
			case 'Error':
				if (size.$ === 'Tiny') {
					return $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purple;
				} else {
					return $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purpleDark;
				}
			case 'Alert':
				if (size.$ === 'Tiny') {
					return $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$redDark;
				} else {
					return $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy;
				}
			case 'Tip':
				return $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy;
			default:
				return $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$greenDarkest;
		}
	});
var $rtfeldman$elm_css$Svg$Styled$Attributes$transform = $rtfeldman$elm_css$VirtualDom$Styled$attribute('transform');
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$bulb = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 23 25')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M21.6 12.5H19c-.3 0-.6.3-.6.6s.3.6.6.6h2.6c.3 0 .6-.3.6-.6s-.3-.6-.6-.6zM18.1 9.3c.1 0 .2 0 .3-.1l2.3-1.4c.2-.1.3-.5.1-.8-.2-.3-.5-.4-.8-.2l-2.3 1.4c-.2.1-.3.4-.3.7.2.2.4.4.7.4zM17.1 2c-.3-.2-.6-.1-.8.2l-1.5 2.2c-.1.1-.1.3-.1.5s.1.3.2.4c.1.1.3.1.4.1.2 0 .3-.1.4-.3l1.5-2.2c.2-.3.2-.7-.1-.9zM6.7 5.4c.2 0 .4-.1.5-.3.1-.2.1-.4 0-.6L5.7 2.2c-.1-.1-.3-.2-.4-.3-.2 0-.3 0-.4.1-.2.1-.3.3-.3.4 0 .2 0 .3.1.4L6.2 5c.1.3.3.4.5.4zM4 8.2L1.7 6.8c-.2-.1-.6 0-.7.2-.2.3-.1.6.2.8l2.3 1.4c.1.1.3.1.4.1l.3-.3c.1-.1.1-.3.1-.5-.1-.1-.2-.3-.3-.3zM20.6 17.8l-2.2-1.4c-.3-.2-.6-.1-.8.2-.2.3-.1.6.2.8l2.3 1.4c.3.1.6 0 .7-.2.2-.3.1-.6-.2-.8zM3.5 16.4l-2.3 1.4c-.1 0-.2.2-.3.3 0 .2 0 .3.1.5.1.1.2.2.4.3.1 0 .3 0 .4-.1L4 17.4c.3-.2.3-.5.2-.8-.1-.2-.5-.3-.7-.2zM3.7 13.1c0-.3-.3-.6-.6-.6H.6c-.3 0-.6.3-.6.6s.3.6.6.6h2.6c.1 0 .3-.1.4-.2.1-.1.1-.3.1-.4zM10.7 3.9c.3 0 .6-.3.6-.6V.6c0-.3-.3-.6-.6-.6s-.6.3-.6.6v2.7c0 .2.1.3.2.4s.3.2.4.2zM13.4 20.2H8.9c-.3 0-.6.3-.6.6s.3.6.6.6h4.5c.3 0 .6-.3.6-.6s-.3-.6-.6-.6zM10 23.5v.3c0 .4.3.7.6.7h.9c.4 0 .6-.3.6-.7v-.3c.7 0 1.3-.7 1.3-1.4H8.8c.1.7.6 1.3 1.2 1.4zM11.2 6.7c-3.1 0-5.6 2.7-5.6 6 0 .8.1 1.5.4 2.3 0 .1.1.2.1.3.2.6.6 1.1 1 1.6l1.4 2.3h5.4l1.4-2.3c.4-.5.7-1 1-1.6 0-.1.1-.2.1-.3.3-.7.4-1.5.4-2.3 0-3.3-2.5-6-5.6-6zM10.9 9c-.6 0-1.2.2-1.7.5-1.1.7-1.6 1.9-1.7 3.5 0 .3-.3.6-.6.6-.1 0-.3-.1-.4-.2-.1-.1-.2-.3-.2-.4 0-2.7 1.3-4 2.3-4.6.7-.4 1.4-.6 2.2-.7.3 0 .6.3.6.6.1.4-.2.7-.5.7z'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$transform('translate(.208 .052)')
					]),
				_List_Nil)
			])));
var $rtfeldman$elm_css$Svg$Styled$circle = $rtfeldman$elm_css$Svg$Styled$node('circle');
var $rtfeldman$elm_css$Svg$Styled$Attributes$cx = $rtfeldman$elm_css$VirtualDom$Styled$attribute('cx');
var $rtfeldman$elm_css$Svg$Styled$Attributes$cy = $rtfeldman$elm_css$VirtualDom$Styled$attribute('cy');
var $rtfeldman$elm_css$Svg$Styled$g = $rtfeldman$elm_css$Svg$Styled$node('g');
var $rtfeldman$elm_css$Svg$Styled$Attributes$r = $rtfeldman$elm_css$VirtualDom$Styled$attribute('r');
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$checkmarkInCircle = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 50 50')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$g,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Svg$Styled$circle,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$cx('25'),
								$rtfeldman$elm_css$Svg$Styled$Attributes$cy('25'),
								$rtfeldman$elm_css$Svg$Styled$Attributes$r('25')
							]),
						_List_Nil),
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$fill('#FFFFFF'),
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('M20.812258,34.6599998 C20.2178448,34.6599998 19.6442477,34.4310236 19.2140498,34.0181724 L12.7148242,27.802276 C11.790824,26.9199078 11.7584435,25.4558474 12.6419681,24.5330036 C13.5220234,23.6101598 14.9872403,23.5766229 15.9112405,24.4601475 L20.7093343,29.0477682 L32.9896327,15.7451716 C33.8569671,14.8049812 35.3198711,14.7471589 36.2577487,15.6133368 C37.1967827,16.4806712 37.2557614,17.9435752 36.3895835,18.8814528 L22.5122334,33.9152487 C22.0901306,34.3720448 21.5049691,34.6391838 20.8839576,34.6588434 C20.8608287,34.6599998 20.8365434,34.6599998 20.812258,34.6599998')
							]),
						_List_Nil)
					]))
			])));
var $rtfeldman$elm_css$Svg$Styled$Attributes$fillRule = $rtfeldman$elm_css$VirtualDom$Styled$attribute('fill-rule');
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$exclamation = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 15 15')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$fillRule('evenodd'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M15,7.5 C15,3.35786438 11.6421356,0 7.5,0 C3.35786438,0 0,3.35786438 0,7.5 C0,11.6421357 3.35786438,15 7.5,15 C11.6421356,15 15,11.6421357 15,7.5 Z M7.488,3.00005693 C6.6910533,2.99332411 6.03236555,3.58464547 6,4.33587376 C6,4.65284725 6.66,8.34332427 6.66,8.34332427 C6.73077084,8.72726384 7.08695202,9.00567371 7.5,8.9999122 L7.536,8.9999122 C7.94904798,9.00567371 8.30522916,8.72726384 8.376,8.34332427 C8.44677084,7.9593847 9,4.65850749 9,4.33587376 C8.96812494,3.59558162 8.32732494,3.00848187 7.542,3.00005693 L7.488,3.00005693 Z M7.5,12 C8.05228477,12 8.5,11.5522847 8.5,11 C8.5,10.4477153 8.05228477,10 7.5,10 C6.94771523,10 6.5,10.4477153 6.5,11 C6.5,11.5522847 6.94771523,12 7.5,12 L7.5,12 Z')
					]),
				_List_Nil)
			])));
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$green = $rtfeldman$elm_css$Css$hex('#00d93e');
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$messageIconDescription = 'Nri-Ui-Message-icon';
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$mustard = $rtfeldman$elm_css$Css$hex('#fec709');
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$ochre = $rtfeldman$elm_css$Css$hex('#f28f00');
var $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCustom = F2(
	function (attributes, _v0) {
		var record = _v0.a;
		return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$Svg(
			_Utils_update(
				record,
				{
					attributes: _Utils_ap(attributes, record.attributes)
				}));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withNriDescription = function (description) {
	return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCustom(
		_List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$nriDescription(description)
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$yellow = $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$mustard;
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$getIcon = F3(
	function (customIcon, size, theme) {
		var _v0 = function () {
			switch (size.$) {
				case 'Tiny':
					return _Utils_Tuple2(
						$rtfeldman$elm_css$Css$px(20),
						$rtfeldman$elm_css$Css$marginRight(
							$rtfeldman$elm_css$Css$px(5)));
				case 'Large':
					return _Utils_Tuple2(
						$rtfeldman$elm_css$Css$px(35),
						$rtfeldman$elm_css$Css$marginRight(
							$rtfeldman$elm_css$Css$px(10)));
				default:
					return _Utils_Tuple2(
						$rtfeldman$elm_css$Css$px(35),
						$rtfeldman$elm_css$Css$marginRight(
							$rtfeldman$elm_css$Css$px(10)));
			}
		}();
		var iconSize = _v0.a;
		var marginRight = _v0.b;
		var _v2 = _Utils_Tuple2(customIcon, theme);
		if (_v2.a.$ === 'Just') {
			var icon_ = _v2.a.a;
			return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
				A2(
					$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withNriDescription,
					$NoRedInk$noredink_ui$Nri$Ui$Message$V3$messageIconDescription,
					A2(
						$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
						_List_fromArray(
							[
								marginRight,
								$rtfeldman$elm_css$Css$flexShrink($rtfeldman$elm_css$Css$zero)
							]),
						A2(
							$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight,
							iconSize,
							A2($NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth, iconSize, icon_)))));
		} else {
			switch (_v2.b.$) {
				case 'Error':
					var _v3 = _v2.a;
					var _v4 = _v2.b;
					return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
						A2(
							$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withNriDescription,
							$NoRedInk$noredink_ui$Nri$Ui$Message$V3$messageIconDescription,
							A2(
								$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withLabel,
								'Error',
								A2(
									$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
									_List_fromArray(
										[
											marginRight,
											$rtfeldman$elm_css$Css$flexShrink($rtfeldman$elm_css$Css$zero)
										]),
									A2(
										$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight,
										iconSize,
										A2(
											$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth,
											iconSize,
											A2($NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withColor, $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purple, $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$exclamation)))))));
				case 'Alert':
					var _v5 = _v2.a;
					var _v6 = _v2.b;
					var color = function () {
						if (size.$ === 'Tiny') {
							return $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$red;
						} else {
							return $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$ochre;
						}
					}();
					return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
						A2(
							$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withNriDescription,
							$NoRedInk$noredink_ui$Nri$Ui$Message$V3$messageIconDescription,
							A2(
								$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withLabel,
								'Alert',
								A2(
									$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
									_List_fromArray(
										[
											marginRight,
											$rtfeldman$elm_css$Css$flexShrink($rtfeldman$elm_css$Css$zero)
										]),
									A2(
										$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight,
										iconSize,
										A2(
											$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth,
											iconSize,
											A2($NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withColor, color, $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$exclamation)))))));
				case 'Tip':
					var _v8 = _v2.a;
					var _v9 = _v2.b;
					switch (size.$) {
						case 'Tiny':
							return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
								A2(
									$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withNriDescription,
									$NoRedInk$noredink_ui$Nri$Ui$Message$V3$messageIconDescription,
									A2(
										$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withLabel,
										'Tip',
										A2(
											$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
											_List_fromArray(
												[
													marginRight,
													$rtfeldman$elm_css$Css$flexShrink($rtfeldman$elm_css$Css$zero)
												]),
											A2(
												$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight,
												iconSize,
												A2(
													$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth,
													iconSize,
													A2($NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withColor, $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$yellow, $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$bulb)))))));
						case 'Large':
							return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
								A2(
									$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withNriDescription,
									$NoRedInk$noredink_ui$Nri$Ui$Message$V3$messageIconDescription,
									A2(
										$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withLabel,
										'Tip',
										A2(
											$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
											_List_fromArray(
												[
													marginRight,
													$rtfeldman$elm_css$Css$flexShrink($rtfeldman$elm_css$Css$zero)
												]),
											A2(
												$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight,
												iconSize,
												A2(
													$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth,
													iconSize,
													A2($NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withColor, $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy, $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$bulb)))))));
						default:
							return A2(
								$tesk9$accessible_html_with_css$Accessibility$Styled$div,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Html$Styled$Attributes$css(
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$borderRadius(
												$rtfeldman$elm_css$Css$pct(50)),
												$rtfeldman$elm_css$Css$height(
												$rtfeldman$elm_css$Css$px(50)),
												$rtfeldman$elm_css$Css$width(
												$rtfeldman$elm_css$Css$px(50)),
												$rtfeldman$elm_css$Css$marginRight(
												$rtfeldman$elm_css$Css$px(10)),
												$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy),
												$rtfeldman$elm_css$Css$displayFlex,
												$rtfeldman$elm_css$Css$flexShrink($rtfeldman$elm_css$Css$zero),
												$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
												$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center),
												A2(
												$rtfeldman$elm_css$Css$Media$withMedia,
												_List_fromArray(
													[
														$rtfeldman$elm_css$Css$Media$all(
														_List_fromArray(
															[
																$rtfeldman$elm_css$Css$Media$maxWidth(
																$rtfeldman$elm_css$Css$px(1000))
															]))
													]),
												_List_fromArray(
													[
														$rtfeldman$elm_css$Css$height(
														$rtfeldman$elm_css$Css$px(35)),
														$rtfeldman$elm_css$Css$width(
														$rtfeldman$elm_css$Css$px(35))
													]))
											])),
										$NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$nriDescription($NoRedInk$noredink_ui$Nri$Ui$Message$V3$messageIconDescription)
									]),
								_List_fromArray(
									[
										$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
										A2(
											$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
											_List_fromArray(
												[
													A2(
													$rtfeldman$elm_css$Css$Media$withMedia,
													_List_fromArray(
														[
															$rtfeldman$elm_css$Css$Media$all(
															_List_fromArray(
																[
																	$rtfeldman$elm_css$Css$Media$maxWidth(
																	$rtfeldman$elm_css$Css$px(1000))
																]))
														]),
													_List_fromArray(
														[
															$rtfeldman$elm_css$Css$height(
															$rtfeldman$elm_css$Css$px(20))
														]))
												]),
											A2(
												$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight,
												$rtfeldman$elm_css$Css$px(32),
												A2(
													$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth,
													$rtfeldman$elm_css$Css$px(32),
													A2($NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withColor, $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$mustard, $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$bulb)))))
									]));
					}
				case 'Success':
					var _v11 = _v2.a;
					var _v12 = _v2.b;
					return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
						A2(
							$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withNriDescription,
							$NoRedInk$noredink_ui$Nri$Ui$Message$V3$messageIconDescription,
							A2(
								$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withLabel,
								'Success',
								A2(
									$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
									_List_fromArray(
										[
											marginRight,
											$rtfeldman$elm_css$Css$flexShrink($rtfeldman$elm_css$Css$zero)
										]),
									A2(
										$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight,
										iconSize,
										A2(
											$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth,
											iconSize,
											A2($NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withColor, $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$green, $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$checkmarkInCircle)))))));
				default:
					var _v13 = _v2.a;
					return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
			}
		}
	});
var $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Alert = {$: 'Alert'};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Role$alert = $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$role($tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Alert);
var $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Alertdialog = {$: 'Alertdialog'};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Role$alertDialog = $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$role($tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Alertdialog);
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$getRoleAttribute = function (role) {
	if (role.$ === 'Just') {
		if (role.a.$ === 'AlertRole') {
			var _v1 = role.a;
			return _List_fromArray(
				[$tesk9$accessible_html_with_css$Accessibility$Styled$Role$alert]);
		} else {
			var _v2 = role.a;
			return _List_fromArray(
				[$tesk9$accessible_html_with_css$Accessibility$Styled$Role$alertDialog]);
		}
	} else {
		return _List_Nil;
	}
};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$largeDismissButton = function (msg) {
	return A5(
		$NoRedInk$noredink_ui$Nri$Ui$styled,
		$tesk9$accessible_html_with_css$Accessibility$Styled$div,
		'dismiss-button-container',
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Css$padding2,
				$rtfeldman$elm_css$Css$zero,
				$rtfeldman$elm_css$Css$px(20)),
				$rtfeldman$elm_css$Css$displayFlex,
				A2(
				$rtfeldman$elm_css$Css$Media$withMedia,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$Media$all(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$Media$maxWidth(
								$rtfeldman$elm_css$Css$px(1000))
							]))
					]),
				_List_fromArray(
					[
						A4(
						$rtfeldman$elm_css$Css$padding4,
						$rtfeldman$elm_css$Css$px(10),
						$rtfeldman$elm_css$Css$zero,
						$rtfeldman$elm_css$Css$px(10),
						$rtfeldman$elm_css$Css$px(15))
					]))
			]),
		_List_Nil,
		_List_fromArray(
			[
				A3(
				$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$button,
				'Dismiss message',
				$NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$x,
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$onClick(msg),
						$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$exactWidth(16),
						$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$exactHeight(16)
					]))
			]));
};
var $rtfeldman$elm_css$Css$nthChild = function (str) {
	return $rtfeldman$elm_css$Css$pseudoClass('nth-child(' + (str + ')'));
};
var $rtfeldman$elm_css$Css$Global$p = $rtfeldman$elm_css$Css$Global$typeSelector('p');
var $rtfeldman$elm_css$Css$start = $rtfeldman$elm_css$Css$prop1('start');
var $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$css = function (styles) {
	return $NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$set(
		function (config) {
			return _Utils_update(
				config,
				{
					customStyles: A2($elm$core$List$append, config.customStyles, styles)
				});
		});
};
var $rtfeldman$elm_css$Css$marginLeft = $rtfeldman$elm_css$Css$prop1('margin-left');
var $rtfeldman$elm_css$Css$middle = $rtfeldman$elm_css$Css$prop1('middle');
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$tinyDismissButton = function (msg) {
	return A5(
		$NoRedInk$noredink_ui$Nri$Ui$styled,
		$tesk9$accessible_html_with_css$Accessibility$Styled$div,
		'dismiss-button-container',
		_List_Nil,
		_List_Nil,
		_List_fromArray(
			[
				A3(
				$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$button,
				'Dismiss message',
				$NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$x,
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$onClick(msg),
						$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$exactWidth(16),
						$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$exactHeight(16),
						$NoRedInk$noredink_ui$Nri$Ui$ClickableSvg$V2$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$verticalAlign($rtfeldman$elm_css$Css$middle),
								$rtfeldman$elm_css$Css$marginLeft(
								$rtfeldman$elm_css$Css$px(5))
							]))
					]))
			]));
};
var $rtfeldman$elm_css$Css$block = {display: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'block'};
var $rtfeldman$elm_css$Html$Styled$code = $rtfeldman$elm_css$Html$Styled$node('code');
var $tesk9$accessible_html_with_css$Accessibility$Styled$code = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$code(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $rtfeldman$elm_css$Html$Styled$details = $rtfeldman$elm_css$Html$Styled$node('details');
var $tesk9$accessible_html_with_css$Accessibility$Styled$details = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$details(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $rtfeldman$elm_css$Css$fontFamily = $rtfeldman$elm_css$Css$prop1('font-family');
var $rtfeldman$elm_css$Css$monospace = {fontFamily: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'monospace'};
var $rtfeldman$elm_css$Html$Styled$summary = $rtfeldman$elm_css$Html$Styled$node('summary');
var $tesk9$accessible_html_with_css$Accessibility$Styled$summary = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$summary(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$viewCodeDetails = function (errorMessageForEngineers) {
	return A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$details,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$summary,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$css(
						_List_fromArray(
							[
								$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont,
								$rtfeldman$elm_css$Css$fontSize(
								$rtfeldman$elm_css$Css$px(14)),
								$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray45)
							]))
					]),
				_List_fromArray(
					[
						$tesk9$accessible_html_with_css$Accessibility$Styled$text('Details for NoRedInk engineers')
					])),
				A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$code,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$block),
								$rtfeldman$elm_css$Css$whiteSpace($rtfeldman$elm_css$Css$normal),
								$rtfeldman$elm_css$Css$overflowWrap($rtfeldman$elm_css$Css$breakWord),
								$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray45),
								$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray96),
								A3(
								$rtfeldman$elm_css$Css$border3,
								$rtfeldman$elm_css$Css$px(1),
								$rtfeldman$elm_css$Css$solid,
								$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray92),
								$rtfeldman$elm_css$Css$borderRadius(
								$rtfeldman$elm_css$Css$px(3)),
								A2(
								$rtfeldman$elm_css$Css$padding2,
								$rtfeldman$elm_css$Css$px(2),
								$rtfeldman$elm_css$Css$px(4)),
								$rtfeldman$elm_css$Css$fontSize(
								$rtfeldman$elm_css$Css$px(12)),
								$rtfeldman$elm_css$Css$fontFamily($rtfeldman$elm_css$Css$monospace)
							]))
					]),
				_List_fromArray(
					[
						$tesk9$accessible_html_with_css$Accessibility$Styled$text(errorMessageForEngineers)
					]))
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$view = function (attributes_) {
	var attributes = $NoRedInk$noredink_ui$Nri$Ui$Message$V3$configFromAttributes(attributes_);
	var backgroundColor_ = A2($NoRedInk$noredink_ui$Nri$Ui$Message$V3$getBackgroundColor, attributes.size, attributes.theme);
	var color_ = A2($NoRedInk$noredink_ui$Nri$Ui$Message$V3$getColor, attributes.size, attributes.theme);
	var baseStyles = _List_fromArray(
		[
			$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont,
			$rtfeldman$elm_css$Css$color(color_),
			$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
			$rtfeldman$elm_css$Css$batch(attributes.customStyles)
		]);
	var icon_ = A3($NoRedInk$noredink_ui$Nri$Ui$Message$V3$getIcon, attributes.icon, attributes.size, attributes.theme);
	var role = $NoRedInk$noredink_ui$Nri$Ui$Message$V3$getRoleAttribute(attributes.role);
	var _v0 = attributes.size;
	switch (_v0.$) {
		case 'Tiny':
			var tinyMessage = A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$div,
				_Utils_ap(
					_List_fromArray(
						[
							$NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$nriDescription('Nri-Ui-Message--tiny'),
							$rtfeldman$elm_css$Html$Styled$Attributes$css(
							_Utils_ap(
								baseStyles,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$displayFlex,
										$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$start),
										$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
										$rtfeldman$elm_css$Css$paddingTop(
										$rtfeldman$elm_css$Css$px(6)),
										$rtfeldman$elm_css$Css$paddingBottom(
										$rtfeldman$elm_css$Css$px(8)),
										$rtfeldman$elm_css$Css$fontSize(
										$rtfeldman$elm_css$Css$px(13)),
										$rtfeldman$elm_css$Css$Global$children(
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$Global$div(
												_List_fromArray(
													[
														A2(
														$rtfeldman$elm_css$Css$nthChild,
														'2',
														_List_fromArray(
															[
																$rtfeldman$elm_css$Css$marginTop(
																$rtfeldman$elm_css$Css$px(-3)),
																$rtfeldman$elm_css$Css$Global$children(
																_List_fromArray(
																	[
																		$rtfeldman$elm_css$Css$Global$p(
																		_List_fromArray(
																			[
																				$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$zero)
																			]))
																	]))
															]))
													]))
											]))
									])))
						]),
					_Utils_ap(role, attributes.customAttributes)),
				_List_fromArray(
					[
						A5(
						$NoRedInk$noredink_ui$Nri$Ui$styled,
						$tesk9$accessible_html_with_css$Accessibility$Styled$div,
						'Nri-Ui-Message--icon',
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$alignSelf($rtfeldman$elm_css$Css$flexStart)
							]),
						_List_Nil,
						_List_fromArray(
							[icon_])),
						A2($tesk9$accessible_html_with_css$Accessibility$Styled$div, _List_Nil, attributes.content),
						function () {
						var _v2 = attributes.onDismiss;
						if (_v2.$ === 'Nothing') {
							return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
						} else {
							var msg = _v2.a;
							return $NoRedInk$noredink_ui$Nri$Ui$Message$V3$tinyDismissButton(msg);
						}
					}()
					]));
			var _v1 = attributes.codeDetails;
			if (_v1.$ === 'Just') {
				var details = _v1.a;
				return A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$div,
					_List_Nil,
					_List_fromArray(
						[
							tinyMessage,
							$NoRedInk$noredink_ui$Nri$Ui$Message$V3$viewCodeDetails(details)
						]));
			} else {
				return tinyMessage;
			}
		case 'Large':
			return A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$div,
				_Utils_ap(
					_List_fromArray(
						[
							$NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$nriDescription('Nri-Ui-Message-large'),
							$rtfeldman$elm_css$Html$Styled$Attributes$css(
							_Utils_ap(
								baseStyles,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$borderRadius(
										$rtfeldman$elm_css$Css$px(8)),
										$rtfeldman$elm_css$Css$padding(
										$rtfeldman$elm_css$Css$px(20)),
										backgroundColor_,
										$NoRedInk$noredink_ui$Nri$Ui$Shadows$V1$low,
										A2(
										$rtfeldman$elm_css$Css$Media$withMedia,
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$Media$all(
												_List_fromArray(
													[
														$rtfeldman$elm_css$Css$Media$maxWidth(
														$rtfeldman$elm_css$Css$px(1000))
													]))
											]),
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$padding(
												$rtfeldman$elm_css$Css$px(15))
											]))
									])))
						]),
					_Utils_ap(role, attributes.customAttributes)),
				_List_fromArray(
					[
						A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$div,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$Attributes$css(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$displayFlex,
										$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
										$rtfeldman$elm_css$Css$fontSize(
										$rtfeldman$elm_css$Css$px(15)),
										$rtfeldman$elm_css$Css$fontWeight(
										$rtfeldman$elm_css$Css$int(600)),
										$rtfeldman$elm_css$Css$lineHeight(
										$rtfeldman$elm_css$Css$px(21))
									]))
							]),
						_List_fromArray(
							[
								icon_,
								A2(
								$tesk9$accessible_html_with_css$Accessibility$Styled$div,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Html$Styled$Attributes$css(
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$minWidth(
												$rtfeldman$elm_css$Css$px(100)),
												$rtfeldman$elm_css$Css$flexBasis(
												$rtfeldman$elm_css$Css$px(100)),
												$rtfeldman$elm_css$Css$flexGrow(
												$rtfeldman$elm_css$Css$int(1))
											]))
									]),
								attributes.content),
								function () {
								var _v3 = attributes.onDismiss;
								if (_v3.$ === 'Nothing') {
									return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
								} else {
									var msg = _v3.a;
									return $NoRedInk$noredink_ui$Nri$Ui$Message$V3$largeDismissButton(msg);
								}
							}()
							])),
						function () {
						var _v4 = attributes.codeDetails;
						if (_v4.$ === 'Just') {
							var details = _v4.a;
							return $NoRedInk$noredink_ui$Nri$Ui$Message$V3$viewCodeDetails(details);
						} else {
							return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
						}
					}()
					]));
		default:
			return A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$div,
				_Utils_ap(
					_List_fromArray(
						[
							$NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$nriDescription('Nri-Ui-Message-banner'),
							$rtfeldman$elm_css$Html$Styled$Attributes$css(
							_Utils_ap(
								baseStyles,
								_List_fromArray(
									[
										backgroundColor_,
										$rtfeldman$elm_css$Css$padding(
										$rtfeldman$elm_css$Css$px(20)),
										A2(
										$rtfeldman$elm_css$Css$Media$withMedia,
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$Media$all(
												_List_fromArray(
													[
														$rtfeldman$elm_css$Css$Media$maxWidth(
														$rtfeldman$elm_css$Css$px(1000))
													]))
											]),
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$padding(
												$rtfeldman$elm_css$Css$px(15))
											]))
									])))
						]),
					_Utils_ap(role, attributes.customAttributes)),
				_List_fromArray(
					[
						A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$div,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$Attributes$css(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
										$rtfeldman$elm_css$Css$displayFlex,
										$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center)
									]))
							]),
						_List_fromArray(
							[
								A2(
								$tesk9$accessible_html_with_css$Accessibility$Styled$div,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Html$Styled$Attributes$css(
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
												$rtfeldman$elm_css$Css$displayFlex,
												$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center),
												$rtfeldman$elm_css$Css$width(
												$rtfeldman$elm_css$Css$pct(100)),
												$rtfeldman$elm_css$Css$fontSize(
												$rtfeldman$elm_css$Css$px(20)),
												$rtfeldman$elm_css$Css$fontWeight(
												$rtfeldman$elm_css$Css$int(700)),
												$rtfeldman$elm_css$Css$lineHeight(
												$rtfeldman$elm_css$Css$num(1.4)),
												A2(
												$rtfeldman$elm_css$Css$Media$withMedia,
												_List_fromArray(
													[
														$rtfeldman$elm_css$Css$Media$all(
														_List_fromArray(
															[
																$rtfeldman$elm_css$Css$Media$maxWidth(
																$rtfeldman$elm_css$Css$px(1000))
															]))
													]),
												_List_fromArray(
													[
														$rtfeldman$elm_css$Css$fontSize(
														$rtfeldman$elm_css$Css$px(15)),
														$rtfeldman$elm_css$Css$fontWeight(
														$rtfeldman$elm_css$Css$int(600))
													]))
											]))
									]),
								_List_fromArray(
									[
										icon_,
										A5(
										$NoRedInk$noredink_ui$Nri$Ui$styled,
										$tesk9$accessible_html_with_css$Accessibility$Styled$div,
										'banner-alert-notification',
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$fontSize(
												$rtfeldman$elm_css$Css$px(20)),
												$rtfeldman$elm_css$Css$fontWeight(
												$rtfeldman$elm_css$Css$int(700)),
												$rtfeldman$elm_css$Css$lineHeight(
												$rtfeldman$elm_css$Css$num(1.4)),
												$rtfeldman$elm_css$Css$maxWidth(
												$rtfeldman$elm_css$Css$px(600)),
												$rtfeldman$elm_css$Css$minWidth(
												$rtfeldman$elm_css$Css$px(100)),
												$rtfeldman$elm_css$Css$flexShrink(
												$rtfeldman$elm_css$Css$int(1)),
												$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont,
												A2(
												$rtfeldman$elm_css$Css$Media$withMedia,
												_List_fromArray(
													[
														$rtfeldman$elm_css$Css$Media$all(
														_List_fromArray(
															[
																$rtfeldman$elm_css$Css$Media$maxWidth(
																$rtfeldman$elm_css$Css$px(1000))
															]))
													]),
												_List_fromArray(
													[
														$rtfeldman$elm_css$Css$fontSize(
														$rtfeldman$elm_css$Css$px(15)),
														$rtfeldman$elm_css$Css$fontWeight(
														$rtfeldman$elm_css$Css$int(600))
													]))
											]),
										_List_Nil,
										attributes.content)
									])),
								function () {
								var _v5 = attributes.onDismiss;
								if (_v5.$ === 'Nothing') {
									return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
								} else {
									var msg = _v5.a;
									return $NoRedInk$noredink_ui$Nri$Ui$Message$V3$bannerDismissButton(msg);
								}
							}()
							])),
						function () {
						var _v6 = attributes.codeDetails;
						if (_v6.$ === 'Just') {
							var details = _v6.a;
							return $NoRedInk$noredink_ui$Nri$Ui$Message$V3$viewCodeDetails(details);
						} else {
							return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
						}
					}()
					]));
	}
};
var $NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$view = F2(
	function (idValue, config) {
		var _v0 = _Utils_Tuple2(
			$NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$getErrorMessage(config.error),
			config.guidance);
		if (_v0.a.$ === 'Just') {
			var m = _v0.a.a;
			return $NoRedInk$noredink_ui$Nri$Ui$Message$V3$view(
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$Message$V3$tiny,
						$NoRedInk$noredink_ui$Nri$Ui$Message$V3$error,
						$NoRedInk$noredink_ui$Nri$Ui$Message$V3$plaintext(m),
						$NoRedInk$noredink_ui$Nri$Ui$Message$V3$alertRole,
						$NoRedInk$noredink_ui$Nri$Ui$Message$V3$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$important(
								$rtfeldman$elm_css$Css$paddingTop($rtfeldman$elm_css$Css$zero)),
								$rtfeldman$elm_css$Css$important(
								$rtfeldman$elm_css$Css$paddingBottom($rtfeldman$elm_css$Css$zero)),
								$rtfeldman$elm_css$Css$marginTop(
								$rtfeldman$elm_css$Css$px(5))
							]))
					]));
		} else {
			if (_v0.b.$ === 'Just') {
				var guidanceMessage = _v0.b.a;
				return $NoRedInk$noredink_ui$Nri$Ui$Text$V6$caption(
					_List_fromArray(
						[
							$NoRedInk$noredink_ui$Nri$Ui$Text$V6$id(idValue + '_guidance'),
							$NoRedInk$noredink_ui$Nri$Ui$Text$V6$plaintext(guidanceMessage),
							$NoRedInk$noredink_ui$Nri$Ui$Text$V6$css(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$important(
									$rtfeldman$elm_css$Css$paddingTop($rtfeldman$elm_css$Css$zero)),
									$rtfeldman$elm_css$Css$important(
									$rtfeldman$elm_css$Css$paddingBottom($rtfeldman$elm_css$Css$zero)),
									$rtfeldman$elm_css$Css$important(
									$rtfeldman$elm_css$Css$marginTop(
										$rtfeldman$elm_css$Css$px(5))),
									$rtfeldman$elm_css$Css$lineHeight(
									$rtfeldman$elm_css$Css$int(1))
								]))
						]));
			} else {
				return $rtfeldman$elm_css$Html$Styled$text('');
			}
		}
	});
var $rtfeldman$elm_css$Html$Styled$Attributes$for = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('htmlFor');
var $elm$virtual_dom$VirtualDom$style = _VirtualDom_style;
var $rtfeldman$elm_css$VirtualDom$Styled$style = F2(
	function (key, val) {
		return A3(
			$rtfeldman$elm_css$VirtualDom$Styled$Attribute,
			A2($elm$virtual_dom$VirtualDom$style, key, val),
			false,
			'');
	});
var $rtfeldman$elm_css$Html$Styled$Attributes$style = $rtfeldman$elm_css$VirtualDom$Styled$style;
var $tesk9$accessible_html_with_css$Accessibility$Styled$Style$invisible = _List_fromArray(
	[
		A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'property', 'clip rect(1px, 1px, 1px, 1px)'),
		A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'position', 'absolute'),
		A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'height', '1px'),
		A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'width', '1px'),
		A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'overflow', 'hidden'),
		A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'margin', '-1px'),
		A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'padding', '0'),
		A2($rtfeldman$elm_css$Html$Styled$Attributes$style, 'border', '0')
	]);
var $rtfeldman$elm_css$Html$Styled$label = $rtfeldman$elm_css$Html$Styled$node('label');
var $tesk9$accessible_html_with_css$Accessibility$Styled$label = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$label(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$label = F2(
	function (theme, inError) {
		var sharedStyles = $rtfeldman$elm_css$Css$batch(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white),
					$rtfeldman$elm_css$Css$left(
					$rtfeldman$elm_css$Css$px(10)),
					$rtfeldman$elm_css$Css$top($rtfeldman$elm_css$Css$zero),
					$rtfeldman$elm_css$Css$fontSize(
					$rtfeldman$elm_css$Css$px(12)),
					$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont,
					$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
					$rtfeldman$elm_css$Css$fontWeight(
					$rtfeldman$elm_css$Css$int(600)),
					$rtfeldman$elm_css$Css$borderRadius(
					$rtfeldman$elm_css$Css$px(4)),
					A2($rtfeldman$elm_css$Css$property, 'transition', 'all 0.4s ease')
				]));
		switch (theme.$) {
			case 'Standard':
				return $rtfeldman$elm_css$Css$batch(
					_List_fromArray(
						[
							sharedStyles,
							A2(
							$rtfeldman$elm_css$Css$padding2,
							$rtfeldman$elm_css$Css$px(2),
							$rtfeldman$elm_css$Css$px(5)),
							$rtfeldman$elm_css$Css$fontSize(
							$rtfeldman$elm_css$Css$px(12)),
							$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy),
							inError ? $rtfeldman$elm_css$Css$batch(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purple)
								])) : $rtfeldman$elm_css$Css$batch(_List_Nil)
						]));
			case 'UserGenerated':
				return $rtfeldman$elm_css$Css$batch(
					_List_fromArray(
						[
							sharedStyles,
							A2(
							$rtfeldman$elm_css$Css$padding2,
							$rtfeldman$elm_css$Css$zero,
							$rtfeldman$elm_css$Css$px(5)),
							$rtfeldman$elm_css$Css$fontSize(
							$rtfeldman$elm_css$Css$px(12)),
							$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy),
							inError ? $rtfeldman$elm_css$Css$batch(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purple)
								])) : $rtfeldman$elm_css$Css$batch(_List_Nil)
						]));
			case 'ContentCreation':
				return $rtfeldman$elm_css$Css$batch(
					_List_fromArray(
						[
							sharedStyles,
							A3(
							$rtfeldman$elm_css$Css$border3,
							$rtfeldman$elm_css$Css$px(1),
							$rtfeldman$elm_css$Css$solid,
							$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray75),
							$rtfeldman$elm_css$Css$borderRadius(
							$rtfeldman$elm_css$Css$px(4)),
							A2(
							$rtfeldman$elm_css$Css$padding2,
							$rtfeldman$elm_css$Css$zero,
							$rtfeldman$elm_css$Css$px(5)),
							$rtfeldman$elm_css$Css$fontSize(
							$rtfeldman$elm_css$Css$px(11)),
							$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray45),
							A2(
							$rtfeldman$elm_css$Css$padding2,
							$rtfeldman$elm_css$Css$px(2),
							$rtfeldman$elm_css$Css$px(5))
						]));
			default:
				return $rtfeldman$elm_css$Css$batch(
					_List_fromArray(
						[
							sharedStyles,
							A2(
							$rtfeldman$elm_css$Css$padding2,
							$rtfeldman$elm_css$Css$zero,
							$rtfeldman$elm_css$Css$px(5)),
							A3(
							$rtfeldman$elm_css$Css$border3,
							$rtfeldman$elm_css$Css$px(1),
							$rtfeldman$elm_css$Css$solid,
							$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray75),
							$rtfeldman$elm_css$Css$borderRadius(
							$rtfeldman$elm_css$Css$px(4)),
							$rtfeldman$elm_css$Css$fontSize(
							$rtfeldman$elm_css$Css$px(15)),
							$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy),
							inError ? $rtfeldman$elm_css$Css$batch(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purple),
									$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white),
									$rtfeldman$elm_css$Css$borderColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purple)
								])) : $rtfeldman$elm_css$Css$batch(_List_Nil)
						]));
		}
	});
var $NoRedInk$noredink_ui$InputLabelInternal$view = F2(
	function (_v0, config) {
		var _for = _v0._for;
		var label = _v0.label;
		var theme = _v0.theme;
		var extraStyles = config.hideLabel ? $tesk9$accessible_html_with_css$Accessibility$Styled$Style$invisible : _List_Nil;
		return A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$label,
			_Utils_ap(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$for(_for),
						$rtfeldman$elm_css$Html$Styled$Attributes$css(
						_List_fromArray(
							[
								A2(
								$NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$label,
								theme,
								$NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$getIsInError(config.error)),
								config.noMarginTop ? $rtfeldman$elm_css$Css$top(
								$rtfeldman$elm_css$Css$px(-$NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$defaultMarginTop)) : $rtfeldman$elm_css$Css$batch(_List_Nil)
							]))
					]),
				extraStyles),
			_List_fromArray(
				[
					$tesk9$accessible_html_with_css$Accessibility$Styled$text(label)
				]));
	});
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$view = F2(
	function (label, attributes) {
		var onEnter_ = function (msg) {
			return A2(
				$rtfeldman$elm_css$Html$Styled$Events$on,
				'keydown',
				$Gizra$elm_keyboard_event$Keyboard$Event$considerKeyboardEvent(
					function (event) {
						var _v4 = event.key;
						if ((_v4.$ === 'Just') && (_v4.a === 'Enter')) {
							return $elm$core$Maybe$Just(msg);
						} else {
							return $elm$core$Maybe$Nothing;
						}
					}));
		};
		var maybeAttr = F2(
			function (attr, maybeValue) {
				return A2(
					$elm$core$Maybe$withDefault,
					$NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$none,
					A2($elm$core$Maybe$map, attr, maybeValue));
			});
		var eventsAndValues = $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$applyEvents(attributes);
		var stringValue = A2(
			$elm$core$Maybe$withDefault,
			'',
			A3($elm$core$Maybe$map2, $elm$core$Basics$identity, eventsAndValues.toString, eventsAndValues.currentValue));
		var config = $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$applyConfig(attributes);
		var idValue = function () {
			var _v3 = config.id;
			if (_v3.$ === 'Just') {
				var id_ = _v3.a;
				return id_;
			} else {
				return $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$generateId(label);
			}
		}();
		var isInError = $NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$getIsInError(config.error);
		var maybeStep = function () {
			var _v2 = config.fieldType;
			if ((_v2.$ === 'Just') && (_v2.a === 'number')) {
				return _List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$step('any')
					]);
			} else {
				return _List_Nil;
			}
		}();
		var placeholder_ = A2($elm$core$Maybe$withDefault, label, config.placeholder);
		var _v0 = function () {
			var _v1 = _Utils_Tuple2(config.disabled, config.loading);
			if (!_v1.a) {
				if (!_v1.b) {
					return _Utils_Tuple2(
						$rtfeldman$elm_css$Css$num(1),
						false);
				} else {
					return _Utils_Tuple2(
						$rtfeldman$elm_css$Css$num(0.5),
						true);
				}
			} else {
				return _Utils_Tuple2(
					$rtfeldman$elm_css$Css$num(0.4),
					true);
			}
		}();
		var opacity = _v0.a;
		var disabled_ = _v0.b;
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
					A2(
						$elm$core$List$cons,
						$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$relative),
						A2(
							$elm$core$List$cons,
							$rtfeldman$elm_css$Css$opacity(opacity),
							config.containerCss)))
				]),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$input,
					_Utils_ap(
						maybeStep,
						_Utils_ap(
							A2(
								$elm$core$List$map,
								$rtfeldman$elm_css$Html$Styled$Attributes$map($elm$core$Basics$never),
								$elm$core$List$reverse(config.custom)),
							_List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$Attributes$id(idValue),
									A2($NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$describedBy, idValue, config),
									$rtfeldman$elm_css$Html$Styled$Attributes$css(
									_List_fromArray(
										[
											A2($NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$input, config.inputStyle, isInError),
											_Utils_eq(config.inputStyle, $NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$Writing) ? A2(
											$rtfeldman$elm_css$Css$Global$withClass,
											'override-sass-styles',
											_List_fromArray(
												[
													$rtfeldman$elm_css$Css$textAlign($rtfeldman$elm_css$Css$center),
													$rtfeldman$elm_css$Css$height($rtfeldman$elm_css$Css$auto)
												])) : A2(
											$rtfeldman$elm_css$Css$Global$withClass,
											'override-sass-styles',
											_List_fromArray(
												[
													$rtfeldman$elm_css$Css$height(
													$rtfeldman$elm_css$Css$px(45))
												])),
											A2(
											$rtfeldman$elm_css$Css$pseudoElement,
											'-webkit-search-cancel-button',
											_List_fromArray(
												[
													$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$none)
												])),
											config.noMarginTop ? $rtfeldman$elm_css$Css$important(
											$rtfeldman$elm_css$Css$marginTop($rtfeldman$elm_css$Css$zero)) : $rtfeldman$elm_css$Css$batch(_List_Nil),
											$rtfeldman$elm_css$Css$important(
											$rtfeldman$elm_css$Css$batch(config.inputCss))
										])),
									$rtfeldman$elm_css$Html$Styled$Attributes$placeholder(placeholder_),
									$rtfeldman$elm_css$Html$Styled$Attributes$value(stringValue),
									$rtfeldman$elm_css$Html$Styled$Attributes$disabled(disabled_),
									$rtfeldman$elm_css$Html$Styled$Attributes$readonly(config.readOnly),
									A2(maybeAttr, $rtfeldman$elm_css$Html$Styled$Events$onInput, eventsAndValues.onInput),
									A2(maybeAttr, $rtfeldman$elm_css$Html$Styled$Events$onFocus, eventsAndValues.onFocus),
									A2(maybeAttr, $rtfeldman$elm_css$Html$Styled$Events$onBlur, eventsAndValues.onBlur),
									$rtfeldman$elm_css$Html$Styled$Attributes$autofocus(config.autofocus),
									A2(maybeAttr, $rtfeldman$elm_css$Html$Styled$Attributes$type_, config.fieldType),
									A2(
									maybeAttr,
									$rtfeldman$elm_css$Html$Styled$Attributes$attribute('inputmode'),
									config.inputMode),
									A2(
									maybeAttr,
									$rtfeldman$elm_css$Html$Styled$Attributes$attribute('autocomplete'),
									config.autocomplete),
									A2(maybeAttr, onEnter_, eventsAndValues.onEnter),
									$rtfeldman$elm_css$Html$Styled$Attributes$class('override-sass-styles'),
									A2(
									$rtfeldman$elm_css$Html$Styled$Attributes$attribute,
									'aria-invalid',
									isInError ? 'true' : 'false')
								]))),
					_List_Nil),
					A2(
					$NoRedInk$noredink_ui$InputLabelInternal$view,
					{_for: idValue, label: label, theme: config.inputStyle},
					config),
					A2(
					$elm$core$Maybe$withDefault,
					$rtfeldman$elm_css$Html$Styled$text(''),
					A3(
						$elm$core$Maybe$map2,
						F2(
							function (view_, onStringInput_) {
								return view_(
									{label: label, noMarginTop: config.noMarginTop, onInput: onStringInput_, stringValue: stringValue});
							}),
						eventsAndValues.floatingContent,
						eventsAndValues.onInput)),
					A2($NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$view, idValue, config)
				]));
	});
var $author$project$LoginPage$view = function (model) {
	return $NoRedInk$noredink_ui$Nri$Ui$Container$V2$view(
		_List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Container$V2$css(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$width(
						$rtfeldman$elm_css$Css$pct(33)),
						$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$auto)
					])),
				$NoRedInk$noredink_ui$Nri$Ui$Container$V2$html(
				_List_fromArray(
					[
						A2(
						$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h3,
						_List_fromArray(
							[
								$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$css(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$marginBottom(
										$rtfeldman$elm_css$Css$px(20))
									]))
							]),
						_List_fromArray(
							[
								$tesk9$accessible_html_with_css$Accessibility$Styled$text('Prijava korisnika')
							])),
						A2(
						$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$view,
						'Email',
						_List_fromArray(
							[
								$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$email($author$project$LoginPage$Email),
								$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$value(model.email)
							])),
						A2(
						$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$view,
						'Password',
						_List_fromArray(
							[
								$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$currentPassword(
								{onInput: $author$project$LoginPage$Password, setShowPassword: $author$project$LoginPage$SetShowPassword, showPassword: model.showPassword}),
								$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$value(model.password)
							])),
						A2(
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
						'Prijavi se',
						_List_fromArray(
							[
								$NoRedInk$noredink_ui$Nri$Ui$Button$V10$primary,
								$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick($author$project$LoginPage$SubmittedForm),
								$NoRedInk$noredink_ui$Nri$Ui$Button$V10$css(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$marginTop(
										$rtfeldman$elm_css$Css$px(20))
									]))
							]))
					]))
			]));
};
var $author$project$ProfessorPage$ActivitiesPage$ActivityTypeSelected = function (a) {
	return {$: 'ActivityTypeSelected', a: a};
};
var $author$project$ProfessorPage$ActivitiesPage$Dismiss = {$: 'Dismiss'};
var $author$project$Util$DisplayMode = {$: 'DisplayMode'};
var $author$project$ProfessorPage$ActivitiesPage$Edit = function (a) {
	return {$: 'Edit', a: a};
};
var $author$project$ProfessorPage$ActivitiesPage$EndDate = function (a) {
	return {$: 'EndDate', a: a};
};
var $author$project$ProfessorPage$ActivitiesPage$Focus = function (a) {
	return {$: 'Focus', a: a};
};
var $author$project$ProfessorPage$ActivitiesPage$OpenModal = F2(
	function (a, b) {
		return {$: 'OpenModal', a: a, b: b};
	});
var $author$project$ProfessorPage$ActivitiesPage$Points = function (a) {
	return {$: 'Points', a: a};
};
var $author$project$ProfessorPage$ActivitiesPage$SaveActivity = {$: 'SaveActivity'};
var $author$project$ProfessorPage$ActivitiesPage$StartDate = function (a) {
	return {$: 'StartDate', a: a};
};
var $author$project$ProfessorPage$ActivitiesPage$SwitchSingup = function (a) {
	return {$: 'SwitchSingup', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Select$V8$Attribute = function (a) {
	return {$: 'Attribute', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Select$V8$choices = F2(
	function (valueToString, choices_) {
		return $NoRedInk$noredink_ui$Nri$Ui$Select$V8$Attribute(
			function (config) {
				return _Utils_update(
					config,
					{
						choices: choices_,
						valueToString: $elm$core$Maybe$Just(valueToString)
					});
			});
	});
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$Attribute = function (a) {
	return {$: 'Attribute', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$closeButton = $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$Attribute(
	function (attrs) {
		return _Utils_update(
			attrs,
			{closeButton: true});
	});
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$closeButtonId = 'modal__close-button-x';
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$Column = F4(
	function (a, b, c, d) {
		return {$: 'Column', a: a, b: b, c: c, d: d};
	});
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$custom = function (options) {
	return A4(
		$NoRedInk$noredink_ui$Nri$Ui$Table$V5$Column,
		options.header,
		options.view,
		$rtfeldman$elm_css$Css$width(options.width),
		options.cellStyles);
};
var $NoRedInk$noredink_ui$Nri$Ui$Select$V8$defaultDisplayText = function (text) {
	return $NoRedInk$noredink_ui$Nri$Ui$Select$V8$Attribute(
		function (config) {
			return _Utils_update(
				config,
				{
					defaultDisplayText: $elm$core$Maybe$Just(text)
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Alert = {$: 'Alert'};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$alert = $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Attribute(
	function (config) {
		return _Utils_update(
			config,
			{theme: $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Alert});
	});
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Large = {$: 'Large'};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$large = $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Attribute(
	function (config) {
		return _Utils_update(
			config,
			{size: $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Large});
	});
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$onDismiss = function (msg) {
	return $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Attribute(
		function (config) {
			return _Utils_update(
				config,
				{
					onDismiss: $elm$core$Maybe$Just(msg)
				});
		});
};
var $author$project$Util$errorMessage = function (dismissMsg) {
	return $NoRedInk$noredink_ui$Nri$Ui$Message$V3$view(
		_List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$alert,
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$large,
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$onDismiss(dismissMsg),
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$plaintext('Došlo je do neočekivane greške 😞')
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$Tagline = {$: 'Tagline'};
var $rtfeldman$elm_css$Html$Styled$h2 = $rtfeldman$elm_css$Html$Styled$node('h2');
var $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h2 = A2(
	$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$view,
	$rtfeldman$elm_css$Html$Styled$h2,
	{attributes: _List_Nil, css: _List_Nil, style: $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$Tagline});
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$highlightBlueDark = $rtfeldman$elm_css$Css$hex('#002e85');
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon = function (icon_) {
	return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$set(
		function (attributes) {
			return _Utils_update(
				attributes,
				{
					icon: $elm$core$Maybe$Just(icon_)
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$custom = function (attributes) {
	return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$set(
		function (config) {
			return _Utils_update(
				config,
				{
					customAttributes: A2($elm$core$List$append, config.customAttributes, attributes)
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$id = function (id_) {
	return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$custom(
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$id(id_)
			]));
};
var $rtfeldman$elm_css$Css$boxShadow4 = $rtfeldman$elm_css$Css$prop4('box-shadow');
var $rtfeldman$elm_css$Html$Styled$fieldset = $rtfeldman$elm_css$Html$Styled$node('fieldset');
var $tesk9$accessible_html_with_css$Accessibility$Styled$fieldset = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$fieldset(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$fromUnstyled = $rtfeldman$elm_css$Html$Styled$fromUnstyled;
var $elm$html$Html$Attributes$id = $elm$html$Html$Attributes$stringProperty('id');
var $elm$html$Html$input = _VirtualDom_node('input');
var $rtfeldman$elm_css$Html$Styled$legend = $rtfeldman$elm_css$Html$Styled$node('legend');
var $tesk9$accessible_html_with_css$Accessibility$Styled$legend = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$legend(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $elm$html$Html$Events$alwaysStop = function (x) {
	return _Utils_Tuple2(x, true);
};
var $elm$html$Html$Events$stopPropagationOn = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$MayStopPropagation(decoder));
	});
var $elm$html$Html$Events$targetValue = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['target', 'value']),
	$elm$json$Json$Decode$string);
var $elm$html$Html$Events$onInput = function (tagger) {
	return A2(
		$elm$html$Html$Events$stopPropagationOn,
		'input',
		A2(
			$elm$json$Json$Decode$map,
			$elm$html$Html$Events$alwaysStop,
			A2($elm$json$Json$Decode$map, tagger, $elm$html$Html$Events$targetValue)));
};
var $rtfeldman$elm_css$Css$rgb = F3(
	function (r, g, b) {
		return {
			alpha: 1,
			blue: b,
			color: $rtfeldman$elm_css$Css$Structure$Compatible,
			green: g,
			red: r,
			value: A2(
				$rtfeldman$elm_css$Css$cssFunction,
				'rgb',
				A2(
					$elm$core$List$map,
					$elm$core$String$fromInt,
					_List_fromArray(
						[r, g, b])))
		};
	});
var $elm$html$Html$Attributes$style = $elm$virtual_dom$VirtualDom$style;
var $elm$html$Html$Attributes$type_ = $elm$html$Html$Attributes$stringProperty('type');
var $elm$html$Html$Attributes$value = $elm$html$Html$Attributes$stringProperty('value');
var $author$project$Util$inputDate = function (_v0) {
	var label_ = _v0.label_;
	var msg = _v0.msg;
	var id_ = _v0.id_;
	var value = _v0.value;
	var inputIdAttr = function () {
		if (id_.$ === 'Just') {
			var val = id_.a;
			return _List_fromArray(
				[
					$elm$html$Html$Attributes$id(val)
				]);
		} else {
			return _List_Nil;
		}
	}();
	return A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$fieldset,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$css(
				_List_fromArray(
					[
						A3(
						$rtfeldman$elm_css$Css$border3,
						$rtfeldman$elm_css$Css$px(1),
						$rtfeldman$elm_css$Css$solid,
						A3($rtfeldman$elm_css$Css$rgb, 191, 191, 191)),
						$rtfeldman$elm_css$Css$borderRadius(
						$rtfeldman$elm_css$Css$px(8)),
						$rtfeldman$elm_css$Css$width(
						$rtfeldman$elm_css$Css$px(120)),
						A4(
						$rtfeldman$elm_css$Css$boxShadow4,
						$rtfeldman$elm_css$Css$inset,
						$rtfeldman$elm_css$Css$px(0),
						$rtfeldman$elm_css$Css$px(3),
						A3($rtfeldman$elm_css$Css$rgb, 235, 235, 235))
					]))
			]),
		_List_fromArray(
			[
				A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$legend,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$css(
						_List_fromArray(
							[
								$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont,
								$rtfeldman$elm_css$Css$fontWeight(
								$rtfeldman$elm_css$Css$int(600)),
								$rtfeldman$elm_css$Css$fontSize(
								$rtfeldman$elm_css$Css$px(12)),
								$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy),
								$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white)
							]))
					]),
				_List_fromArray(
					[
						$tesk9$accessible_html_with_css$Accessibility$Styled$text(label_)
					])),
				$tesk9$accessible_html_with_css$Accessibility$Styled$fromUnstyled(
				A2(
					$elm$html$Html$input,
					_Utils_ap(
						_List_fromArray(
							[
								$elm$html$Html$Attributes$type_('date'),
								A2($elm$html$Html$Attributes$style, 'border', '0px'),
								$elm$html$Html$Events$onInput(msg),
								$elm$html$Html$Attributes$value(value)
							]),
						inputIdAttr),
					_List_Nil))
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$Switch$V1$Label = function (a) {
	return {$: 'Label', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Switch$V1$label = $NoRedInk$noredink_ui$Nri$Ui$Switch$V1$Label;
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$Loading = {$: 'Loading'};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$loading = $NoRedInk$noredink_ui$Nri$Ui$Button$V10$set(
	function (attributes) {
		return _Utils_update(
			attributes,
			{state: $NoRedInk$noredink_ui$Nri$Ui$Button$V10$Loading});
	});
var $NoRedInk$noredink_ui$Nri$Ui$Loading$V1$spinningDots = A2(
	$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
	$NoRedInk$noredink_ui$Nri$Ui$Loading$V1$circlingCss,
	A2(
		$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight,
		$rtfeldman$elm_css$Css$px(100),
		A2(
			$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth,
			$rtfeldman$elm_css$Css$px(100),
			$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
				A2(
					$rtfeldman$elm_css$Svg$Styled$svg,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
							$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
							$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 12.54 12.54')
						]),
					_List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Svg$Styled$circle,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Svg$Styled$Attributes$fill('#004e95'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cx('6.13'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cy('0.98'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$r('0.98')
								]),
							_List_Nil),
							A2(
							$rtfeldman$elm_css$Svg$Styled$circle,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Svg$Styled$Attributes$fill('#004cc9'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cx('9.95'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cy('2.47'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$r('0.98'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$transform('translate(1.12 7.67) rotate(-44.43)')
								]),
							_List_Nil),
							A2(
							$rtfeldman$elm_css$Svg$Styled$circle,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Svg$Styled$Attributes$fill('#146aff'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cx('11.56'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cy('6.24'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$r('0.98'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$transform('translate(5.09 17.67) rotate(-88.86)')
								]),
							_List_Nil),
							A2(
							$rtfeldman$elm_css$Svg$Styled$circle,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Svg$Styled$Attributes$fill('#0af'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cx('10'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cy('10.02'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$r('0.98'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$transform('translate(-4.15 9.58) rotate(-43.29)')
								]),
							_List_Nil),
							A2(
							$rtfeldman$elm_css$Svg$Styled$circle,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Svg$Styled$Attributes$fill('#d4f0ff'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cx('6.2'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cy('11.56'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$r('0.98'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$transform('translate(-5.6 17.29) rotate(-87.71)')
								]),
							_List_Nil),
							A2(
							$rtfeldman$elm_css$Svg$Styled$circle,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Svg$Styled$Attributes$fill('#eef9ff'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cx('2.44'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cy('9.92'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$r('0.98'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$transform('translate(-6.03 4.21) rotate(-42.14)')
								]),
							_List_Nil),
							A2(
							$rtfeldman$elm_css$Svg$Styled$circle,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Svg$Styled$Attributes$fill('#f5f5f5'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cx('0.98'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cy('6.1'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$r('0.98'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$transform('translate(-5.16 6.71) rotate(-86.57)')
								]),
							_List_Nil),
							A2(
							$rtfeldman$elm_css$Svg$Styled$circle,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Svg$Styled$Attributes$fill('#fff'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cx('2.69'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$cy('2.37'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$r('0.98'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$transform('translate(-0.9 2.35) rotate(-41)')
								]),
							_List_Nil)
						]))))));
var $author$project$Util$loadingSpinner = A2(
	$tesk9$accessible_html_with_css$Accessibility$Styled$div,
	_List_fromArray(
		[
			$rtfeldman$elm_css$Html$Styled$Attributes$css(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$displayFlex,
					$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center),
					$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
					$rtfeldman$elm_css$Css$height(
					$rtfeldman$elm_css$Css$pct(100))
				]))
		]),
	_List_fromArray(
		[
			$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
			A2(
				$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth,
				$rtfeldman$elm_css$Css$px(50),
				A2(
					$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight,
					$rtfeldman$elm_css$Css$px(50),
					$NoRedInk$noredink_ui$Nri$Ui$Loading$V1$spinningDots)))
		]));
var $rtfeldman$elm_css$Css$margin2 = $rtfeldman$elm_css$Css$prop2('margin');
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$number = function (onInput_) {
	return A2(
		$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$Attribute,
		_Utils_update(
			$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$emptyEventsAndValues,
			{
				fromString: $elm$core$Maybe$Just($elm$core$String$toInt),
				onInput: $elm$core$Maybe$Just(
					A2($elm$core$Basics$composeR, $elm$core$String$toInt, onInput_)),
				toString: $elm$core$Maybe$Just(
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Maybe$map($elm$core$String$fromInt),
						$elm$core$Maybe$withDefault('')))
			}),
		function (config) {
			return _Utils_update(
				config,
				{
					autocomplete: $elm$core$Maybe$Nothing,
					fieldType: $elm$core$Maybe$Just('number'),
					inputMode: $elm$core$Maybe$Nothing
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Switch$V1$OnSwitch = function (a) {
	return {$: 'OnSwitch', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Switch$V1$onSwitch = $NoRedInk$noredink_ui$Nri$Ui$Switch$V1$OnSwitch;
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$plus = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 25 25')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M9.84 2.87c0-1.528 1.132-2.659 2.66-2.659 1.528 0 2.66 1.131 2.66 2.66v6.847h6.847c1.528 0 2.797 1.269 2.782 2.782 0 1.528-1.269 2.797-2.782 2.782h-6.848v6.847c0 1.529-1.13 2.66-2.659 2.66-1.528 0-2.66-1.131-2.66-2.66v-6.847H2.994c-1.528 0-2.797-1.269-2.782-2.782 0-1.528 1.269-2.797 2.782-2.782l6.725.123.123-6.97z')
					]),
				_List_Nil)
			])));
var $rtfeldman$elm_css$Css$RemUnits = {$: 'RemUnits'};
var $rtfeldman$elm_css$Css$rem = A2($rtfeldman$elm_css$Css$Internal$lengthConverter, $rtfeldman$elm_css$Css$RemUnits, 'rem');
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$Small = {$: 'Small'};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$small = $NoRedInk$noredink_ui$Nri$Ui$Button$V10$set(
	function (attributes) {
		return _Utils_update(
			attributes,
			{size: $NoRedInk$noredink_ui$Nri$Ui$Button$V10$Small});
	});
var $rtfeldman$elm_css$Css$spaceBetween = $rtfeldman$elm_css$Css$prop1('space-between');
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$string = function (_v0) {
	var header = _v0.header;
	var value = _v0.value;
	var width = _v0.width;
	var cellStyles = _v0.cellStyles;
	return A4(
		$NoRedInk$noredink_ui$Nri$Ui$Table$V5$Column,
		$rtfeldman$elm_css$Html$Styled$text(header),
		A2($elm$core$Basics$composeR, value, $rtfeldman$elm_css$Html$Styled$text),
		$rtfeldman$elm_css$Css$width(width),
		cellStyles);
};
var $NoRedInk$noredink_ui$Nri$Ui$Select$V8$value = function (value_) {
	return $NoRedInk$noredink_ui$Nri$Ui$Select$V8$Attribute(
		function (config) {
			return _Utils_update(
				config,
				{value: value_});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$CloseButtonClicked = {$: 'CloseButtonClicked'};
var $rtfeldman$elm_css$Css$rgba = F4(
	function (r, g, b, alpha) {
		return {
			alpha: alpha,
			blue: b,
			color: $rtfeldman$elm_css$Css$Structure$Compatible,
			green: g,
			red: r,
			value: A2(
				$rtfeldman$elm_css$Css$cssFunction,
				'rgba',
				_Utils_ap(
					A2(
						$elm$core$List$map,
						$elm$core$String$fromInt,
						_List_fromArray(
							[r, g, b])),
					_List_fromArray(
						[
							$elm$core$String$fromFloat(alpha)
						])))
		};
	});
var $NoRedInk$noredink_ui$Nri$Ui$Colors$Extra$withAlpha = F2(
	function (alpha, _v0) {
		var red = _v0.red;
		var green = _v0.green;
		var blue = _v0.blue;
		return A4($rtfeldman$elm_css$Css$rgba, red, green, blue, alpha);
	});
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$defaultAttributes = {
	closeButton: false,
	customAttributes: _List_Nil,
	customStyles: _List_Nil,
	overlayColor: A2($NoRedInk$noredink_ui$Nri$Ui$Colors$Extra$withAlpha, 0.9, $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy),
	titleColor: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy,
	visibleTitle: true
};
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$buildAttributes = function (attrs) {
	var applyAttrs = F2(
		function (attribute, acc) {
			if (attribute.$ === 'Attribute') {
				var fun = attribute.a;
				return fun(acc);
			} else {
				var functions = attribute.a;
				return A3($elm$core$List$foldl, applyAttrs, acc, functions);
			}
		});
	return A3($elm$core$List$foldl, applyAttrs, $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$defaultAttributes, attrs);
};
var $NoRedInk$noredink_ui$Nri$Ui$Shadows$V1$high = A2($rtfeldman$elm_css$Css$property, 'box-shadow', '0 1px 1px hsl(0deg 0% 0% / 0.075), 0 2px 2px hsl(0deg 0% 0% / 0.075), 0 4px 4px hsl(0deg 0% 0% / 0.075), 0 8px 8px hsl(0deg 0% 0% / 0.075), 0 16px 16px hsl(0deg 0% 0% / 0.075)');
var $rtfeldman$elm_css$Css$Media$minWidth = function (value) {
	return A2($rtfeldman$elm_css$Css$Media$feature, 'min-width', value);
};
var $NoRedInk$noredink_ui$Nri$Ui$MediaQuery$V1$mobileBreakpoint = $rtfeldman$elm_css$Css$px(1000);
var $rtfeldman$elm_css$Css$Structure$OnlyQuery = F2(
	function (a, b) {
		return {$: 'OnlyQuery', a: a, b: b};
	});
var $rtfeldman$elm_css$Css$Media$only = $rtfeldman$elm_css$Css$Structure$OnlyQuery;
var $rtfeldman$elm_css$Css$Structure$Screen = {$: 'Screen'};
var $rtfeldman$elm_css$Css$Media$screen = $rtfeldman$elm_css$Css$Structure$Screen;
var $NoRedInk$noredink_ui$Nri$Ui$MediaQuery$V1$mobile = A2(
	$rtfeldman$elm_css$Css$Media$only,
	$rtfeldman$elm_css$Css$Media$screen,
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$Media$minWidth(
			$rtfeldman$elm_css$Css$px(1)),
			$rtfeldman$elm_css$Css$Media$maxWidth($NoRedInk$noredink_ui$Nri$Ui$MediaQuery$V1$mobileBreakpoint)
		]));
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$modalStyles = _List_fromArray(
	[
		$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$relative),
		$rtfeldman$elm_css$Css$borderRadius(
		$rtfeldman$elm_css$Css$px(20)),
		$NoRedInk$noredink_ui$Nri$Ui$Shadows$V1$high,
		A2(
		$rtfeldman$elm_css$Css$Media$withMedia,
		_List_fromArray(
			[$NoRedInk$noredink_ui$Nri$Ui$MediaQuery$V1$mobile]),
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$borderRadius($rtfeldman$elm_css$Css$zero)
			])),
		A2(
		$rtfeldman$elm_css$Css$margin2,
		$rtfeldman$elm_css$Css$px(20),
		$rtfeldman$elm_css$Css$auto),
		$rtfeldman$elm_css$Css$width(
		$rtfeldman$elm_css$Css$px(600)),
		$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white)
	]);
var $elm$virtual_dom$VirtualDom$Custom = function (a) {
	return {$: 'Custom', a: a};
};
var $rtfeldman$elm_css$Html$Styled$Events$custom = F2(
	function (event, decoder) {
		return A2(
			$rtfeldman$elm_css$VirtualDom$Styled$on,
			event,
			$elm$virtual_dom$VirtualDom$Custom(decoder));
	});
var $NoRedInk$noredink_ui$Nri$Ui$FocusTrap$V1$decodeKeydown = A4(
	$elm$json$Json$Decode$map3,
	F3(
		function (id, keyCode, shiftKey) {
			return _Utils_Tuple3(id, keyCode, shiftKey);
		}),
	A2(
		$elm$json$Json$Decode$at,
		_List_fromArray(
			['target', 'id']),
		$elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'keyCode', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'shiftKey', $elm$json$Json$Decode$bool));
var $NoRedInk$noredink_ui$Nri$Ui$FocusTrap$V1$onTab = function (_do) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$custom,
		'keydown',
		A2(
			$elm$json$Json$Decode$andThen,
			function (_v0) {
				var id = _v0.a;
				var keyCode = _v0.b;
				var shiftKey = _v0.c;
				return (keyCode === 9) ? A2(_do, id, shiftKey) : $elm$json$Json$Decode$fail('No need to intercept the key press');
			},
			$NoRedInk$noredink_ui$Nri$Ui$FocusTrap$V1$decodeKeydown));
};
var $NoRedInk$noredink_ui$Nri$Ui$FocusTrap$V1$toAttribute = function (_v0) {
	var firstId = _v0.firstId;
	var lastId = _v0.lastId;
	var focus = _v0.focus;
	return $NoRedInk$noredink_ui$Nri$Ui$FocusTrap$V1$onTab(
		F2(
			function (elementId, shiftKey) {
				return (_Utils_eq(elementId, firstId) && shiftKey) ? $elm$json$Json$Decode$succeed(
					{
						message: focus(lastId),
						preventDefault: true,
						stopPropagation: false
					}) : ((_Utils_eq(elementId, lastId) && (!shiftKey)) ? $elm$json$Json$Decode$succeed(
					{
						message: focus(firstId),
						preventDefault: true,
						stopPropagation: false
					}) : $elm$json$Json$Decode$fail('No need to intercept the key press'));
			}));
};
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$EscOrOverlayClicked = {$: 'EscOrOverlayClicked'};
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$viewBackdrop = F2(
	function (wrapMsg, color) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
							$rtfeldman$elm_css$Css$width(
							$rtfeldman$elm_css$Css$pct(100)),
							$rtfeldman$elm_css$Css$height(
							$rtfeldman$elm_css$Css$pct(100)),
							$rtfeldman$elm_css$Css$backgroundColor(color)
						])),
					$rtfeldman$elm_css$Html$Styled$Events$onClick(
					wrapMsg($NoRedInk$noredink_ui$Nri$Ui$Modal$V11$EscOrOverlayClicked)),
					$NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$nriDescription('modal-backdrop')
				]),
			_List_Nil);
	});
var $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Dialog = {$: 'Dialog'};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Role$dialog = $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$role($tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Dialog);
var $rtfeldman$elm_css$Html$Styled$h1 = $rtfeldman$elm_css$Html$Styled$node('h1');
var $tesk9$accessible_html_with_css$Accessibility$Styled$h1 = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$h1(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Aria$labelledBy = $rtfeldman$elm_css$Html$Styled$Attributes$attribute('aria-labelledby');
var $tesk9$accessible_html_with_css$Accessibility$Styled$Aria$labeledBy = $tesk9$accessible_html_with_css$Accessibility$Styled$Aria$labelledBy;
var $tesk9$accessible_html_with_css$Accessibility$Styled$Widget$modal = A2(
	$elm$core$Basics$composeL,
	$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$aria('modal'),
	$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$toBoolString);
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$modalTitleId = 'modal__title';
var $rtfeldman$elm_css$Html$Styled$section = $rtfeldman$elm_css$Html$Styled$node('section');
var $tesk9$accessible_html_with_css$Accessibility$Styled$section = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$section(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $rtfeldman$elm_css$Css$padding3 = $rtfeldman$elm_css$Css$prop3('padding');
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$titleStyles = F2(
	function (color, visibleTitle) {
		return visibleTitle ? _List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont,
				$rtfeldman$elm_css$Css$fontWeight(
				$rtfeldman$elm_css$Css$int(700)),
				A3(
				$rtfeldman$elm_css$Css$padding3,
				$rtfeldman$elm_css$Css$px(40),
				$rtfeldman$elm_css$Css$px(40),
				$rtfeldman$elm_css$Css$px(20)),
				$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$zero),
				$rtfeldman$elm_css$Css$fontSize(
				$rtfeldman$elm_css$Css$px(20)),
				$rtfeldman$elm_css$Css$textAlign($rtfeldman$elm_css$Css$center),
				$rtfeldman$elm_css$Css$color(color),
				A2(
				$rtfeldman$elm_css$Css$Media$withMedia,
				_List_fromArray(
					[$NoRedInk$noredink_ui$Nri$Ui$MediaQuery$V1$mobile]),
				_List_fromArray(
					[
						A3(
						$rtfeldman$elm_css$Css$padding3,
						$rtfeldman$elm_css$Css$px(20),
						$rtfeldman$elm_css$Css$px(20),
						$rtfeldman$elm_css$Css$zero)
					]))
			]) : _List_fromArray(
			[
				A2($rtfeldman$elm_css$Css$property, 'clip', 'rect(1px, 1px, 1px, 1px)'),
				$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
				$rtfeldman$elm_css$Css$height(
				$rtfeldman$elm_css$Css$px(1)),
				$rtfeldman$elm_css$Css$width(
				$rtfeldman$elm_css$Css$px(1)),
				$rtfeldman$elm_css$Css$overflow($rtfeldman$elm_css$Css$hidden),
				$rtfeldman$elm_css$Css$margin(
				$rtfeldman$elm_css$Css$px(-1)),
				$rtfeldman$elm_css$Css$padding($rtfeldman$elm_css$Css$zero),
				$rtfeldman$elm_css$Css$border($rtfeldman$elm_css$Css$zero)
			]);
	});
var $rtfeldman$elm_css$Css$borderRadius4 = $rtfeldman$elm_css$Css$prop4('border-radius');
var $rtfeldman$elm_css$Css$borderTop3 = $rtfeldman$elm_css$Css$prop3('border-top');
var $rtfeldman$elm_css$Css$flexWrap = $rtfeldman$elm_css$Css$prop1('flex-wrap');
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$viewFooter = function (children) {
	return $elm$core$List$isEmpty(children) ? $tesk9$accessible_html_with_css$Accessibility$Styled$text('') : A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$div,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$css(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
						$rtfeldman$elm_css$Css$displayFlex,
						$rtfeldman$elm_css$Css$flexDirection($rtfeldman$elm_css$Css$column),
						$rtfeldman$elm_css$Css$flexGrow(
						$rtfeldman$elm_css$Css$int(2)),
						$rtfeldman$elm_css$Css$flexWrap($rtfeldman$elm_css$Css$noWrap),
						A2(
						$rtfeldman$elm_css$Css$padding2,
						$rtfeldman$elm_css$Css$px(30),
						$rtfeldman$elm_css$Css$zero),
						$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray96),
						A3(
						$rtfeldman$elm_css$Css$borderTop3,
						$rtfeldman$elm_css$Css$px(1),
						$rtfeldman$elm_css$Css$solid,
						$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray92),
						A4(
						$rtfeldman$elm_css$Css$borderRadius4,
						$rtfeldman$elm_css$Css$zero,
						$rtfeldman$elm_css$Css$zero,
						$rtfeldman$elm_css$Css$px(20),
						$rtfeldman$elm_css$Css$px(20)),
						A2(
						$rtfeldman$elm_css$Css$Media$withMedia,
						_List_fromArray(
							[$NoRedInk$noredink_ui$Nri$Ui$MediaQuery$V1$mobile]),
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$padding(
								$rtfeldman$elm_css$Css$px(20))
							]))
					])),
				$NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$nriDescription('modal-footer')
			]),
		children);
};
var $rtfeldman$elm_css$Css$borderBottomLeftRadius = $rtfeldman$elm_css$Css$prop1('border-bottom-left-radius');
var $rtfeldman$elm_css$Css$borderBottomRightRadius = $rtfeldman$elm_css$Css$prop1('border-bottom-right-radius');
var $rtfeldman$elm_css$Css$borderTopLeftRadius = $rtfeldman$elm_css$Css$prop1('border-top-left-radius');
var $rtfeldman$elm_css$Css$borderTopRightRadius = $rtfeldman$elm_css$Css$prop1('border-top-right-radius');
var $rtfeldman$elm_css$Css$calcExpressionToString = function (expression) {
	if (expression.$ === 'Addition') {
		return '+';
	} else {
		return '-';
	}
};
var $rtfeldman$elm_css$Css$calc = F3(
	function (firstExpr, expression, secondExpr) {
		var withoutCalcStr = function (l) {
			return A2($elm$core$String$startsWith, 'calc(', l.value) ? A2($elm$core$String$dropLeft, 4, l.value) : l.value;
		};
		var calcs = withoutCalcStr(firstExpr) + (' ' + ($rtfeldman$elm_css$Css$calcExpressionToString(expression) + (' ' + withoutCalcStr(secondExpr))));
		var value = A2(
			$rtfeldman$elm_css$Css$cssFunction,
			'calc',
			_List_fromArray(
				[calcs]));
		return {calc: $rtfeldman$elm_css$Css$Structure$Compatible, flexBasis: $rtfeldman$elm_css$Css$Structure$Compatible, fontSize: $rtfeldman$elm_css$Css$Structure$Compatible, length: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrAutoOrCoverOrContain: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNone: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNoneOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNumber: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNumberOrAutoOrNoneOrContent: $rtfeldman$elm_css$Css$Structure$Compatible, textIndent: $rtfeldman$elm_css$Css$Structure$Compatible, value: value};
	});
var $rtfeldman$elm_css$Css$Subtraction = {$: 'Subtraction'};
var $rtfeldman$elm_css$Css$minus = $rtfeldman$elm_css$Css$Subtraction;
var $rtfeldman$elm_css$Css$overflowX = $rtfeldman$elm_css$Css$prop1('overflow-x');
var $rtfeldman$elm_css$Css$overflowY = $rtfeldman$elm_css$Css$prop1('overflow-y');
var $rtfeldman$elm_css$Css$Transitions$Color = {$: 'Color'};
var $rtfeldman$elm_css$Css$Transitions$Transition = function (a) {
	return {$: 'Transition', a: a};
};
var $rtfeldman$elm_css$Css$Transitions$durationTransition = F2(
	function (animation, duration) {
		return $rtfeldman$elm_css$Css$Transitions$Transition(
			{animation: animation, delay: $elm$core$Maybe$Nothing, duration: duration, timing: $elm$core$Maybe$Nothing});
	});
var $rtfeldman$elm_css$Css$Transitions$color = $rtfeldman$elm_css$Css$Transitions$durationTransition($rtfeldman$elm_css$Css$Transitions$Color);
var $rtfeldman$elm_css$Css$Transitions$propToString = function (prop) {
	switch (prop.$) {
		case 'Background':
			return 'background';
		case 'BackgroundColor':
			return 'background-color';
		case 'BackgroundPosition':
			return 'background-position';
		case 'BackgroundSize':
			return 'background-size';
		case 'Border':
			return 'border';
		case 'BorderBottom':
			return 'border-bottom';
		case 'BorderBottomColor':
			return 'border-bottom-color';
		case 'BorderBottomLeftRadius':
			return 'border-bottom-left-radius';
		case 'BorderBottomRightRadius':
			return 'border-bottom-right-radius';
		case 'BorderBottomWidth':
			return 'border-bottom-width';
		case 'BorderColor':
			return 'border-color';
		case 'BorderLeft':
			return 'border-left';
		case 'BorderLeftColor':
			return 'border-left-color';
		case 'BorderLeftWidth':
			return 'border-left-width';
		case 'BorderRadius':
			return 'border-radius';
		case 'BorderRight':
			return 'border-right';
		case 'BorderRightColor':
			return 'border-right-color';
		case 'BorderRightWidth':
			return 'border-right-width';
		case 'BorderTop':
			return 'border-top';
		case 'BorderTopColor':
			return 'border-top-color';
		case 'BorderTopLeftRadius':
			return 'border-top-left-radius';
		case 'BorderTopRightRadius':
			return 'border-top-right-radius';
		case 'BorderTopWidth':
			return 'border-top-width';
		case 'BorderWidth':
			return 'border-width';
		case 'Bottom':
			return 'bottom';
		case 'BoxShadow':
			return 'box-shadow';
		case 'CaretColor':
			return 'caret-color';
		case 'Clip':
			return 'clip';
		case 'ClipPath':
			return 'clip-path';
		case 'Color':
			return 'color';
		case 'ColumnCount':
			return 'column-count';
		case 'ColumnGap':
			return 'column-gap';
		case 'ColumnRule':
			return 'column-rule';
		case 'ColumnRuleColor':
			return 'column-rule-color';
		case 'ColumnRuleWidth':
			return 'column-rule-width';
		case 'ColumnWidth':
			return 'column-width';
		case 'Columns':
			return 'columns';
		case 'Filter':
			return 'filter';
		case 'Flex':
			return 'flex';
		case 'FlexBasis':
			return 'flex-basis';
		case 'FlexGrow':
			return 'flex-grow';
		case 'FlexShrink':
			return 'flex-shrink';
		case 'Font':
			return 'font';
		case 'FontSize':
			return 'font-size';
		case 'FontSizeAdjust':
			return 'font-size-adjust';
		case 'FontStretch':
			return 'font-stretch';
		case 'FontVariationSettings':
			return 'font-variation-settings';
		case 'FontWeight':
			return 'font-weight';
		case 'GridColumnGap':
			return 'grid-column-gap';
		case 'GridGap':
			return 'grid-gap';
		case 'GridRowGap':
			return 'grid-row-gap';
		case 'Height':
			return 'height';
		case 'Left':
			return 'left';
		case 'LetterSpacing':
			return 'letter-spacing';
		case 'LineHeight':
			return 'line-height';
		case 'Margin':
			return 'margin';
		case 'MarginBottom':
			return 'margin-bottom';
		case 'MarginLeft':
			return 'margin-left';
		case 'MarginRight':
			return 'margin-right';
		case 'MarginTop':
			return 'margin-top';
		case 'Mask':
			return 'mask';
		case 'MaskPosition':
			return 'mask-position';
		case 'MaskSize':
			return 'mask-size';
		case 'MaxHeight':
			return 'max-height';
		case 'MaxWidth':
			return 'max-width';
		case 'MinHeight':
			return 'min-height';
		case 'MinWidth':
			return 'min-width';
		case 'ObjectPosition':
			return 'object-position';
		case 'Offset':
			return 'offset';
		case 'OffsetAnchor':
			return 'offset-anchor';
		case 'OffsetDistance':
			return 'offset-distance';
		case 'OffsetPath':
			return 'offset-path';
		case 'OffsetRotate':
			return 'offset-rotate';
		case 'Opacity':
			return 'opacity';
		case 'Order':
			return 'order';
		case 'Outline':
			return 'outline';
		case 'OutlineColor':
			return 'outline-color';
		case 'OutlineOffset':
			return 'outline-offset';
		case 'OutlineWidth':
			return 'outline-width';
		case 'Padding':
			return 'padding';
		case 'PaddingBottom':
			return 'padding-bottom';
		case 'PaddingLeft':
			return 'padding-left';
		case 'PaddingRight':
			return 'padding-right';
		case 'PaddingTop':
			return 'padding-top';
		case 'Right':
			return 'right';
		case 'TabSize':
			return 'tab-size';
		case 'TextIndent':
			return 'text-indent';
		case 'TextShadow':
			return 'text-shadow';
		case 'Top':
			return 'top';
		case 'Transform':
			return 'transform';
		case 'TransformOrigin':
			return 'transform-origin';
		case 'VerticalAlign':
			return 'vertical-align';
		case 'Visibility':
			return 'visibility';
		case 'Width':
			return 'width';
		case 'WordSpacing':
			return 'word-spacing';
		default:
			return 'z-index';
	}
};
var $rtfeldman$elm_css$Css$Transitions$timeToString = function (time) {
	return $elm$core$String$fromFloat(time) + 'ms';
};
var $rtfeldman$elm_css$Css$Transitions$timingFunctionToString = function (tf) {
	switch (tf.$) {
		case 'Ease':
			return 'ease';
		case 'Linear':
			return 'linear';
		case 'EaseIn':
			return 'ease-in';
		case 'EaseOut':
			return 'ease-out';
		case 'EaseInOut':
			return 'ease-in-out';
		case 'StepStart':
			return 'step-start';
		case 'StepEnd':
			return 'step-end';
		default:
			var _float = tf.a;
			var float2 = tf.b;
			var float3 = tf.c;
			var float4 = tf.d;
			return 'cubic-bezier(' + ($elm$core$String$fromFloat(_float) + (' , ' + ($elm$core$String$fromFloat(float2) + (' , ' + ($elm$core$String$fromFloat(float3) + (' , ' + ($elm$core$String$fromFloat(float4) + ')')))))));
	}
};
var $rtfeldman$elm_css$Css$Transitions$transition = function (options) {
	var v = A3(
		$elm$core$String$slice,
		0,
		-1,
		A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, s) {
					var animation = _v0.a.animation;
					var duration = _v0.a.duration;
					var delay = _v0.a.delay;
					var timing = _v0.a.timing;
					return s + ($rtfeldman$elm_css$Css$Transitions$propToString(animation) + (' ' + ($rtfeldman$elm_css$Css$Transitions$timeToString(duration) + (' ' + (A2(
						$elm$core$Maybe$withDefault,
						'',
						A2($elm$core$Maybe$map, $rtfeldman$elm_css$Css$Transitions$timeToString, delay)) + (' ' + (A2(
						$elm$core$Maybe$withDefault,
						'',
						A2($elm$core$Maybe$map, $rtfeldman$elm_css$Css$Transitions$timingFunctionToString, timing)) + ',')))))));
				}),
			'',
			options));
	return A2($rtfeldman$elm_css$Css$property, 'transition', v);
};
var $elm$svg$Svg$Attributes$d = _VirtualDom_attribute('d');
var $elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');
var $elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');
var $elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');
var $elm$svg$Svg$path = $elm$svg$Svg$trustedNode('path');
var $elm$svg$Svg$svg = $elm$svg$Svg$trustedNode('svg');
var $elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');
var $elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');
var $NoRedInk$noredink_ui$Nri$Ui$SpriteSheet$xSvg = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	$rtfeldman$elm_css$Html$Styled$fromUnstyled(
		A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$viewBox('0 0 25 25'),
					$elm$svg$Svg$Attributes$width('100%'),
					$elm$svg$Svg$Attributes$height('100%'),
					$elm$svg$Svg$Attributes$fill('currentcolor')
				]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$path,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$d('M1.067 6.015c-1.423-1.422-1.423-3.526 0-4.948 1.422-1.423 3.526-1.423 4.948 0l6.371 6.37 6.371-6.37c1.422-1.423 3.783-1.423 5.176 0 1.423 1.422 1.423 3.782 0 5.176l-6.37 6.37 6.37 6.372c1.423 1.422 1.423 3.526 0 4.948-1.422 1.423-3.526 1.423-4.948 0l-6.371-6.37-6.371 6.37c-1.422 1.423-3.783 1.423-5.176 0-1.423-1.422-1.423-3.782 0-5.176l6.37-6.143-6.37-6.599z')
						]),
					_List_Nil)
				]))));
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$viewCloseButton = function (closeModal) {
	return A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$button,
		A2(
			$elm$core$List$cons,
			$tesk9$accessible_html_with_css$Accessibility$Styled$Widget$label('Close modal'),
			A2(
				$elm$core$List$cons,
				$rtfeldman$elm_css$Html$Styled$Events$onClick(closeModal),
				A2(
					$elm$core$List$cons,
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
								$rtfeldman$elm_css$Css$top($rtfeldman$elm_css$Css$zero),
								$rtfeldman$elm_css$Css$right($rtfeldman$elm_css$Css$zero),
								$rtfeldman$elm_css$Css$zIndex(
								$rtfeldman$elm_css$Css$int(10)),
								$rtfeldman$elm_css$Css$backgroundColor(
								A4($rtfeldman$elm_css$Css$rgba, 255, 255, 255, 0.5)),
								$rtfeldman$elm_css$Css$borderRadius(
								$rtfeldman$elm_css$Css$pct(50)),
								$rtfeldman$elm_css$Css$width(
								$rtfeldman$elm_css$Css$px(60)),
								$rtfeldman$elm_css$Css$height(
								$rtfeldman$elm_css$Css$px(60)),
								$rtfeldman$elm_css$Css$padding(
								$rtfeldman$elm_css$Css$px(20)),
								$rtfeldman$elm_css$Css$borderWidth($rtfeldman$elm_css$Css$zero),
								$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer),
								$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure),
								$rtfeldman$elm_css$Css$hover(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azureDark)
									])),
								$rtfeldman$elm_css$Css$Transitions$transition(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$Transitions$color(0.1)
									]))
							])),
					A2(
						$elm$core$List$cons,
						$rtfeldman$elm_css$Html$Styled$Attributes$id($NoRedInk$noredink_ui$Nri$Ui$Modal$V11$closeButtonId),
						_List_Nil)))),
		_List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml($NoRedInk$noredink_ui$Nri$Ui$SpriteSheet$xSvg)
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$viewInnerContent = function (config) {
	var visibleTitle = config.visibleTitle;
	var visibleFooter = !$elm$core$List$isEmpty(config.footer);
	var modalTitleStyles = visibleTitle ? _List_Nil : _List_fromArray(
		[
			$rtfeldman$elm_css$Css$borderTopLeftRadius(
			$rtfeldman$elm_css$Css$px(20)),
			$rtfeldman$elm_css$Css$borderTopRightRadius(
			$rtfeldman$elm_css$Css$px(20)),
			$rtfeldman$elm_css$Css$overflowY($rtfeldman$elm_css$Css$hidden)
		]);
	var modalFooterStyles = visibleFooter ? _List_Nil : _List_fromArray(
		[
			$rtfeldman$elm_css$Css$borderBottomLeftRadius(
			$rtfeldman$elm_css$Css$px(20)),
			$rtfeldman$elm_css$Css$borderBottomRightRadius(
			$rtfeldman$elm_css$Css$px(20)),
			$rtfeldman$elm_css$Css$overflowY($rtfeldman$elm_css$Css$hidden)
		]);
	var children = function () {
		var _v2 = config.closeButton;
		if (_v2.$ === 'Just') {
			var msg = _v2.a;
			return A2(
				$elm$core$List$cons,
				$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$viewCloseButton(msg),
				config.content);
		} else {
			return config.content;
		}
	}();
	var _v0 = visibleTitle ? _Utils_Tuple2(85, 45) : _Utils_Tuple2(0, 0);
	var titleDesktopHeight = _v0.a;
	var titleMobileHeight = _v0.b;
	var _v1 = visibleFooter ? _Utils_Tuple2(160, 137) : _Utils_Tuple2(0, 0);
	var footerDesktopHeight = _v1.a;
	var footerMobileHeight = _v1.b;
	return A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$div,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$css(
				_Utils_ap(modalTitleStyles, modalFooterStyles)),
				$NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$nriDescription('modal-content')
			]),
		_List_fromArray(
			[
				A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$div,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$overflowY($rtfeldman$elm_css$Css$auto),
								$rtfeldman$elm_css$Css$overflowX($rtfeldman$elm_css$Css$hidden),
								$rtfeldman$elm_css$Css$minHeight(
								$rtfeldman$elm_css$Css$px(50)),
								$rtfeldman$elm_css$Css$maxHeight(
								A3(
									$rtfeldman$elm_css$Css$calc,
									$rtfeldman$elm_css$Css$vh(100),
									$rtfeldman$elm_css$Css$minus,
									$rtfeldman$elm_css$Css$px((footerDesktopHeight + titleDesktopHeight) + 40))),
								$rtfeldman$elm_css$Css$width(
								$rtfeldman$elm_css$Css$pct(100)),
								$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
								$rtfeldman$elm_css$Css$paddingLeft(
								$rtfeldman$elm_css$Css$px(40)),
								$rtfeldman$elm_css$Css$paddingRight(
								$rtfeldman$elm_css$Css$px(40)),
								A2(
								$rtfeldman$elm_css$Css$Media$withMedia,
								_List_fromArray(
									[$NoRedInk$noredink_ui$Nri$Ui$MediaQuery$V1$mobile]),
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$padding(
										$rtfeldman$elm_css$Css$px(20)),
										$rtfeldman$elm_css$Css$maxHeight(
										A3(
											$rtfeldman$elm_css$Css$calc,
											$rtfeldman$elm_css$Css$vh(100),
											$rtfeldman$elm_css$Css$minus,
											$rtfeldman$elm_css$Css$px(footerMobileHeight + titleMobileHeight)))
									])),
								visibleTitle ? $rtfeldman$elm_css$Css$paddingTop($rtfeldman$elm_css$Css$zero) : $rtfeldman$elm_css$Css$paddingTop(
								$rtfeldman$elm_css$Css$px(40)),
								visibleFooter ? $rtfeldman$elm_css$Css$paddingBottom(
								$rtfeldman$elm_css$Css$px(30)) : $rtfeldman$elm_css$Css$paddingBottom(
								$rtfeldman$elm_css$Css$px(40))
							]))
					]),
				children)
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$viewModal = function (config) {
	return A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$section,
		_Utils_ap(
			_List_fromArray(
				[
					$tesk9$accessible_html_with_css$Accessibility$Styled$Role$dialog,
					$tesk9$accessible_html_with_css$Accessibility$Styled$Widget$modal(true),
					$tesk9$accessible_html_with_css$Accessibility$Styled$Aria$labeledBy($NoRedInk$noredink_ui$Nri$Ui$Modal$V11$modalTitleId)
				]),
			config.customAttributes),
		_List_fromArray(
			[
				A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$h1,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$id($NoRedInk$noredink_ui$Nri$Ui$Modal$V11$modalTitleId),
						$rtfeldman$elm_css$Html$Styled$Attributes$css(
						A2($NoRedInk$noredink_ui$Nri$Ui$Modal$V11$titleStyles, config.titleColor, config.visibleTitle)),
						$NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$nriDescription('modal-title')
					]),
				_List_fromArray(
					[
						$tesk9$accessible_html_with_css$Accessibility$Styled$text(config.title)
					])),
				A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$div,
				_List_Nil,
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$viewInnerContent(config),
						$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$viewFooter(config.footer)
					]))
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$view = F3(
	function (config, attrsList, model) {
		var attrs = $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$buildAttributes(attrsList);
		if (model.$ === 'Opened') {
			return A2(
				$rtfeldman$elm_css$Html$Styled$div,
				$elm$core$List$concat(
					_List_fromArray(
						[
							_List_fromArray(
							[
								$NoRedInk$noredink_ui$Nri$Ui$FocusTrap$V1$toAttribute(config.focusTrap)
							]),
							_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$Attributes$css(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$relative),
										$rtfeldman$elm_css$Css$zIndex(
										$rtfeldman$elm_css$Css$int(1))
									]))
							])
						])),
				$elm$core$List$singleton(
					A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$div,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$Attributes$css(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$fixed),
										$rtfeldman$elm_css$Css$top($rtfeldman$elm_css$Css$zero),
										$rtfeldman$elm_css$Css$left($rtfeldman$elm_css$Css$zero),
										$rtfeldman$elm_css$Css$width(
										$rtfeldman$elm_css$Css$pct(100)),
										$rtfeldman$elm_css$Css$height(
										$rtfeldman$elm_css$Css$pct(100)),
										$rtfeldman$elm_css$Css$displayFlex,
										$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center)
									]))
							]),
						_List_fromArray(
							[
								A2($NoRedInk$noredink_ui$Nri$Ui$Modal$V11$viewBackdrop, config.wrapMsg, attrs.overlayColor),
								A2(
								$tesk9$accessible_html_with_css$Accessibility$Styled$div,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Html$Styled$Attributes$css(
										A2($elm$core$List$append, $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$modalStyles, attrs.customStyles))
									]),
								_List_fromArray(
									[
										$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$viewModal(
										{
											closeButton: attrs.closeButton ? $elm$core$Maybe$Just(
												config.wrapMsg($NoRedInk$noredink_ui$Nri$Ui$Modal$V11$CloseButtonClicked)) : $elm$core$Maybe$Nothing,
											content: config.content,
											customAttributes: attrs.customAttributes,
											footer: config.footer,
											title: config.title,
											titleColor: attrs.titleColor,
											visibleTitle: attrs.visibleTitle
										})
									])),
								A3(
								$rtfeldman$elm_css$Html$Styled$node,
								'style',
								_List_Nil,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Html$Styled$text('body {overflow: hidden;} ')
									]))
							]))));
		} else {
			return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
		}
	});
var $NoRedInk$noredink_ui$Nri$Ui$Select$V8$defaultConfig = {choices: _List_Nil, containerCss: _List_Nil, custom: _List_Nil, defaultDisplayText: $elm$core$Maybe$Nothing, error: $NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$noError, guidance: $NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$noGuidance, hideLabel: false, id: $elm$core$Maybe$Nothing, noMarginTop: false, value: $elm$core$Maybe$Nothing, valueToString: $elm$core$Maybe$Nothing};
var $NoRedInk$noredink_ui$Nri$Ui$Select$V8$applyConfig = function (attributes) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, config) {
				var update = _v0.a;
				return update(config);
			}),
		$NoRedInk$noredink_ui$Nri$Ui$Select$V8$defaultConfig,
		attributes);
};
var $NoRedInk$noredink_ui$Nri$Ui$Util$removePunctuation = function () {
	var regex = A2(
		$elm$core$Maybe$withDefault,
		$elm$regex$Regex$never,
		$elm$regex$Regex$fromString('[^A-z0-9\\w\\s]'));
	return A2(
		$elm$regex$Regex$replace,
		regex,
		$elm$core$Basics$always(''));
}();
var $NoRedInk$noredink_ui$Nri$Ui$Select$V8$generateId = function (x) {
	return 'nri-select-' + $NoRedInk$noredink_ui$Nri$Ui$Util$dashify(
		$NoRedInk$noredink_ui$Nri$Ui$Util$removePunctuation(x));
};
var $rtfeldman$elm_css$Html$Styled$select = $rtfeldman$elm_css$Html$Styled$node('select');
var $tesk9$accessible_html_with_css$Accessibility$Styled$select = $rtfeldman$elm_css$Html$Styled$select;
var $rtfeldman$elm_css$Css$backgroundOrigin = $rtfeldman$elm_css$Css$prop1('background-origin');
var $rtfeldman$elm_css$Css$backgroundRepeat = $rtfeldman$elm_css$Css$prop1('background-repeat');
var $rtfeldman$elm_css$Css$contentBox = {backgroundClip: $rtfeldman$elm_css$Css$Structure$Compatible, boxSizing: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'content-box'};
var $tesk9$palette$SolidColor$Color = function (a) {
	return {$: 'Color', a: a};
};
var $tesk9$palette$Internal$Color$RGBA = function (a) {
	return {$: 'RGBA', a: a};
};
var $tesk9$palette$Internal$RGBA$Color = function (a) {
	return {$: 'Color', a: a};
};
var $elm$core$Basics$clamp = F3(
	function (low, high, number) {
		return (_Utils_cmp(number, low) < 0) ? low : ((_Utils_cmp(number, high) > 0) ? high : number);
	});
var $tesk9$palette$Internal$RGBA$fromChannels = function (_v0) {
	var red = _v0.red;
	var green = _v0.green;
	var blue = _v0.blue;
	var alpha = _v0.alpha;
	return $tesk9$palette$Internal$RGBA$Color(
		{
			alpha: alpha,
			blue: A3($elm$core$Basics$clamp, 0, 255, blue),
			green: A3($elm$core$Basics$clamp, 0, 255, green),
			red: A3($elm$core$Basics$clamp, 0, 255, red)
		});
};
var $tesk9$palette$Internal$Color$fromRGBA = function (values) {
	return $tesk9$palette$Internal$Color$RGBA(
		$tesk9$palette$Internal$RGBA$fromChannels(values));
};
var $tesk9$palette$Internal$Opacity$Opacity = function (a) {
	return {$: 'Opacity', a: a};
};
var $tesk9$palette$Internal$Opacity$custom = A2(
	$elm$core$Basics$composeL,
	$tesk9$palette$Internal$Opacity$Opacity,
	A2($elm$core$Basics$clamp, 0, 1.0));
var $tesk9$palette$Internal$Opacity$opaque = $tesk9$palette$Internal$Opacity$custom(1.0);
var $tesk9$palette$SolidColor$fromRGB = function (_v0) {
	var red = _v0.a;
	var green = _v0.b;
	var blue = _v0.c;
	return $tesk9$palette$SolidColor$Color(
		$tesk9$palette$Internal$Color$fromRGBA(
			{alpha: $tesk9$palette$Internal$Opacity$opaque, blue: blue, green: green, red: red}));
};
var $NoRedInk$noredink_ui$Nri$Ui$Colors$Extra$fromCssColor = function (color) {
	return $tesk9$palette$SolidColor$fromRGB(
		_Utils_Tuple3(color.red, color.green, color.blue));
};
var $rtfeldman$elm_css$Css$noRepeat = {backgroundRepeat: $rtfeldman$elm_css$Css$Structure$Compatible, backgroundRepeatShorthand: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'no-repeat'};
var $NoRedInk$noredink_ui$Nri$Ui$CssVendorPrefix$V1$prefixes = _List_fromArray(
	['-webkit-', '-moz-', '-o-', '-ms-', '']);
var $NoRedInk$noredink_ui$Nri$Ui$CssVendorPrefix$V1$property = F2(
	function (prop, value_) {
		return $rtfeldman$elm_css$Css$batch(
			A2(
				$elm$core$List$map,
				function (prefix) {
					return A2(
						$rtfeldman$elm_css$Css$property,
						_Utils_ap(prefix, prop),
						value_);
				},
				$NoRedInk$noredink_ui$Nri$Ui$CssVendorPrefix$V1$prefixes));
	});
var $elm$core$Basics$abs = function (n) {
	return (n < 0) ? (-n) : n;
};
var $tesk9$palette$Internal$RGBA$fromHSLA = function (hsl) {
	var hue = hsl.hue;
	var alpha = hsl.alpha;
	var saturation = hsl.saturation / 100;
	var lightness = hsl.lightness / 100;
	var hueIsBetween = F2(
		function (lowerBound, upperBound) {
			return (_Utils_cmp(lowerBound, hue) < 1) && (_Utils_cmp(hue, upperBound) < 1);
		});
	var chroma = (1 - $elm$core$Basics$abs((2 * lightness) - 1)) * saturation;
	var lightnessModifier = lightness - (chroma / 2);
	var zigUp = function (xIntercept) {
		return (chroma * (hue - xIntercept)) / 60;
	};
	var zigDown = function (xIntercept) {
		return (-1) * zigUp(xIntercept);
	};
	var _v0 = A2(hueIsBetween, 0, 60) ? _Utils_Tuple3(
		chroma,
		zigUp(0),
		0) : (A2(hueIsBetween, 60, 120) ? _Utils_Tuple3(
		zigDown(120),
		chroma,
		0) : (A2(hueIsBetween, 120, 180) ? _Utils_Tuple3(
		0,
		chroma,
		zigUp(120)) : (A2(hueIsBetween, 180, 240) ? _Utils_Tuple3(
		0,
		zigDown(240),
		chroma) : (A2(hueIsBetween, 240, 300) ? _Utils_Tuple3(
		zigUp(240),
		0,
		chroma) : _Utils_Tuple3(
		chroma,
		0,
		zigDown(360))))));
	var r = _v0.a;
	var g = _v0.b;
	var b = _v0.c;
	return $tesk9$palette$Internal$RGBA$fromChannels(
		{alpha: alpha, blue: (b + lightnessModifier) * 255, green: (g + lightnessModifier) * 255, red: (r + lightnessModifier) * 255});
};
var $tesk9$palette$Internal$HSLA$toChannels = function (_v0) {
	var values = _v0.a;
	return values;
};
var $tesk9$palette$Internal$Color$convertHSLToRGBA = function (color) {
	return $tesk9$palette$Internal$Color$RGBA(
		$tesk9$palette$Internal$RGBA$fromHSLA(
			$tesk9$palette$Internal$HSLA$toChannels(color)));
};
var $tesk9$palette$Internal$Color$asRGBA = function (color) {
	asRGBA:
	while (true) {
		if (color.$ === 'RGBA') {
			var values = color.a;
			return values;
		} else {
			var hslValues = color.a;
			var $temp$color = $tesk9$palette$Internal$Color$convertHSLToRGBA(hslValues);
			color = $temp$color;
			continue asRGBA;
		}
	}
};
var $tesk9$palette$Internal$RGBA$toStringWithoutOpacity = function (_v0) {
	var red = _v0.a.red;
	var green = _v0.a.green;
	var blue = _v0.a.blue;
	return 'rgb(' + ($elm$core$String$fromFloat(red) + (',' + ($elm$core$String$fromFloat(green) + (',' + ($elm$core$String$fromFloat(blue) + ')')))));
};
var $tesk9$palette$SolidColor$toRGBString = function (_v0) {
	var color = _v0.a;
	return $tesk9$palette$Internal$RGBA$toStringWithoutOpacity(
		$tesk9$palette$Internal$Color$asRGBA(color));
};
var $NoRedInk$noredink_ui$Nri$Ui$Select$V8$urlUtf8 = function (content) {
	return 'url(\'data:image/svg+xml;utf8,' + (content + '\')');
};
var $NoRedInk$noredink_ui$Nri$Ui$Select$V8$selectArrowsCss = function () {
	var color = $tesk9$palette$SolidColor$toRGBString(
		$NoRedInk$noredink_ui$Nri$Ui$Colors$Extra$fromCssColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure));
	return $rtfeldman$elm_css$Css$batch(
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Css$property,
				'background',
				$NoRedInk$noredink_ui$Nri$Ui$Select$V8$urlUtf8('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="12px" height="16px" viewBox="0 0 12 16"><g fill=" ' + (color + ' "><path d="M2.10847,9.341803 C1.65347,8.886103 0.91427,8.886103 0.45857,9.341803 C0.23107,9.570003 0.11697,9.868203 0.11697,10.167103 C0.11697,10.465303 0.23107,10.763503 0.45857,10.991703 L5.12547,15.657903 C5.57977,16.114303 6.31897,16.114303 6.77537,15.657903 L11.44157,10.991703 C11.89727,10.536003 11.89727,9.797503 11.44157,9.341803 C10.98657,8.886103 10.24667,8.886103 9.79167,9.341803 L5.95007,13.182703 L2.10847,9.341803 Z"/><path d="M1.991556,6.658179 C1.536659,7.11394 0.797279,7.11394 0.3416911,6.658179 C0.1140698,6.43004 0,6.13173 0,5.83325 C0,5.53476 0.1140698,5.23645 0.3416911,5.00831 L5.008185,0.34182 C5.463081,-0.11394 6.202461,-0.11394 6.65805,0.34182 L11.32454,5.00831 C11.78031,5.4639 11.78031,6.202592 11.32454,6.658179 C10.86965,7.11394 10.13027,7.11394 9.674679,6.658179 L5.833118,2.81679 L1.991556,6.658179 Z"/></g></svg> '))),
				$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white),
				A2($NoRedInk$noredink_ui$Nri$Ui$CssVendorPrefix$V1$property, 'appearance', 'none'),
				$rtfeldman$elm_css$Css$backgroundRepeat($rtfeldman$elm_css$Css$noRepeat),
				A2($rtfeldman$elm_css$Css$property, 'background-position', 'center right -20px'),
				$rtfeldman$elm_css$Css$backgroundOrigin($rtfeldman$elm_css$Css$contentBox)
			]));
}();
var $rtfeldman$elm_css$Html$Styled$option = $rtfeldman$elm_css$Html$Styled$node('option');
var $tesk9$accessible_html_with_css$Accessibility$Styled$option = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$option(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $rtfeldman$elm_css$Html$Styled$Attributes$selected = $rtfeldman$elm_css$Html$Styled$Attributes$boolProperty('selected');
var $NoRedInk$noredink_ui$Nri$Ui$Select$V8$viewChoice = F2(
	function (current, choice) {
		var isSelected = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				$elm$core$Basics$eq(choice.value),
				current));
		return A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$option,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$id(choice.idAndValue),
					$rtfeldman$elm_css$Html$Styled$Attributes$value(choice.idAndValue),
					$rtfeldman$elm_css$Html$Styled$Attributes$selected(isSelected)
				]),
			_List_fromArray(
				[
					$tesk9$accessible_html_with_css$Accessibility$Styled$text(choice.label)
				]));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Select$V8$viewDefaultChoice = F2(
	function (current, displayText) {
		return A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$option,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$selected(
					_Utils_eq(current, $elm$core$Maybe$Nothing)),
					$rtfeldman$elm_css$Html$Styled$Attributes$disabled(true)
				]),
			_List_fromArray(
				[
					$tesk9$accessible_html_with_css$Accessibility$Styled$text(displayText)
				]));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Select$V8$viewSelect = function (config) {
	var stringChoices = function () {
		var _v0 = config.valueToString;
		if (_v0.$ === 'Just') {
			var valueToString = _v0.a;
			return A2(
				$elm$core$List$map,
				function (choice) {
					return {
						idAndValue: $NoRedInk$noredink_ui$Nri$Ui$Select$V8$generateId(
							valueToString(choice.value)),
						label: choice.label,
						value: choice.value
					};
				},
				config.choices);
		} else {
			return _List_Nil;
		}
	}();
	var valueLookup = $elm$core$Dict$fromList(
		A2(
			$elm$core$List$map,
			function (x) {
				return _Utils_Tuple2(x.idAndValue, x.value);
			},
			stringChoices));
	var defaultOption = A2(
		$elm$core$Maybe$withDefault,
		_List_Nil,
		A2(
			$elm$core$Maybe$map,
			A2(
				$elm$core$Basics$composeR,
				$NoRedInk$noredink_ui$Nri$Ui$Select$V8$viewDefaultChoice(config.current),
				$elm$core$List$singleton),
			config.defaultDisplayText));
	var decodeValue = function (string) {
		return A2(
			$elm$core$Maybe$withDefault,
			$elm$json$Json$Decode$fail(
				'Nri.Select: could not decode the value: ' + (string + ('\nexpected one of: ' + A2(
					$elm$core$String$join,
					', ',
					$elm$core$Dict$keys(valueLookup))))),
			A2(
				$elm$core$Maybe$map,
				$elm$json$Json$Decode$succeed,
				A2($elm$core$Dict$get, string, valueLookup)));
	};
	var onSelectHandler = A2(
		$rtfeldman$elm_css$Html$Styled$Events$on,
		'change',
		A2($elm$json$Json$Decode$andThen, decodeValue, $rtfeldman$elm_css$Html$Styled$Events$targetValue));
	var currentVal = (_Utils_eq(config.current, $elm$core$Maybe$Nothing) && _Utils_eq(config.defaultDisplayText, $elm$core$Maybe$Nothing)) ? A2(
		$elm$core$Maybe$map,
		function ($) {
			return $.value;
		},
		$elm$core$List$head(config.choices)) : config.current;
	return A5(
		$NoRedInk$noredink_ui$Nri$Ui$styled,
		$tesk9$accessible_html_with_css$Accessibility$Styled$select,
		'nri-select-menu',
		_List_fromArray(
			[
				A3(
				$rtfeldman$elm_css$Css$border3,
				$rtfeldman$elm_css$Css$px(1),
				$rtfeldman$elm_css$Css$solid,
				config.isInError ? $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$purple : $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray75),
				$rtfeldman$elm_css$Css$borderBottomWidth(
				$rtfeldman$elm_css$Css$px(3)),
				$rtfeldman$elm_css$Css$borderRadius(
				$rtfeldman$elm_css$Css$px(8)),
				$rtfeldman$elm_css$Css$focus(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$borderColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure)
					])),
				$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray20),
				$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont,
				$rtfeldman$elm_css$Css$fontSize(
				$rtfeldman$elm_css$Css$px(15)),
				$rtfeldman$elm_css$Css$fontWeight(
				$rtfeldman$elm_css$Css$int(600)),
				$rtfeldman$elm_css$Css$textOverflow($rtfeldman$elm_css$Css$ellipsis),
				$rtfeldman$elm_css$Css$overflow($rtfeldman$elm_css$Css$hidden),
				$rtfeldman$elm_css$Css$whiteSpace($rtfeldman$elm_css$Css$noWrap),
				$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer),
				$rtfeldman$elm_css$Css$height(
				$rtfeldman$elm_css$Css$px(45)),
				$rtfeldman$elm_css$Css$width(
				$rtfeldman$elm_css$Css$pct(100)),
				$rtfeldman$elm_css$Css$paddingLeft(
				$rtfeldman$elm_css$Css$px(15)),
				$rtfeldman$elm_css$Css$paddingRight(
				$rtfeldman$elm_css$Css$px(30)),
				$NoRedInk$noredink_ui$Nri$Ui$Select$V8$selectArrowsCss
			]),
		A2(
			$elm$core$List$cons,
			onSelectHandler,
			A2(
				$elm$core$List$cons,
				$rtfeldman$elm_css$Html$Styled$Attributes$id(config.id),
				A2(
					$elm$core$List$map,
					$rtfeldman$elm_css$Html$Styled$Attributes$map($elm$core$Basics$never),
					config.custom))),
		_Utils_ap(
			defaultOption,
			A2(
				$elm$core$List$map,
				$NoRedInk$noredink_ui$Nri$Ui$Select$V8$viewChoice(currentVal),
				stringChoices)));
};
var $NoRedInk$noredink_ui$Nri$Ui$Select$V8$view = F2(
	function (label, attributes) {
		var config = $NoRedInk$noredink_ui$Nri$Ui$Select$V8$applyConfig(attributes);
		var id_ = A2(
			$elm$core$Maybe$withDefault,
			$NoRedInk$noredink_ui$Nri$Ui$Select$V8$generateId(label),
			config.id);
		var isInError_ = $NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$getIsInError(config.error);
		return A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$div,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
					_Utils_ap(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$relative),
								config.noMarginTop ? $rtfeldman$elm_css$Css$batch(_List_Nil) : $rtfeldman$elm_css$Css$paddingTop(
								$rtfeldman$elm_css$Css$px($NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$defaultMarginTop))
							]),
						config.containerCss))
				]),
			_List_fromArray(
				[
					A2(
					$NoRedInk$noredink_ui$InputLabelInternal$view,
					{_for: id_, label: label, theme: $NoRedInk$noredink_ui$Nri$Ui$InputStyles$V3$Standard},
					config),
					$NoRedInk$noredink_ui$Nri$Ui$Select$V8$viewSelect(
					{choices: config.choices, current: config.value, custom: config.custom, defaultDisplayText: config.defaultDisplayText, id: id_, isInError: isInError_, valueToString: config.valueToString}),
					A2($NoRedInk$noredink_ui$InputErrorAndGuidanceInternal$view, id_, config)
				]));
	});
var $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$toTriStateString = A2(
	$elm$core$Basics$composeL,
	$elm$core$Maybe$withDefault('mixed'),
	$elm$core$Maybe$map($tesk9$accessible_html_with_css$Accessibility$Styled$Utils$toBoolString));
var $tesk9$accessible_html_with_css$Accessibility$Styled$Widget$checked = A2(
	$elm$core$Basics$composeL,
	$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$aria('checked'),
	$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$toTriStateString);
var $rtfeldman$elm_css$Css$Global$class = F2(
	function (str, styles) {
		return A2(
			$rtfeldman$elm_css$VirtualDom$Styled$makeSnippet,
			styles,
			$rtfeldman$elm_css$Css$Structure$UniversalSelectorSequence(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$Structure$ClassSelector(str)
					])));
	});
var $tesk9$accessible_html_with_css$Accessibility$Styled$Aria$controls = $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$aria('controls');
var $NoRedInk$noredink_ui$Nri$Ui$Switch$V1$customize = F2(
	function (attr, config) {
		switch (attr.$) {
			case 'OnSwitch':
				var onSwitch_ = attr.a;
				return _Utils_update(
					config,
					{
						onSwitch: $elm$core$Maybe$Just(onSwitch_)
					});
			case 'Disabled':
				return _Utils_update(
					config,
					{onSwitch: $elm$core$Maybe$Nothing});
			case 'Id':
				var id_ = attr.a;
				return _Utils_update(
					config,
					{id: id_});
			case 'Label':
				var label_ = attr.a;
				return _Utils_update(
					config,
					{
						label: $elm$core$Maybe$Just(label_)
					});
			default:
				var custom_ = attr.a;
				return _Utils_update(
					config,
					{attributes: custom_});
		}
	});
var $NoRedInk$noredink_ui$Nri$Ui$Switch$V1$defaultConfig = {attributes: _List_Nil, id: 'nri-ui-switch-with-default-id', label: $elm$core$Maybe$Nothing, onSwitch: $elm$core$Maybe$Nothing};
var $rtfeldman$elm_css$Html$Styled$Attributes$checked = $rtfeldman$elm_css$Html$Styled$Attributes$boolProperty('checked');
var $tesk9$accessible_html_with_css$Accessibility$Styled$Widget$indeterminate = A2(
	$rtfeldman$elm_css$Html$Styled$Attributes$property,
	'indeterminate',
	$elm$json$Json$Encode$bool(true));
var $tesk9$accessible_html_with_css$Accessibility$Styled$checkbox = F3(
	function (value_, maybeChecked, attributes) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$input,
			_Utils_ap(
				$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$type_('checkbox'),
							$rtfeldman$elm_css$Html$Styled$Attributes$value(value_),
							A2(
							$elm$core$Maybe$withDefault,
							$tesk9$accessible_html_with_css$Accessibility$Styled$Widget$indeterminate,
							A2($elm$core$Maybe$map, $rtfeldman$elm_css$Html$Styled$Attributes$checked, maybeChecked))
						])),
				attributes),
			_List_Nil);
	});
var $tesk9$accessible_html_with_css$Accessibility$Styled$Widget$disabled = A2(
	$elm$core$Basics$composeL,
	$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$aria('disabled'),
	$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$toBoolString);
var $rtfeldman$elm_css$Html$Styled$Events$targetChecked = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['target', 'checked']),
	$elm$json$Json$Decode$bool);
var $rtfeldman$elm_css$Html$Styled$Events$onCheck = function (tagger) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$on,
		'change',
		A2($elm$json$Json$Decode$map, tagger, $rtfeldman$elm_css$Html$Styled$Events$targetChecked));
};
var $NoRedInk$noredink_ui$Nri$Ui$Switch$V1$viewCheckbox = function (config) {
	return A3(
		$tesk9$accessible_html_with_css$Accessibility$Styled$checkbox,
		config.id,
		$elm$core$Maybe$Just(config.checked),
		_Utils_ap(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$id(config.id),
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
							$rtfeldman$elm_css$Css$top(
							$rtfeldman$elm_css$Css$px(10)),
							$rtfeldman$elm_css$Css$left(
							$rtfeldman$elm_css$Css$px(10)),
							$rtfeldman$elm_css$Css$zIndex(
							$rtfeldman$elm_css$Css$int(0)),
							$rtfeldman$elm_css$Css$opacity(
							$rtfeldman$elm_css$Css$num(0))
						])),
					function () {
					var _v0 = config.onCheck;
					if (_v0.$ === 'Just') {
						var onCheck = _v0.a;
						return $rtfeldman$elm_css$Html$Styled$Events$onCheck(onCheck);
					} else {
						return $tesk9$accessible_html_with_css$Accessibility$Styled$Widget$disabled(true);
					}
				}()
				]),
			A2(
				$elm$core$List$map,
				$rtfeldman$elm_css$Html$Styled$Attributes$map($elm$core$Basics$never),
				config.attributes)));
};
var $rtfeldman$elm_css$Svg$Styled$Attributes$class = $rtfeldman$elm_css$VirtualDom$Styled$attribute('class');
var $rtfeldman$elm_css$Svg$Styled$Internal$css = function (styles) {
	var cssTemplate = $rtfeldman$elm_css$VirtualDom$Styled$getCssTemplate(styles);
	var classAttribute = A2($elm$virtual_dom$VirtualDom$attribute, '', '');
	return A3($rtfeldman$elm_css$VirtualDom$Styled$Attribute, classAttribute, true, cssTemplate);
};
var $rtfeldman$elm_css$Svg$Styled$Attributes$css = $rtfeldman$elm_css$Svg$Styled$Internal$css;
var $rtfeldman$elm_css$Svg$Styled$defs = $rtfeldman$elm_css$Svg$Styled$node('defs');
var $rtfeldman$elm_css$Svg$Styled$Attributes$dy = $rtfeldman$elm_css$VirtualDom$Styled$attribute('dy');
var $rtfeldman$elm_css$Svg$Styled$feColorMatrix = $rtfeldman$elm_css$Svg$Styled$node('feColorMatrix');
var $rtfeldman$elm_css$Svg$Styled$feComposite = $rtfeldman$elm_css$Svg$Styled$node('feComposite');
var $rtfeldman$elm_css$Svg$Styled$feOffset = $rtfeldman$elm_css$Svg$Styled$node('feOffset');
var $rtfeldman$elm_css$Css$fill = $rtfeldman$elm_css$Css$prop1('fill');
var $rtfeldman$elm_css$Svg$Styled$filter = $rtfeldman$elm_css$Svg$Styled$node('filter');
var $rtfeldman$elm_css$Svg$Styled$Attributes$filter = $rtfeldman$elm_css$VirtualDom$Styled$attribute('filter');
var $rtfeldman$elm_css$Svg$Styled$Attributes$filterUnits = $rtfeldman$elm_css$VirtualDom$Styled$attribute('filterUnits');
var $rtfeldman$elm_css$Svg$Styled$Attributes$id = $rtfeldman$elm_css$VirtualDom$Styled$attribute('id');
var $rtfeldman$elm_css$Svg$Styled$Attributes$in2 = $rtfeldman$elm_css$VirtualDom$Styled$attribute('in2');
var $rtfeldman$elm_css$Svg$Styled$Attributes$in_ = $rtfeldman$elm_css$VirtualDom$Styled$attribute('in');
var $rtfeldman$elm_css$Svg$Styled$Attributes$k2 = $rtfeldman$elm_css$VirtualDom$Styled$attribute('k2');
var $rtfeldman$elm_css$Svg$Styled$Attributes$k3 = $rtfeldman$elm_css$VirtualDom$Styled$attribute('k3');
var $rtfeldman$elm_css$Svg$Styled$Attributes$operator = $rtfeldman$elm_css$VirtualDom$Styled$attribute('operator');
var $rtfeldman$elm_css$Svg$Styled$rect = $rtfeldman$elm_css$Svg$Styled$node('rect');
var $rtfeldman$elm_css$Svg$Styled$Attributes$result = $rtfeldman$elm_css$VirtualDom$Styled$attribute('result');
var $rtfeldman$elm_css$Svg$Styled$Attributes$rx = $rtfeldman$elm_css$VirtualDom$Styled$attribute('rx');
var $rtfeldman$elm_css$Svg$Styled$Attributes$strokeLinecap = $rtfeldman$elm_css$VirtualDom$Styled$attribute('stroke-linecap');
var $rtfeldman$elm_css$Svg$Styled$Attributes$strokeLinejoin = $rtfeldman$elm_css$VirtualDom$Styled$attribute('stroke-linejoin');
var $rtfeldman$elm_css$Svg$Styled$Attributes$strokeWidth = $rtfeldman$elm_css$VirtualDom$Styled$attribute('stroke-width');
var $rtfeldman$elm_css$Css$valuesOrNone = function (list) {
	return $elm$core$List$isEmpty(list) ? {value: 'none'} : {
		value: A3(
			$rtfeldman$elm_css$Css$String$mapJoin,
			function ($) {
				return $.value;
			},
			' ',
			list)
	};
};
var $rtfeldman$elm_css$Css$transforms = A2(
	$elm$core$Basics$composeL,
	$rtfeldman$elm_css$Css$prop1('transform'),
	$rtfeldman$elm_css$Css$valuesOrNone);
var $rtfeldman$elm_css$Css$transform = function (only) {
	return $rtfeldman$elm_css$Css$transforms(
		_List_fromArray(
			[only]));
};
var $rtfeldman$elm_css$Css$Structure$CustomQuery = function (a) {
	return {$: 'CustomQuery', a: a};
};
var $rtfeldman$elm_css$Css$Media$withMediaQuery = function (queries) {
	return $rtfeldman$elm_css$Css$Preprocess$WithMedia(
		A2($elm$core$List$map, $rtfeldman$elm_css$Css$Structure$CustomQuery, queries));
};
var $NoRedInk$noredink_ui$Nri$Ui$Switch$V1$transition = function (transitionRules) {
	return A2(
		$rtfeldman$elm_css$Css$Media$withMediaQuery,
		_List_fromArray(
			['(prefers-reduced-motion: no-preference)']),
		_List_fromArray(
			[
				A2($rtfeldman$elm_css$Css$property, 'transition', transitionRules)
			]));
};
var $rtfeldman$elm_css$Css$translateX = function (_v0) {
	var value = _v0.value;
	return {
		transform: $rtfeldman$elm_css$Css$Structure$Compatible,
		value: A2(
			$rtfeldman$elm_css$Css$cssFunction,
			'translateX',
			_List_fromArray(
				[value]))
	};
};
var $rtfeldman$elm_css$Svg$Styled$use = $rtfeldman$elm_css$Svg$Styled$node('use');
var $rtfeldman$elm_css$Svg$Styled$Attributes$values = function (value) {
	return A2($rtfeldman$elm_css$VirtualDom$Styled$attribute, 'values', value);
};
var $rtfeldman$elm_css$Svg$Styled$Attributes$x = $rtfeldman$elm_css$VirtualDom$Styled$attribute('x');
var $elm$virtual_dom$VirtualDom$attributeNS = F3(
	function (namespace, key, value) {
		return A3(
			_VirtualDom_attributeNS,
			namespace,
			_VirtualDom_noOnOrFormAction(key),
			_VirtualDom_noJavaScriptOrHtmlUri(value));
	});
var $rtfeldman$elm_css$VirtualDom$Styled$attributeNS = F3(
	function (namespace, key, value) {
		return A3(
			$rtfeldman$elm_css$VirtualDom$Styled$Attribute,
			A3($elm$virtual_dom$VirtualDom$attributeNS, namespace, key, value),
			false,
			'');
	});
var $rtfeldman$elm_css$Svg$Styled$Attributes$xlinkHref = function (value) {
	return A3($rtfeldman$elm_css$VirtualDom$Styled$attributeNS, 'http://www.w3.org/1999/xlink', 'xlink:href', value);
};
var $rtfeldman$elm_css$Svg$Styled$Attributes$y = $rtfeldman$elm_css$VirtualDom$Styled$attribute('y');
var $NoRedInk$noredink_ui$Nri$Ui$Switch$V1$viewSwitch = function (config) {
	var shadowFilterId = config.id + '-shadow-filter';
	var shadowBoxId = config.id + '-shadow-box';
	return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
		A2(
			$rtfeldman$elm_css$Svg$Styled$svg,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Svg$Styled$Attributes$width('43'),
					$rtfeldman$elm_css$Svg$Styled$Attributes$height('32'),
					$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 43 32'),
					$rtfeldman$elm_css$Svg$Styled$Attributes$css(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$zIndex(
							$rtfeldman$elm_css$Css$int(1)),
							config.enabled ? $rtfeldman$elm_css$Css$opacity(
							$rtfeldman$elm_css$Css$num(1)) : $rtfeldman$elm_css$Css$opacity(
							$rtfeldman$elm_css$Css$num(0.4))
						]))
				]),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Svg$Styled$defs,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Svg$Styled$filter,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Svg$Styled$Attributes$id(shadowFilterId),
									$rtfeldman$elm_css$Svg$Styled$Attributes$width('105%'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$height('106.7%'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$x('-2.5%'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$y('-3.3%'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$filterUnits('objectBoundingBox')
								]),
							_List_fromArray(
								[
									A2(
									$rtfeldman$elm_css$Svg$Styled$feOffset,
									_List_fromArray(
										[
											$rtfeldman$elm_css$Svg$Styled$Attributes$dy('2'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$in_('SourceAlpha'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$result('shadowOffsetInner1')
										]),
									_List_Nil),
									A2(
									$rtfeldman$elm_css$Svg$Styled$feComposite,
									_List_fromArray(
										[
											$rtfeldman$elm_css$Svg$Styled$Attributes$in_('shadowOffsetInner1'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$in2('SourceAlpha'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$k2('-1'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$k3('1'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$operator('arithmetic'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$result('shadowInnerInner1')
										]),
									_List_Nil),
									A2(
									$rtfeldman$elm_css$Svg$Styled$feColorMatrix,
									_List_fromArray(
										[
											$rtfeldman$elm_css$Svg$Styled$Attributes$in_('shadowInnerInner1'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$values('0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.1 0')
										]),
									_List_Nil)
								])),
							A2(
							$rtfeldman$elm_css$Svg$Styled$rect,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Svg$Styled$Attributes$id(shadowBoxId),
									$rtfeldman$elm_css$Svg$Styled$Attributes$width('40'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$height('30'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$x('0'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$y('0'),
									$rtfeldman$elm_css$Svg$Styled$Attributes$rx('15')
								]),
							_List_Nil)
						])),
					A2(
					$rtfeldman$elm_css$Svg$Styled$g,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Svg$Styled$Attributes$fill('none'),
							$rtfeldman$elm_css$Svg$Styled$Attributes$fillRule('even-odd'),
							$rtfeldman$elm_css$Svg$Styled$Attributes$transform('translate(1, 1)')
						]),
					_List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Svg$Styled$g,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$rtfeldman$elm_css$Svg$Styled$use,
									_List_fromArray(
										[
											$rtfeldman$elm_css$Svg$Styled$Attributes$xlinkHref('#' + shadowBoxId),
											$rtfeldman$elm_css$Svg$Styled$Attributes$css(
											_List_fromArray(
												[
													config.isOn ? $rtfeldman$elm_css$Css$fill($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$glacier) : $rtfeldman$elm_css$Css$fill($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray92),
													$NoRedInk$noredink_ui$Nri$Ui$Switch$V1$transition('fill 0.2s')
												]))
										]),
									_List_Nil),
									A2(
									$rtfeldman$elm_css$Svg$Styled$use,
									_List_fromArray(
										[
											$rtfeldman$elm_css$Svg$Styled$Attributes$xlinkHref('#' + shadowBoxId),
											$rtfeldman$elm_css$Svg$Styled$Attributes$fill('#000'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$filter('url(#' + (shadowFilterId + ')'))
										]),
									_List_Nil)
								])),
							A2(
							$rtfeldman$elm_css$Svg$Styled$g,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Svg$Styled$Attributes$css(
									_List_fromArray(
										[
											config.isOn ? $rtfeldman$elm_css$Css$transform(
											$rtfeldman$elm_css$Css$translateX(
												$rtfeldman$elm_css$Css$px(11))) : $rtfeldman$elm_css$Css$transform(
											$rtfeldman$elm_css$Css$translateX(
												$rtfeldman$elm_css$Css$px(0))),
											$NoRedInk$noredink_ui$Nri$Ui$Switch$V1$transition('transform 0.2s ease-in-out')
										]))
								]),
							_List_fromArray(
								[
									A2(
									$rtfeldman$elm_css$Svg$Styled$circle,
									_List_fromArray(
										[
											$rtfeldman$elm_css$Svg$Styled$Attributes$cx('15'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$cy('15'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$r('14.5'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$fill('#FFF'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$css(
											_List_fromArray(
												[
													config.isOn ? A2($rtfeldman$elm_css$Css$property, 'stroke', '#146AFF') : A2($rtfeldman$elm_css$Css$property, 'stroke', '#BFBFBF'),
													$NoRedInk$noredink_ui$Nri$Ui$Switch$V1$transition('stroke 0.1s')
												])),
											$rtfeldman$elm_css$Svg$Styled$Attributes$class('switch-slider')
										]),
									_List_Nil),
									A2(
									$rtfeldman$elm_css$Svg$Styled$path,
									_List_fromArray(
										[
											$rtfeldman$elm_css$Svg$Styled$Attributes$strokeLinecap('round'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$strokeLinejoin('round'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$strokeWidth('3'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$d('M8 15.865L12.323 20 21.554 10'),
											$rtfeldman$elm_css$Svg$Styled$Attributes$css(
											_List_fromArray(
												[
													config.isOn ? A2($rtfeldman$elm_css$Css$property, 'stroke', '#146AFF') : A2($rtfeldman$elm_css$Css$property, 'stroke', 'rgba(255,255,255,0)'),
													$NoRedInk$noredink_ui$Nri$Ui$Switch$V1$transition('stroke 0.2s')
												]))
										]),
									_List_Nil)
								]))
						]))
				])));
};
var $NoRedInk$noredink_ui$Nri$Ui$Switch$V1$view = F2(
	function (attrs, isOn) {
		var config = A3($elm$core$List$foldl, $NoRedInk$noredink_ui$Nri$Ui$Switch$V1$customize, $NoRedInk$noredink_ui$Nri$Ui$Switch$V1$defaultConfig, attrs);
		return A2(
			$rtfeldman$elm_css$Html$Styled$label,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$id(config.id + '-container'),
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineFlex),
							$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
							$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$relative),
							A2(
							$rtfeldman$elm_css$Css$pseudoClass,
							'focus-within',
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$Global$descendants(
									_List_fromArray(
										[
											A2(
											$rtfeldman$elm_css$Css$Global$class,
											'switch-slider',
											_List_fromArray(
												[
													A2($rtfeldman$elm_css$Css$property, 'stroke', '#146AFF'),
													A2($rtfeldman$elm_css$Css$property, 'stroke-width', '3px')
												]))
										]))
								])),
							$rtfeldman$elm_css$Css$cursor(
							(!_Utils_eq(config.onSwitch, $elm$core$Maybe$Nothing)) ? $rtfeldman$elm_css$Css$pointer : $rtfeldman$elm_css$Css$notAllowed)
						])),
					$tesk9$accessible_html_with_css$Accessibility$Styled$Aria$controls(config.id),
					$tesk9$accessible_html_with_css$Accessibility$Styled$Widget$checked(
					$elm$core$Maybe$Just(isOn))
				]),
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$Switch$V1$viewCheckbox(
					{attributes: config.attributes, checked: isOn, id: config.id, onCheck: config.onSwitch}),
					$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
					$NoRedInk$noredink_ui$Nri$Ui$Switch$V1$viewSwitch(
						{
							enabled: !_Utils_eq(config.onSwitch, $elm$core$Maybe$Nothing),
							id: config.id,
							isOn: isOn
						})),
					function () {
					var _v0 = config.label;
					if (_v0.$ === 'Just') {
						var label_ = _v0.a;
						return A2(
							$tesk9$accessible_html_with_css$Accessibility$Styled$span,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$Attributes$css(
									_List_fromArray(
										[
											$rtfeldman$elm_css$Css$fontWeight(
											$rtfeldman$elm_css$Css$int(600)),
											$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy),
											$rtfeldman$elm_css$Css$paddingLeft(
											$rtfeldman$elm_css$Css$px(5))
										])),
									$rtfeldman$elm_css$Html$Styled$Attributes$for(config.id)
								]),
							_List_fromArray(
								[label_]));
					} else {
						return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
					}
				}()
				]));
	});
var $rtfeldman$elm_css$Html$Styled$table = $rtfeldman$elm_css$Html$Styled$node('table');
var $rtfeldman$elm_css$Css$borderCollapse = $rtfeldman$elm_css$Css$prop1('border-collapse');
var $rtfeldman$elm_css$Css$collapse = {borderCollapse: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'collapse', visibility: $rtfeldman$elm_css$Css$Structure$Compatible};
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$tableStyles = _List_fromArray(
	[
		$rtfeldman$elm_css$Css$borderCollapse($rtfeldman$elm_css$Css$collapse),
		$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont,
		$rtfeldman$elm_css$Css$width(
		$rtfeldman$elm_css$Css$pct(100))
	]);
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$table = function (styles) {
	return $rtfeldman$elm_css$Html$Styled$table(
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$css(
				_Utils_ap(styles, $NoRedInk$noredink_ui$Nri$Ui$Table$V5$tableStyles))
			]));
};
var $rtfeldman$elm_css$Html$Styled$tbody = $rtfeldman$elm_css$Html$Styled$node('tbody');
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$tableBody = F2(
	function (toRow, items) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$tbody,
			_List_Nil,
			A2($elm$core$List$map, toRow, items));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$headersStyles = _List_fromArray(
	[
		A3(
		$rtfeldman$elm_css$Css$borderBottom3,
		$rtfeldman$elm_css$Css$px(3),
		$rtfeldman$elm_css$Css$solid,
		$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray75),
		$rtfeldman$elm_css$Css$height(
		$rtfeldman$elm_css$Css$px(45)),
		$rtfeldman$elm_css$Css$fontSize(
		$rtfeldman$elm_css$Css$px(15))
	]);
var $rtfeldman$elm_css$Css$bold = {fontWeight: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'bold'};
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$headerStyles = _List_fromArray(
	[
		A4(
		$rtfeldman$elm_css$Css$padding4,
		$rtfeldman$elm_css$Css$px(15),
		$rtfeldman$elm_css$Css$px(12),
		$rtfeldman$elm_css$Css$px(11),
		$rtfeldman$elm_css$Css$px(12)),
		$rtfeldman$elm_css$Css$textAlign($rtfeldman$elm_css$Css$left),
		$rtfeldman$elm_css$Css$fontWeight($rtfeldman$elm_css$Css$bold)
	]);
var $rtfeldman$elm_css$Html$Styled$Attributes$scope = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('scope');
var $rtfeldman$elm_css$Html$Styled$th = $rtfeldman$elm_css$Html$Styled$node('th');
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$tableRowHeader = function (_v0) {
	var header = _v0.a;
	var width = _v0.c;
	return A2(
		$rtfeldman$elm_css$Html$Styled$th,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$scope('col'),
				$rtfeldman$elm_css$Html$Styled$Attributes$css(
				A2($elm$core$List$cons, width, $NoRedInk$noredink_ui$Nri$Ui$Table$V5$headerStyles))
			]),
		_List_fromArray(
			[header]));
};
var $rtfeldman$elm_css$Html$Styled$thead = $rtfeldman$elm_css$Html$Styled$node('thead');
var $rtfeldman$elm_css$Html$Styled$tr = $rtfeldman$elm_css$Html$Styled$node('tr');
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$tableHeader = function (columns) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$thead,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Html$Styled$tr,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$css($NoRedInk$noredink_ui$Nri$Ui$Table$V5$headersStyles)
					]),
				A2($elm$core$List$map, $NoRedInk$noredink_ui$Nri$Ui$Table$V5$tableRowHeader, columns))
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$tableWithHeader = F4(
	function (styles, columns, toRow, data) {
		return A2(
			$NoRedInk$noredink_ui$Nri$Ui$Table$V5$table,
			styles,
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$Table$V5$tableHeader(columns),
					A2($NoRedInk$noredink_ui$Nri$Ui$Table$V5$tableBody, toRow, data)
				]));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$rowStyles = _List_fromArray(
	[
		$rtfeldman$elm_css$Css$height(
		$rtfeldman$elm_css$Css$px(45)),
		$rtfeldman$elm_css$Css$fontSize(
		$rtfeldman$elm_css$Css$px(14)),
		$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray20),
		A2(
		$rtfeldman$elm_css$Css$pseudoClass,
		'nth-child(odd)',
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray96)
			]))
	]);
var $rtfeldman$elm_css$Html$Styled$td = $rtfeldman$elm_css$Html$Styled$node('td');
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$viewColumn = F2(
	function (data, _v0) {
		var renderer = _v0.b;
		var width = _v0.c;
		var cellStyles = _v0.d;
		return A2(
			$rtfeldman$elm_css$Html$Styled$td,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
					_Utils_ap(
						_List_fromArray(
							[
								width,
								$rtfeldman$elm_css$Css$verticalAlign($rtfeldman$elm_css$Css$middle)
							]),
						cellStyles(data)))
				]),
			_List_fromArray(
				[
					renderer(data)
				]));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$viewRow = F2(
	function (columns, data) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$tr,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$css($NoRedInk$noredink_ui$Nri$Ui$Table$V5$rowStyles)
				]),
			A2(
				$elm$core$List$map,
				$NoRedInk$noredink_ui$Nri$Ui$Table$V5$viewColumn(data),
				columns));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$view = function (columns) {
	return A3(
		$NoRedInk$noredink_ui$Nri$Ui$Table$V5$tableWithHeader,
		_List_Nil,
		columns,
		$NoRedInk$noredink_ui$Nri$Ui$Table$V5$viewRow(columns));
};
var $rtfeldman$elm_css$Css$animationIterationCount = function (arg) {
	return A2($rtfeldman$elm_css$Css$prop1, 'animation-iteration-count', arg);
};
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$fadeIn = $rtfeldman$elm_css$Css$Animations$keyframes(
	_List_fromArray(
		[
			_Utils_Tuple2(
			0,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$Animations$opacity(
					$rtfeldman$elm_css$Css$num(0))
				])),
			_Utils_Tuple2(
			100,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$Animations$opacity(
					$rtfeldman$elm_css$Css$num(1))
				]))
		]));
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$fadeInAnimation = _List_fromArray(
	[
		$rtfeldman$elm_css$Css$animationName($NoRedInk$noredink_ui$Nri$Ui$Table$V5$fadeIn),
		A2($rtfeldman$elm_css$Css$property, 'animation-duration', '0.4s'),
		A2($rtfeldman$elm_css$Css$property, 'animation-delay', '0.2s'),
		A2($rtfeldman$elm_css$Css$property, 'animation-fill-mode', 'forwards'),
		$rtfeldman$elm_css$Css$animationIterationCount(
		$rtfeldman$elm_css$Css$int(1)),
		$rtfeldman$elm_css$Css$opacity(
		$rtfeldman$elm_css$Css$num(0))
	]);
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$loadingTableStyles = $NoRedInk$noredink_ui$Nri$Ui$Table$V5$fadeInAnimation;
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$tableWithoutHeader = F4(
	function (styles, columns, toRow, data) {
		return A2(
			$NoRedInk$noredink_ui$Nri$Ui$Table$V5$table,
			styles,
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$thead,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Html$Styled$tr,
							$tesk9$accessible_html_with_css$Accessibility$Styled$Style$invisible,
							A2($elm$core$List$map, $NoRedInk$noredink_ui$Nri$Ui$Table$V5$tableRowHeader, columns))
						])),
					A2($NoRedInk$noredink_ui$Nri$Ui$Table$V5$tableBody, toRow, data)
				]));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$flash = $rtfeldman$elm_css$Css$Animations$keyframes(
	_List_fromArray(
		[
			_Utils_Tuple2(
			0,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$Animations$opacity(
					$rtfeldman$elm_css$Css$num(0.6))
				])),
			_Utils_Tuple2(
			50,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$Animations$opacity(
					$rtfeldman$elm_css$Css$num(0.2))
				])),
			_Utils_Tuple2(
			100,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$Animations$opacity(
					$rtfeldman$elm_css$Css$num(0.6))
				]))
		]));
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$flashAnimation = _List_fromArray(
	[
		$rtfeldman$elm_css$Css$animationName($NoRedInk$noredink_ui$Nri$Ui$Table$V5$flash),
		A2($rtfeldman$elm_css$Css$property, 'animation-duration', '2s'),
		A2($rtfeldman$elm_css$Css$property, 'animation-iteration-count', 'infinite'),
		$rtfeldman$elm_css$Css$opacity(
		$rtfeldman$elm_css$Css$num(0.6))
	]);
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$loadingCellStyles = _List_fromArray(
	[
		$rtfeldman$elm_css$Css$batch($NoRedInk$noredink_ui$Nri$Ui$Table$V5$flashAnimation),
		A2(
		$rtfeldman$elm_css$Css$padding2,
		$rtfeldman$elm_css$Css$px(14),
		$rtfeldman$elm_css$Css$px(10))
	]);
var $rtfeldman$elm_css$Css$EmUnits = {$: 'EmUnits'};
var $rtfeldman$elm_css$Css$em = A2($rtfeldman$elm_css$Css$Internal$lengthConverter, $rtfeldman$elm_css$Css$EmUnits, 'em');
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$loadingContentStyles = _List_fromArray(
	[
		$rtfeldman$elm_css$Css$width(
		$rtfeldman$elm_css$Css$pct(100)),
		$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineBlock),
		$rtfeldman$elm_css$Css$height(
		$rtfeldman$elm_css$Css$em(1)),
		$rtfeldman$elm_css$Css$borderRadius(
		$rtfeldman$elm_css$Css$em(1)),
		$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray75)
	]);
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$stylesLoadingColumn = F3(
	function (rowIndex, colIndex, width) {
		return _List_fromArray(
			[
				width,
				A2(
				$rtfeldman$elm_css$Css$property,
				'animation-delay',
				$elm$core$String$fromFloat((rowIndex + colIndex) * 0.1) + 's')
			]);
	});
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$viewLoadingColumn = F3(
	function (rowIndex, colIndex, _v0) {
		var width = _v0.c;
		return A2(
			$rtfeldman$elm_css$Html$Styled$td,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
					_Utils_ap(
						A3($NoRedInk$noredink_ui$Nri$Ui$Table$V5$stylesLoadingColumn, rowIndex, colIndex, width),
						_Utils_ap(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$verticalAlign($rtfeldman$elm_css$Css$middle)
								]),
							$NoRedInk$noredink_ui$Nri$Ui$Table$V5$loadingCellStyles)))
				]),
			_List_fromArray(
				[
					A2(
					$rtfeldman$elm_css$Html$Styled$span,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$css($NoRedInk$noredink_ui$Nri$Ui$Table$V5$loadingContentStyles)
						]),
					_List_Nil)
				]));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$viewLoadingRow = F2(
	function (columns, index) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$tr,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$css($NoRedInk$noredink_ui$Nri$Ui$Table$V5$rowStyles)
				]),
			A2(
				$elm$core$List$indexedMap,
				$NoRedInk$noredink_ui$Nri$Ui$Table$V5$viewLoadingColumn(index),
				columns));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Table$V5$viewLoadingWithoutHeader = function (columns) {
	return A4(
		$NoRedInk$noredink_ui$Nri$Ui$Table$V5$tableWithoutHeader,
		$NoRedInk$noredink_ui$Nri$Ui$Table$V5$loadingTableStyles,
		columns,
		$NoRedInk$noredink_ui$Nri$Ui$Table$V5$viewLoadingRow(columns),
		A2($elm$core$List$range, 0, 8));
};
var $author$project$ProfessorPage$ActivitiesPage$view = F2(
	function (_v0, model) {
		var activities = _v0.activities;
		var activityTypes = _v0.activityTypes;
		var zone = _v0.zone;
		var loading = _v0.loading;
		var startDateId = 'start-date-activity';
		var saveButtonId = 'save-btn';
		var modalTitle = function () {
			var _v5 = model.modalAction;
			if (_v5.$ === 'New') {
				return 'Nova akitvnost';
			} else {
				return 'Izmena aktivnosti';
			}
		}();
		var modalContent = _List_fromArray(
			[
				A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$div,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$displayFlex,
								$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceBetween)
							]))
					]),
				_List_fromArray(
					[
						$author$project$Util$inputDate(
						{
							id_: $elm$core$Maybe$Just(startDateId),
							label_: 'Od',
							msg: $author$project$ProfessorPage$ActivitiesPage$StartDate,
							value: model.startDate
						}),
						$author$project$Util$inputDate(
						{id_: $elm$core$Maybe$Nothing, label_: 'Do', msg: $author$project$ProfessorPage$ActivitiesPage$EndDate, value: model.endDate})
					])),
				A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$div,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$css(
						_List_fromArray(
							[
								A2(
								$rtfeldman$elm_css$Css$margin2,
								$rtfeldman$elm_css$Css$px(10),
								$rtfeldman$elm_css$Css$px(0))
							]))
					]),
				_List_fromArray(
					[
						A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$map,
						$author$project$ProfessorPage$ActivitiesPage$ActivityTypeSelected,
						A2(
							$NoRedInk$noredink_ui$Nri$Ui$Select$V8$view,
							'Tip aktivnosti',
							_List_fromArray(
								[
									$NoRedInk$noredink_ui$Nri$Ui$Select$V8$defaultDisplayText('Izaberi tip aktivnosti'),
									$NoRedInk$noredink_ui$Nri$Ui$Select$V8$value(model.selectedActivityTypeId),
									A2(
									$NoRedInk$noredink_ui$Nri$Ui$Select$V8$choices,
									$elm$core$String$fromInt,
									A2(
										$elm$core$List$map,
										function (_v4) {
											var id = _v4.id;
											var name = _v4.name;
											return {label: name, value: id};
										},
										activityTypes))
								])))
					])),
				A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$div,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$displayFlex,
								$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceBetween)
							]))
					]),
				A2(
					$elm$core$List$cons,
					A2(
						$NoRedInk$noredink_ui$Nri$Ui$Switch$V1$view,
						_List_fromArray(
							[
								$NoRedInk$noredink_ui$Nri$Ui$Switch$V1$onSwitch($author$project$ProfessorPage$ActivitiesPage$SwitchSingup),
								$NoRedInk$noredink_ui$Nri$Ui$Switch$V1$label(
								$tesk9$accessible_html_with_css$Accessibility$Styled$text(
									model.isSignup ? 'Prijava' : 'Nije prijava'))
							]),
						model.isSignup),
					model.isSignup ? _List_Nil : _List_fromArray(
						[
							A2(
							$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$view,
							'Broj poena',
							_List_fromArray(
								[
									$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$number($author$project$ProfessorPage$ActivitiesPage$Points),
									$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$value(
									$elm$core$Maybe$Just(model.points))
								]))
						])))
			]);
		var footer = model.processingActivity ? $author$project$Util$loadingSpinner : (model.hasProcessingError ? $author$project$Util$errorMessage($author$project$ProfessorPage$ActivitiesPage$Dismiss) : A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
					'Sačuvaj',
					_List_fromArray(
						[
							$NoRedInk$noredink_ui$Nri$Ui$Button$V10$id(saveButtonId),
							$NoRedInk$noredink_ui$Nri$Ui$Button$V10$primary,
							$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick($author$project$ProfessorPage$ActivitiesPage$SaveActivity)
						]))
				])));
		var editActivityId = function (id) {
			return 'edit-activity-' + $elm$core$String$fromInt(id);
		};
		var displayDate = A2($author$project$Util$dateView, $author$project$Util$DisplayMode, zone);
		var addActivityButtonId = 'add-activity-btn';
		var editButton = function (activity) {
			return A2(
				$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
				'',
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$small,
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$id(
						editActivityId(activity.id)),
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$edit),
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
						A2(
							$author$project$ProfessorPage$ActivitiesPage$OpenModal,
							$author$project$ProfessorPage$ActivitiesPage$Edit(activity),
							{returnFocusTo: addActivityButtonId, startFocusOn: $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$closeButtonId}))
					]));
		};
		var columns = _List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Table$V5$string(
				{
					cellStyles: $elm$core$Basics$always(_List_Nil),
					header: 'Od',
					value: A2(
						$elm$core$Basics$composeL,
						displayDate,
						function ($) {
							return $.startDate;
						}),
					width: $rtfeldman$elm_css$Css$px(100)
				}),
				$NoRedInk$noredink_ui$Nri$Ui$Table$V5$string(
				{
					cellStyles: $elm$core$Basics$always(_List_Nil),
					header: 'Do',
					value: A2(
						$elm$core$Basics$composeL,
						displayDate,
						function ($) {
							return $.endDate;
						}),
					width: $rtfeldman$elm_css$Css$px(100)
				}),
				$NoRedInk$noredink_ui$Nri$Ui$Table$V5$string(
				{
					cellStyles: $elm$core$Basics$always(_List_Nil),
					header: 'Tip aktivnosti',
					value: A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.activityTypeId;
						},
						function (x) {
							var _v2 = A2(
								$elm$core$List$filter,
								function (_v3) {
									var id = _v3.id;
									return _Utils_eq(x, id);
								},
								activityTypes);
							if (_v2.b && (!_v2.b.b)) {
								var activityType = _v2.a;
								return activityType.name;
							} else {
								return '';
							}
						}),
					width: $rtfeldman$elm_css$Css$px(100)
				}),
				$NoRedInk$noredink_ui$Nri$Ui$Table$V5$string(
				{
					cellStyles: $elm$core$Basics$always(_List_Nil),
					header: 'Prijava',
					value: A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.isSignup;
						},
						function (isSignup) {
							return isSignup ? 'Da' : 'Ne';
						}),
					width: $rtfeldman$elm_css$Css$px(100)
				}),
				$NoRedInk$noredink_ui$Nri$Ui$Table$V5$string(
				{
					cellStyles: $elm$core$Basics$always(_List_Nil),
					header: 'Br. poena',
					value: A2(
						$elm$core$Basics$composeL,
						$elm$core$String$fromInt,
						function ($) {
							return $.points;
						}),
					width: $rtfeldman$elm_css$Css$px(100)
				}),
				$NoRedInk$noredink_ui$Nri$Ui$Table$V5$custom(
				{
					cellStyles: $elm$core$Basics$always(_List_Nil),
					header: $tesk9$accessible_html_with_css$Accessibility$Styled$text('Izmeni'),
					view: editButton,
					width: $rtfeldman$elm_css$Css$px(250)
				})
			]);
		var _v1 = loading ? _Utils_Tuple2(
			_List_fromArray(
				[$NoRedInk$noredink_ui$Nri$Ui$Button$V10$loading]),
			$NoRedInk$noredink_ui$Nri$Ui$Table$V5$viewLoadingWithoutHeader(columns)) : _Utils_Tuple2(
			_List_Nil,
			A2($NoRedInk$noredink_ui$Nri$Ui$Table$V5$view, columns, activities));
		var loadingButtonAttrs = _v1.a;
		var table = _v1.b;
		var addButtonAttrs = _Utils_ap(
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$id(addActivityButtonId),
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$plus),
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$small,
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
					A2(
						$author$project$ProfessorPage$ActivitiesPage$OpenModal,
						$author$project$ProfessorPage$ActivitiesPage$New,
						{returnFocusTo: addActivityButtonId, startFocusOn: $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$closeButtonId}))
				]),
			loadingButtonAttrs);
		return A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$div,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$displayFlex,
							$rtfeldman$elm_css$Css$flexDirection($rtfeldman$elm_css$Css$column),
							$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$auto),
							$rtfeldman$elm_css$Css$height(
							$rtfeldman$elm_css$Css$pct(100)),
							$rtfeldman$elm_css$Css$width(
							$rtfeldman$elm_css$Css$pct(75)),
							$rtfeldman$elm_css$Css$maxWidth(
							$rtfeldman$elm_css$Css$rem(70)),
							$rtfeldman$elm_css$Css$minWidth(
							$rtfeldman$elm_css$Css$rem(30))
						]))
				]),
			_List_fromArray(
				[
					A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$div,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$css(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$displayFlex,
									$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceBetween),
									$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
									$rtfeldman$elm_css$Css$marginBottom(
									$rtfeldman$elm_css$Css$px(10))
								]))
						]),
					_List_fromArray(
						[
							A2(
							$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h2,
							_List_fromArray(
								[
									$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$css(
									_List_fromArray(
										[
											$rtfeldman$elm_css$Css$marginRight(
											$rtfeldman$elm_css$Css$px(10)),
											$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$highlightBlueDark)
										]))
								]),
							_List_fromArray(
								[
									$tesk9$accessible_html_with_css$Accessibility$Styled$text('Trenutne aktivnosti')
								])),
							A2($NoRedInk$noredink_ui$Nri$Ui$Button$V10$button, 'Dodaj aktivnost', addButtonAttrs)
						])),
					table,
					A3(
					$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$view,
					{
						content: modalContent,
						focusTrap: {firstId: $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$closeButtonId, focus: $author$project$ProfessorPage$ActivitiesPage$Focus, lastId: saveButtonId},
						footer: _List_fromArray(
							[footer]),
						title: modalTitle,
						wrapMsg: $author$project$ProfessorPage$ActivitiesPage$ModalMsg
					},
					_List_fromArray(
						[$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$closeButton]),
					model.modalState)
				]));
	});
var $author$project$ProfessorPage$ActivityAssignmentsPage$Comment = function (a) {
	return {$: 'Comment', a: a};
};
var $author$project$ProfessorPage$ActivityAssignmentsPage$Dismiss = {$: 'Dismiss'};
var $author$project$ProfessorPage$ActivityAssignmentsPage$DownloadFile = function (a) {
	return {$: 'DownloadFile', a: a};
};
var $author$project$ProfessorPage$ActivityAssignmentsPage$EditFile = function (a) {
	return {$: 'EditFile', a: a};
};
var $author$project$ProfessorPage$ActivityAssignmentsPage$Focus = function (a) {
	return {$: 'Focus', a: a};
};
var $author$project$ProfessorPage$ActivityAssignmentsPage$Grade = function (a) {
	return {$: 'Grade', a: a};
};
var $author$project$ProfessorPage$ActivityAssignmentsPage$SelectedFile = function (a) {
	return {$: 'SelectedFile', a: a};
};
var $author$project$ProfessorPage$ActivityAssignmentsPage$UpateAssignement = function (a) {
	return {$: 'UpateAssignement', a: a};
};
var $author$project$ProfessorPage$ActivityAssignmentsPage$UploadFile = function (a) {
	return {$: 'UploadFile', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$Disabled = {$: 'Disabled'};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$disabled = $NoRedInk$noredink_ui$Nri$Ui$Button$V10$set(
	function (attributes) {
		return _Utils_update(
			attributes,
			{state: $NoRedInk$noredink_ui$Nri$Ui$Button$V10$Disabled});
	});
var $elm$html$Html$Attributes$accept = $elm$html$Html$Attributes$stringProperty('accept');
var $elm$html$Html$div = _VirtualDom_node('div');
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$document = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 21 21')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M13.41.219H4.742a2.703 2.703 0 0 0-2.699 2.699V18.08c0 1.487 1.211 2.699 2.7 2.699h11.051c1.488 0 2.7-1.212 2.7-2.7V5.899L13.41.218zm.356 2.327l2.644 2.956h-2.644V2.546zm2.026 16.949H4.742A1.414 1.414 0 0 1 3.33 18.08V2.918c0-.779.634-1.414 1.412-1.414h7.739v5.282h4.725V18.08c0 .78-.634 1.414-1.414 1.414z')
					]),
				_List_Nil),
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M6.355 10.072V8.785h7.824v1.287H6.355zm0 2.964V11.75h7.824v1.286H6.355zm0 2.965v-1.287h7.824v1.287H6.355z')
					]),
				_List_Nil)
			])));
var $elm$html$Html$Attributes$for = $elm$html$Html$Attributes$stringProperty('htmlFor');
var $elm$html$Html$label = _VirtualDom_node('label');
var $elm$html$Html$Attributes$boolProperty = F2(
	function (key, bool) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$bool(bool));
	});
var $elm$html$Html$Attributes$multiple = $elm$html$Html$Attributes$boolProperty('multiple');
var $elm$html$Html$Events$on = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$Normal(decoder));
	});
var $rtfeldman$elm_css$Css$Global$selector = F2(
	function (selectorStr, styles) {
		return A2(
			$rtfeldman$elm_css$VirtualDom$Styled$makeSnippet,
			styles,
			A2($rtfeldman$elm_css$Css$Structure$CustomSelector, selectorStr, _List_Nil));
	});
var $author$project$Util$fileInpuView = F3(
	function (fileName, extension, decoder) {
		var fileIcon = $tesk9$accessible_html_with_css$Accessibility$Styled$toUnstyled(
			A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$div,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$displayFlex,
								$rtfeldman$elm_css$Css$flexDirection($rtfeldman$elm_css$Css$column),
								$rtfeldman$elm_css$Css$minWidth(
								$rtfeldman$elm_css$Css$px(50)),
								A2($rtfeldman$elm_css$Css$property, 'width', 'fit-content'),
								$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
								$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray45),
								$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray96),
								$rtfeldman$elm_css$Css$borderRadius(
								$rtfeldman$elm_css$Css$px(10)),
								A2(
								$rtfeldman$elm_css$Css$padding2,
								$rtfeldman$elm_css$Css$px(5),
								$rtfeldman$elm_css$Css$px(10)),
								$rtfeldman$elm_css$Css$hover(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$glacier),
										$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure),
										$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer),
										$rtfeldman$elm_css$Css$Global$descendants(
										_List_fromArray(
											[
												A2(
												$rtfeldman$elm_css$Css$Global$selector,
												'svg',
												_List_fromArray(
													[
														$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure)
													]))
											]))
									]))
							]))
					]),
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
						A2(
							$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$height(
									$rtfeldman$elm_css$Css$px(30)),
									$rtfeldman$elm_css$Css$width(
									$rtfeldman$elm_css$Css$px(30))
								]),
							$NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$document)),
						A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$span,
						_List_Nil,
						_List_fromArray(
							[
								$tesk9$accessible_html_with_css$Accessibility$Styled$text(
								A2($elm$core$Maybe$withDefault, extension, fileName))
							]))
					])));
		return $tesk9$accessible_html_with_css$Accessibility$Styled$fromUnstyled(
			A2(
				$elm$html$Html$div,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$elm$html$Html$label,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$for('file-upload')
							]),
						_List_fromArray(
							[fileIcon])),
						A2(
						$elm$html$Html$input,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$type_('file'),
								$elm$html$Html$Attributes$id('file-upload'),
								$elm$html$Html$Attributes$accept(extension),
								$elm$html$Html$Attributes$multiple(false),
								A2($elm$html$Html$Events$on, 'change', decoder),
								A2($elm$html$Html$Attributes$style, 'display', 'none')
							]),
						_List_Nil)
					])));
	});
var $elm$file$File$decoder = _File_decoder;
var $author$project$Util$filesDecoder = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['target', 'files']),
	$elm$json$Json$Decode$list($elm$file$File$decoder));
var $author$project$Util$emptyHtmlNode = $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
var $author$project$Util$displayIf = F2(
	function (condition, htmlNode) {
		return condition ? htmlNode : $author$project$Util$emptyHtmlNode;
	});
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$download = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 21 21')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$fillRule('evenodd'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M17.719 12.467H21v5.25a1.968 1.968 0 0 1-1.969 1.97H1.97A1.968 1.968 0 0 1 0 17.716v-5.25h3.281v3.938H17.72v-3.938zM5.647 9.17h.001a1.024 1.024 0 0 1-.082-.332.967.967 0 0 1 .046-.352A1.037 1.037 0 0 1 6 7.962c.08-.057.166-.104.257-.14a1.642 1.642 0 0 1 .597-.115h1.462l-.167-5.163a1.148 1.148 0 0 1 .347-.865 1.307 1.307 0 0 1 .906-.365h2.18c.172 0 .343.034.503.1.15.06.287.151.404.265a1.148 1.148 0 0 1 .347.865l-.168 5.165h1.529c.12 0 .24.015.354.043.114.027.225.07.328.127a1.058 1.058 0 0 1 .45.453.985.985 0 0 1 .076.69 1.065 1.065 0 0 1-.06.166 1.01 1.01 0 0 1-.2.302l-3.676 4.064a1.05 1.05 0 0 1-.194.17 1.432 1.432 0 0 1-1.326.126 1.29 1.29 0 0 1-.236-.126 1.073 1.073 0 0 1-.197-.17L5.845 9.5a1.183 1.183 0 0 1-.207-.318l.009-.013z')
					]),
				_List_Nil)
			])));
var $NoRedInk$noredink_ui$Nri$Ui$Container$V2$grayStyles = _List_fromArray(
	[
		$rtfeldman$elm_css$Css$borderRadius(
		$rtfeldman$elm_css$Css$px(8)),
		$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray96)
	]);
var $NoRedInk$noredink_ui$Nri$Ui$Container$V2$gray = $NoRedInk$noredink_ui$Nri$Ui$Container$V2$Attribute(
	function (config) {
		return _Utils_update(
			config,
			{containerType: 'gray-container', css: $NoRedInk$noredink_ui$Nri$Ui$Container$V2$grayStyles, padding: 20});
	});
var $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$Small = {$: 'Small'};
var $rtfeldman$elm_css$Html$Styled$h4 = $rtfeldman$elm_css$Html$Styled$node('h4');
var $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h4 = A2(
	$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$view,
	$rtfeldman$elm_css$Html$Styled$h4,
	{attributes: _List_Nil, css: _List_Nil, style: $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$Small});
var $rtfeldman$elm_css$Html$Styled$h5 = $rtfeldman$elm_css$Html$Styled$node('h5');
var $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h5 = A2(
	$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$view,
	$rtfeldman$elm_css$Html$Styled$h5,
	{attributes: _List_Nil, css: _List_Nil, style: $NoRedInk$noredink_ui$Nri$Ui$Heading$V2$Small});
var $rtfeldman$elm_css$Css$spaceAround = $rtfeldman$elm_css$Css$prop1('space-around');
var $author$project$Util$filesView = F2(
	function (_v0, files) {
		var isActive = _v0.isActive;
		var editAttached = _v0.editAttached;
		var downloadMsg = _v0.downloadMsg;
		var editMsg = _v0.editMsg;
		var displayCondition = A2(
			$elm$core$Basics$composeL,
			$elm$core$Basics$and(isActive),
			editAttached ? function ($) {
				return $.attached;
			} : A2(
				$elm$core$Basics$composeL,
				$elm$core$Basics$not,
				function ($) {
					return $.attached;
				}));
		var fileView = function (f) {
			return $NoRedInk$noredink_ui$Nri$Ui$Container$V2$view(
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$Container$V2$gray,
						$NoRedInk$noredink_ui$Nri$Ui$Container$V2$html(
						_List_fromArray(
							[
								A2(
								$tesk9$accessible_html_with_css$Accessibility$Styled$div,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Html$Styled$Attributes$css(
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$displayFlex,
												$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceAround),
												A2($rtfeldman$elm_css$Css$property, 'gap', '10px'),
												$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center)
											]))
									]),
								_List_fromArray(
									[
										A2(
										$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h5,
										_List_Nil,
										_List_fromArray(
											[
												$tesk9$accessible_html_with_css$Accessibility$Styled$text(f.fileName)
											])),
										A2(
										$tesk9$accessible_html_with_css$Accessibility$Styled$div,
										_List_fromArray(
											[
												$rtfeldman$elm_css$Html$Styled$Attributes$css(
												_List_fromArray(
													[
														$rtfeldman$elm_css$Css$displayFlex,
														$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceAround),
														A2($rtfeldman$elm_css$Css$property, 'gap', '10px')
													]))
											]),
										_List_fromArray(
											[
												A2(
												$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
												'',
												_List_fromArray(
													[
														$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$download),
														$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
														downloadMsg(f)),
														$NoRedInk$noredink_ui$Nri$Ui$Button$V10$small
													])),
												A2(
												$author$project$Util$displayIf,
												displayCondition(f),
												A2(
													$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
													'',
													_List_fromArray(
														[
															$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$edit),
															$NoRedInk$noredink_ui$Nri$Ui$Button$V10$small,
															$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
															editMsg(f))
														])))
											]))
									]))
							]))
					]));
		};
		return A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h4,
					_List_Nil,
					_List_fromArray(
						[
							$tesk9$accessible_html_with_css$Accessibility$Styled$text('Datoteke')
						])),
					A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$div,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$css(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$displayFlex,
									$rtfeldman$elm_css$Css$flexDirection($rtfeldman$elm_css$Css$column),
									A2($rtfeldman$elm_css$Css$property, 'gap', '10px')
								]))
						]),
					A2($elm$core$List$map, fileView, files))
				]));
	});
var $elm$file$File$name = _File_name;
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$text = function (onInput_) {
	return A2(
		$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$Attribute,
		_Utils_update(
			$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$emptyEventsAndValues,
			{
				fromString: $elm$core$Maybe$Just($elm$core$Basics$identity),
				onInput: $elm$core$Maybe$Just(
					A2($elm$core$Basics$composeR, $elm$core$Basics$identity, onInput_)),
				toString: $elm$core$Maybe$Just($elm$core$Basics$identity)
			}),
		function (config) {
			return _Utils_update(
				config,
				{
					autocomplete: $elm$core$Maybe$Nothing,
					fieldType: $elm$core$Maybe$Just('text'),
					inputMode: $elm$core$Maybe$Nothing
				});
		});
};
var $author$project$Topic$toString = function (_v0) {
	var number = _v0.number;
	var title = _v0.title;
	return A3(
		$elm$core$String$padLeft,
		2,
		_Utils_chr('0'),
		$elm$core$String$fromInt(number)) + (' ' + title);
};
var $author$project$Group$toString = function (_v0) {
	var topic = _v0.topic;
	var students = _v0.students;
	if (topic.$ === 'Just') {
		var t = topic.a;
		return $author$project$Topic$toString(t);
	} else {
		return A2(
			$elm$core$String$join,
			', ',
			A2(
				$elm$core$List$map,
				function ($) {
					return $.lastName;
				},
				students));
	}
};
var $author$project$Student$toString = F2(
	function (withIndex, _v0) {
		var firstName = _v0.firstName;
		var lastName = _v0.lastName;
		var indexNumber = _v0.indexNumber;
		return withIndex ? (firstName + (' ' + (lastName + (' ' + indexNumber)))) : (firstName + (' ' + lastName));
	});
var $author$project$ProfessorPage$ActivityAssignmentsPage$modalView = F2(
	function (model, _v0) {
		var groups = _v0.groups;
		var students = _v0.students;
		var uploadFilesView = function (files) {
			if (!files.b) {
				return A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$div,
					_List_Nil,
					_List_fromArray(
						[
							$tesk9$accessible_html_with_css$Accessibility$Styled$text('Student nije priložio nijedan dokument')
						]));
			} else {
				var files_ = files;
				return A2(
					$author$project$Util$filesView,
					{downloadMsg: $author$project$ProfessorPage$ActivityAssignmentsPage$DownloadFile, editAttached: true, editMsg: $author$project$ProfessorPage$ActivityAssignmentsPage$EditFile, isActive: true},
					files_);
			}
		};
		var saveButtonId = 'save-btn';
		var uploadBtn = A2(
			$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
			'Otpremi',
			_List_fromArray(
				[
					function () {
					var _v10 = model.selectedFile;
					if (_v10.$ === 'Nothing') {
						return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$disabled;
					} else {
						var f = _v10.a;
						return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
							$author$project$ProfessorPage$ActivityAssignmentsPage$UploadFile(f));
					}
				}(),
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$id(saveButtonId),
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$primary
				]));
		var savaBtnAttrs = _List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Button$V10$id(saveButtonId),
				$NoRedInk$noredink_ui$Nri$Ui$Button$V10$primary
			]);
		var loading = function () {
			var _v8 = _Utils_Tuple3(model.processingModal, model.modalType, model.loadingFiles);
			if (_v8.a) {
				return true;
			} else {
				if ((_v8.b.$ === 'DocumentModal') && _v8.c) {
					var _v9 = _v8.b;
					return true;
				} else {
					return false;
				}
			}
		}();
		var fileName = $elm$core$Maybe$map($elm$file$File$name);
		var editContent = _List_fromArray(
			[
				A2(
				$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$view,
				'Komentar',
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$text($author$project$ProfessorPage$ActivityAssignmentsPage$Comment),
						$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$value(model.comment)
					])),
				A2(
				$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$view,
				'Broj poena',
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$number($author$project$ProfessorPage$ActivityAssignmentsPage$Grade),
						$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$value(model.grade)
					]))
			]);
		var editBtn = A2(
			$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
			'Oceni',
			_List_fromArray(
				[
					function () {
					var _v6 = _Utils_Tuple2(model.grade, model.comment);
					if (_v6.a.$ === 'Nothing') {
						var _v7 = _v6.a;
						return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$disabled;
					} else {
						if (_v6.b === '') {
							return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$disabled;
						} else {
							var g = _v6.a.a;
							return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
								$author$project$ProfessorPage$ActivityAssignmentsPage$UpateAssignement(g));
						}
					}
				}(),
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$id(saveButtonId),
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$primary
				]));
		var documentsContent = function () {
			var _v5 = A2($elm$core$Dict$get, model.selectedAssignment.id, model.files);
			if (_v5.$ === 'Just') {
				var files = _v5.a;
				return _List_fromArray(
					[
						uploadFilesView(files),
						A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$div,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$Attributes$css(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$marginTop(
										$rtfeldman$elm_css$Css$px(20))
									]))
							]),
						_List_fromArray(
							[
								A2(
								$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h5,
								_List_Nil,
								_List_fromArray(
									[
										$tesk9$accessible_html_with_css$Accessibility$Styled$text('Otpremanje datoteka')
									])),
								A2(
								$tesk9$accessible_html_with_css$Accessibility$Styled$div,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Html$Styled$Attributes$css(
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$displayFlex,
												$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center)
											]))
									]),
								_List_fromArray(
									[
										A3(
										$author$project$Util$fileInpuView,
										fileName(model.selectedFile),
										'',
										A2($elm$json$Json$Decode$map, $author$project$ProfessorPage$ActivityAssignmentsPage$SelectedFile, $author$project$Util$filesDecoder))
									]))
							]))
					]);
			} else {
				return _List_fromArray(
					[$author$project$Util$loadingSpinner]);
			}
		}();
		var _v1 = function () {
			var _v2 = model.modalType;
			if (_v2.$ === 'EditModal') {
				return _Utils_Tuple2(editContent, editBtn);
			} else {
				return _Utils_Tuple2(documentsContent, uploadBtn);
			}
		}();
		var content = _v1.a;
		var saveBtn = _v1.b;
		var footer = loading ? $author$project$Util$loadingSpinner : (model.hasProcessingError ? $author$project$Util$errorMessage($author$project$ProfessorPage$ActivityAssignmentsPage$Dismiss) : A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$div,
			_List_Nil,
			_List_fromArray(
				[saveBtn])));
		var _v3 = model.selectedAssignment;
		var studentId = _v3.studentId;
		var groupId = _v3.groupId;
		var modalTitle = function () {
			var _v4 = _Utils_Tuple2(studentId, groupId);
			if (_v4.a.$ === 'Just') {
				var id = _v4.a.a;
				return A2(
					$elm$core$Maybe$withDefault,
					'',
					A2(
						$elm$core$Maybe$map,
						$author$project$Student$toString(true),
						A2($elm$core$Dict$get, id, students)));
			} else {
				if (_v4.b.$ === 'Just') {
					var id = _v4.b.a;
					return A2(
						$elm$core$Maybe$withDefault,
						'',
						A2(
							$elm$core$Maybe$map,
							$author$project$Group$toString,
							A2($elm$core$Dict$get, id, groups)));
				} else {
					return '';
				}
			}
		}();
		return A3(
			$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$view,
			{
				content: content,
				focusTrap: {firstId: $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$closeButtonId, focus: $author$project$ProfessorPage$ActivityAssignmentsPage$Focus, lastId: saveButtonId},
				footer: _List_fromArray(
					[footer]),
				title: modalTitle,
				wrapMsg: $author$project$ProfessorPage$ActivityAssignmentsPage$ModalMsg
			},
			_List_fromArray(
				[$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$closeButton]),
			model.modalState);
	});
var $author$project$ProfessorPage$ActivityAssignmentsPage$DocumentModal = {$: 'DocumentModal'};
var $author$project$ProfessorPage$ActivityAssignmentsPage$OpenModal = F3(
	function (a, b, c) {
		return {$: 'OpenModal', a: a, b: b, c: c};
	});
var $author$project$ProfessorPage$ActivityAssignmentsPage$docuemntsButtonId = A2(
	$elm$core$Basics$composeL,
	$elm$core$Basics$append('docuemnts-assignment-'),
	$elm$core$String$fromInt);
var $rtfeldman$elm_css$Svg$Styled$Attributes$stroke = $rtfeldman$elm_css$VirtualDom$Styled$attribute('stroke');
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$documents = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 24 30')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$g,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$stroke('none'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$strokeWidth('1'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$fill('none'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$fillRule('evenodd')
					]),
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Svg$Styled$g,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
								$rtfeldman$elm_css$Svg$Styled$Attributes$fillRule('nonzero')
							]),
						_List_fromArray(
							[
								A2(
								$rtfeldman$elm_css$Svg$Styled$path,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Svg$Styled$Attributes$d('M3.33333333,30 L3.33333333,29 L22.3333333,29 L22.3333333,3.33333333 L23.3333333,3.33333333 L23.3333333,30 L3.33333333,30 Z M1.66666667,27.3333333 L20.6666667,27.3333333 L20.6666667,1.66666667 L21.6666667,1.66666667 L21.6666667,28.3333333 L1.66666667,28.3333333 L1.66666667,27.3333333 Z M-3.73034936e-14,0 L20,0 L20,26.6666667 L-3.73034936e-14,26.6666667 L-3.73034936e-14,0 Z M2,22.6666667 L10.6666667,22.6666667 L10.6666667,21.3333333 L2,21.3333333 L2,22.6666667 Z M2,19.3333333 L18,19.3333333 L18,18 L2,18 L2,19.3333333 Z M2,16 L18,16 L18,14.6666667 L2,14.6666667 L2,16 Z M2,12.6666667 L18,12.6666667 L18,11.3333333 L2,11.3333333 L2,12.6666667 Z M2,9.33333333 L18,9.33333333 L18,8 L2,8 L2,9.33333333 Z M2,6 L18,6 L18,4.66666667 L2,4.66666667 L2,6 Z')
									]),
								_List_Nil)
							]))
					]))
			])));
var $author$project$ProfessorPage$ActivityAssignmentsPage$editButtonId = A2(
	$elm$core$Basics$composeL,
	$elm$core$Basics$append('edit-assignment-'),
	$elm$core$String$fromInt);
var $author$project$ProfessorPage$ActivityAssignmentsPage$tableView = F2(
	function (activityId, _v0) {
		var assignments = _v0.assignments;
		var students = _v0.students;
		var groups = _v0.groups;
		var activities = _v0.activities;
		var activityTypes = _v0.activityTypes;
		var getStudent = function (id) {
			return A2($elm$core$Dict$get, id, students);
		};
		var getGroup = function (id) {
			return A2($elm$core$Dict$get, id, groups);
		};
		var activityAssignments = A2(
			$elm$core$List$filter,
			function (x) {
				return _Utils_eq(x.activityId, activityId);
			},
			assignments);
		var activity = A2($elm$core$Dict$get, activityId, activities);
		var signup = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				function (_v7) {
					var isSignup = _v7.isSignup;
					return isSignup;
				},
				activity));
		var hasFiles = (!signup) && A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				function (_v5) {
					var content = _v5.content;
					if (content.$ === 'Files') {
						return true;
					} else {
						return false;
					}
				},
				A2(
					$elm$core$Maybe$andThen,
					function (_v4) {
						var activityTypeId = _v4.activityTypeId;
						return A2($elm$core$Dict$get, activityTypeId, activityTypes);
					},
					activity)));
		var documentBtn = function (assignment) {
			return hasFiles ? A2(
				$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
				'Dokumenti',
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$small,
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$documents),
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
						A3(
							$author$project$ProfessorPage$ActivityAssignmentsPage$OpenModal,
							$author$project$ProfessorPage$ActivityAssignmentsPage$DocumentModal,
							assignment,
							{
								returnFocusTo: $author$project$ProfessorPage$ActivityAssignmentsPage$docuemntsButtonId(assignment.id),
								startFocusOn: $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$closeButtonId
							})),
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$marginLeft(
								$rtfeldman$elm_css$Css$px(5))
							]))
					])) : $author$project$Util$emptyHtmlNode;
		};
		var columns = _List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Table$V5$string(
				{
					cellStyles: $elm$core$Basics$always(_List_Nil),
					header: 'Izvršena',
					value: A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.completed;
						},
						function (completed) {
							return completed ? 'Da' : 'Ne';
						}),
					width: $rtfeldman$elm_css$Css$px(100)
				}),
				$NoRedInk$noredink_ui$Nri$Ui$Table$V5$string(
				{
					cellStyles: $elm$core$Basics$always(_List_Nil),
					header: 'Ocena',
					value: A2(
						$elm$core$Basics$composeL,
						A2(
							$elm$core$Basics$composeL,
							$elm$core$Maybe$withDefault(''),
							$elm$core$Maybe$map($elm$core$String$fromInt)),
						function ($) {
							return $.grade;
						}),
					width: $rtfeldman$elm_css$Css$px(100)
				}),
				$NoRedInk$noredink_ui$Nri$Ui$Table$V5$string(
				{
					cellStyles: $elm$core$Basics$always(_List_Nil),
					header: 'Komentar',
					value: A2(
						$elm$core$Basics$composeL,
						$elm$core$Maybe$withDefault(''),
						function ($) {
							return $.comment;
						}),
					width: $rtfeldman$elm_css$Css$px(100)
				}),
				$NoRedInk$noredink_ui$Nri$Ui$Table$V5$custom(
				{
					cellStyles: $elm$core$Basics$always(_List_Nil),
					header: $tesk9$accessible_html_with_css$Accessibility$Styled$text(''),
					view: function (a) {
						return A2(
							$tesk9$accessible_html_with_css$Accessibility$Styled$div,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$Attributes$css(
									_List_fromArray(
										[$rtfeldman$elm_css$Css$displayFlex]))
								]),
							_List_fromArray(
								[
									A2(
									$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
									'',
									_List_fromArray(
										[
											$NoRedInk$noredink_ui$Nri$Ui$Button$V10$small,
											$NoRedInk$noredink_ui$Nri$Ui$Button$V10$id(
											$author$project$ProfessorPage$ActivityAssignmentsPage$editButtonId(a.id)),
											$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
											A3(
												$author$project$ProfessorPage$ActivityAssignmentsPage$OpenModal,
												$author$project$ProfessorPage$ActivityAssignmentsPage$EditModal,
												a,
												{
													returnFocusTo: $author$project$ProfessorPage$ActivityAssignmentsPage$editButtonId(a.id),
													startFocusOn: $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$closeButtonId
												})),
											$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$edit)
										])),
									documentBtn(a)
								]));
					},
					width: $rtfeldman$elm_css$Css$px(250)
				})
			]);
		var groupColumns = A2(
			$elm$core$List$cons,
			$NoRedInk$noredink_ui$Nri$Ui$Table$V5$string(
				{
					cellStyles: $elm$core$Basics$always(_List_Nil),
					header: 'Grupa',
					value: A2(
						$elm$core$Basics$composeL,
						A2(
							$elm$core$Basics$composeL,
							A2(
								$elm$core$Basics$composeL,
								$elm$core$Maybe$withDefault(''),
								$elm$core$Maybe$map($author$project$Group$toString)),
							$elm$core$Maybe$andThen(getGroup)),
						function ($) {
							return $.groupId;
						}),
					width: $rtfeldman$elm_css$Css$px(100)
				}),
			columns);
		var studentColumns = A2(
			$elm$core$List$cons,
			$NoRedInk$noredink_ui$Nri$Ui$Table$V5$string(
				{
					cellStyles: $elm$core$Basics$always(_List_Nil),
					header: 'Student',
					value: A2(
						$elm$core$Basics$composeL,
						A2(
							$elm$core$Basics$composeL,
							A2(
								$elm$core$Basics$composeL,
								$elm$core$Maybe$withDefault(''),
								$elm$core$Maybe$map(
									$author$project$Student$toString(false))),
							$elm$core$Maybe$andThen(getStudent)),
						function ($) {
							return $.studentId;
						}),
					width: $rtfeldman$elm_css$Css$px(100)
				}),
			columns);
		var table = function (_v3) {
			var groupId = _v3.groupId;
			var studentId = _v3.studentId;
			var _v2 = _Utils_Tuple2(groupId, studentId);
			if (_v2.a.$ === 'Just') {
				return A2($NoRedInk$noredink_ui$Nri$Ui$Table$V5$view, groupColumns, activityAssignments);
			} else {
				if (_v2.b.$ === 'Just') {
					return A2($NoRedInk$noredink_ui$Nri$Ui$Table$V5$view, studentColumns, activityAssignments);
				} else {
					return $author$project$Util$emptyHtmlNode;
				}
			}
		};
		if (activityAssignments.b) {
			var h = activityAssignments.a;
			return table(h);
		} else {
			return $author$project$Util$emptyHtmlNode;
		}
	});
var $author$project$ProfessorPage$ActivityAssignmentsPage$assignmentView = F3(
	function (model, activityId, params) {
		return A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$div,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$displayFlex,
							$rtfeldman$elm_css$Css$flexDirection($rtfeldman$elm_css$Css$column),
							$rtfeldman$elm_css$Css$height(
							$rtfeldman$elm_css$Css$pct(100)),
							$rtfeldman$elm_css$Css$width(
							$rtfeldman$elm_css$Css$pct(75)),
							$rtfeldman$elm_css$Css$width(
							$rtfeldman$elm_css$Css$rem(70)),
							$rtfeldman$elm_css$Css$minWidth(
							$rtfeldman$elm_css$Css$rem(30)),
							$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white)
						]))
				]),
			_List_fromArray(
				[
					A2($author$project$ProfessorPage$ActivityAssignmentsPage$tableView, activityId, params),
					A2($author$project$ProfessorPage$ActivityAssignmentsPage$modalView, model, params)
				]));
	});
var $author$project$ProfessorPage$ActivityAssignmentsPage$SkipNav = {$: 'SkipNav'};
var $author$project$ProfessorPage$ActivityAssignmentsPage$activityAssignmentsRoute = A2($elm$core$Basics$composeL, $author$project$Route$Professor, $author$project$Route$ActivityAssignments);
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$Entry = F2(
	function (a, b) {
		return {$: 'Entry', a: a, b: b};
	});
var $NoRedInk$noredink_ui$Nri$Ui$Data$PremiumDisplay$Free = {$: 'Free'};
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$build = function (title) {
	return {clickableAttributes: $NoRedInk$noredink_ui$ClickableAttributes$init, customAttributes: _List_Nil, customStyles: _List_Nil, icon: $elm$core$Maybe$Nothing, onLockedContent: $elm$core$Maybe$Nothing, premiumDisplay: $NoRedInk$noredink_ui$Nri$Ui$Data$PremiumDisplay$Free, route: $elm$core$Maybe$Nothing, title: title};
};
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$entry = F2(
	function (title, attributes) {
		return A2(
			$NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$Entry,
			_List_Nil,
			A3(
				$elm$core$List$foldl,
				F2(
					function (_v0, b) {
						var attribute = _v0.a;
						return attribute(b);
					}),
				$NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$build(title),
				attributes));
	});
var $rtfeldman$elm_css$Css$fillAvailable = {lengthOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNoneOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible, minMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'fill-available'};
var $rtfeldman$elm_css$Css$fitContent = _Utils_update(
	$rtfeldman$elm_css$Css$fillAvailable,
	{value: 'fit-content'});
var $NoRedInk$noredink_ui$ClickableAttributes$SinglePageApp = {$: 'SinglePageApp'};
var $NoRedInk$noredink_ui$ClickableAttributes$linkSpa = F2(
	function (url, clickableAttributes) {
		return _Utils_update(
			clickableAttributes,
			{
				linkType: $NoRedInk$noredink_ui$ClickableAttributes$SinglePageApp,
				url: $elm$core$Maybe$Just(url)
			});
	});
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$Attribute = function (a) {
	return {$: 'Attribute', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$setClickableAttributes = F2(
	function (route, apply) {
		return $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$Attribute(
			function (attributes) {
				return _Utils_update(
					attributes,
					{
						clickableAttributes: apply(attributes.clickableAttributes),
						route: function () {
							if (route.$ === 'Just') {
								var r = route.a;
								return $elm$core$Maybe$Just(r);
							} else {
								return attributes.route;
							}
						}()
					});
			});
	});
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$linkSpa = function (route) {
	return A2(
		$NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$setClickableAttributes,
		$elm$core$Maybe$Just(route),
		$NoRedInk$noredink_ui$ClickableAttributes$linkSpa(route));
};
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$NavAttribute = function (a) {
	return {$: 'NavAttribute', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$navCss = function (styles) {
	return $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$NavAttribute(
		function (config) {
			return _Utils_update(
				config,
				{
					css: A2($elm$core$List$append, config.css, styles)
				});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$defaultNavAttributeConfig = {
	css: _List_fromArray(
		[
			$rtfeldman$elm_css$Css$flexBasis(
			$rtfeldman$elm_css$Css$px(250)),
			$rtfeldman$elm_css$Css$flexShrink(
			$rtfeldman$elm_css$Css$num(0)),
			$rtfeldman$elm_css$Css$borderRadius(
			$rtfeldman$elm_css$Css$px(8)),
			$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray96),
			$rtfeldman$elm_css$Css$padding(
			$rtfeldman$elm_css$Css$px(20)),
			$rtfeldman$elm_css$Css$marginRight(
			$rtfeldman$elm_css$Css$px(20))
		]),
	navLabel: $elm$core$Maybe$Nothing
};
var $rtfeldman$elm_css$Html$Styled$nav = $rtfeldman$elm_css$Html$Styled$node('nav');
var $tesk9$accessible_html_with_css$Accessibility$Styled$nav = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$nav(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $rtfeldman$elm_css$Html$Styled$styled = F4(
	function (fn, styles, attrs, children) {
		return A2(
			fn,
			A2(
				$elm$core$List$cons,
				$rtfeldman$elm_css$Html$Styled$Internal$css(styles),
				attrs),
			children);
	});
var $tesk9$accessible_html_with_css$Accessibility$Styled$styled = $rtfeldman$elm_css$Html$Styled$styled;
var $NoRedInk$noredink_ui$Nri$Ui$Data$PremiumDisplay$PremiumLocked = {$: 'PremiumLocked'};
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$anyLinkDescendants = F2(
	function (f, children) {
		return A2(
			$elm$core$List$any,
			function (entry_) {
				if (entry_.$ === 'Entry') {
					var children_ = entry_.a;
					var entryConfig = entry_.b;
					return f(entryConfig) || A2($NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$anyLinkDescendants, f, children_);
				} else {
					return false;
				}
			},
			children);
	});
var $rtfeldman$elm_css$Css$default = {cursor: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'default'};
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$isCurrentRoute = F2(
	function (config, _v0) {
		var route = _v0.route;
		return A2(
			$elm$core$Maybe$withDefault,
			false,
			A2($elm$core$Maybe$map, config.isCurrentRoute, route));
	});
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$sharedEntryStyles = _List_fromArray(
	[
		A2(
		$rtfeldman$elm_css$Css$padding2,
		$rtfeldman$elm_css$Css$px(13),
		$rtfeldman$elm_css$Css$px(20)),
		A2($rtfeldman$elm_css$Css$property, 'word-break', 'normal'),
		A2($rtfeldman$elm_css$Css$property, 'overflow-wrap', 'anywhere'),
		$rtfeldman$elm_css$Css$displayFlex,
		$rtfeldman$elm_css$Css$borderRadius(
		$rtfeldman$elm_css$Css$px(8)),
		$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
		$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont,
		$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy),
		$rtfeldman$elm_css$Css$backgroundColor($rtfeldman$elm_css$Css$transparent),
		$rtfeldman$elm_css$Css$textDecoration($rtfeldman$elm_css$Css$none),
		$rtfeldman$elm_css$Css$fontSize(
		$rtfeldman$elm_css$Css$px(15)),
		$rtfeldman$elm_css$Css$fontWeight(
		$rtfeldman$elm_css$Css$int(600)),
		$rtfeldman$elm_css$Css$textAlign($rtfeldman$elm_css$Css$left),
		$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer)
	]);
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$premiumLock = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 19 26')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$g,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$transform('translate(0.880000, 0.257143)')
					]),
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('M15.1703507,11.7613357 L15.1703507,7.54281617 C15.1703507,4.09252936 12.4022155,1.28571429 9.00015151,1.28571429 C5.59748152,1.28571429 2.82964933,4.09252936 2.82964933,7.54281617 L2.82964933,11.7613357 L1.947846,11.7613357 C0.872409555,11.7613357 0,12.6451106 0,13.7356938 L0,23.7399276 C0,24.8305108 0.872409555,25.7142857 1.947846,25.7142857 L16.0527601,25.7142857 C17.1281965,25.7142857 18,24.8305108 18,23.7399276 L18,13.7360011 C18,12.6454179 17.1281965,11.7613357 16.0527601,11.7613357 L15.1703507,11.7613357 Z M9.59559603,19.3582355 L9.59559603,21.7044182 C9.59559603,22.0384458 9.32863083,22.3088637 9.00015151,22.3088637 C8.67106614,22.3088637 8.40410094,22.0384458 8.40410094,21.7044182 L8.40410094,19.3582355 C7.73047592,19.1108645 7.24836282,18.4584813 7.24836282,17.689634 C7.24836282,16.7090617 8.03259204,15.9131726 9.00015151,15.9131726 C9.96680191,15.9131726 10.7522432,16.7090617 10.7522432,17.689634 C10.7522432,18.4594032 10.2692211,19.1117864 9.59559603,19.3582355 L9.59559603,19.3582355 Z M12.8337233,11.7613357 L5.16627666,11.7613357 L5.16627666,7.54281617 C5.16627666,5.39913958 6.88624771,3.654944 9.00015151,3.654944 C11.1137523,3.654944 12.8337233,5.39913958 12.8337233,7.54281617 L12.8337233,11.7613357 L12.8337233,11.7613357 Z'),
								$rtfeldman$elm_css$Svg$Styled$Attributes$fill('#E68900')
							]),
						_List_Nil),
						A2(
						$rtfeldman$elm_css$Svg$Styled$rect,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$fill('#FFFFFF'),
								$rtfeldman$elm_css$Svg$Styled$Attributes$x('1.28571429'),
								$rtfeldman$elm_css$Svg$Styled$Attributes$y('14.1428571'),
								$rtfeldman$elm_css$Svg$Styled$Attributes$width('14.1428571'),
								$rtfeldman$elm_css$Svg$Styled$Attributes$height('7.71428571')
							]),
						_List_Nil),
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('M15.1703507,10.4756214 L15.1703507,6.25710188 C15.1703507,2.80681508 12.4022155,0 9.00015151,0 C5.59748152,0 2.82964933,2.80681508 2.82964933,6.25710188 L2.82964933,10.4756214 L1.947846,10.4756214 C0.872409555,10.4756214 0,11.3593963 0,12.4499795 L0,22.4542133 C0,23.5447965 0.872409555,24.4285714 1.947846,24.4285714 L16.0527601,24.4285714 C17.1281965,24.4285714 18,23.5447965 18,22.4542133 L18,12.4502868 C18,11.3597036 17.1281965,10.4756214 16.0527601,10.4756214 L15.1703507,10.4756214 Z M9.59559603,18.0725212 L9.59559603,20.4187039 C9.59559603,20.7527315 9.32863083,21.0231494 9.00015151,21.0231494 C8.67106614,21.0231494 8.40410094,20.7527315 8.40410094,20.4187039 L8.40410094,18.0725212 C7.73047592,17.8251502 7.24836282,17.172767 7.24836282,16.4039197 C7.24836282,15.4233474 8.03259204,14.6274583 9.00015151,14.6274583 C9.96680191,14.6274583 10.7522432,15.4233474 10.7522432,16.4039197 C10.7522432,17.1736889 10.2692211,17.8260721 9.59559603,18.0725212 L9.59559603,18.0725212 Z M12.8337233,10.4756214 L5.16627666,10.4756214 L5.16627666,6.25710188 C5.16627666,4.11342529 6.88624771,2.36922972 9.00015151,2.36922972 C11.1137523,2.36922972 12.8337233,4.11342529 12.8337233,6.25710188 L12.8337233,10.4756214 L12.8337233,10.4756214 Z'),
								$rtfeldman$elm_css$Svg$Styled$Attributes$fill('#FEC900')
							]),
						_List_Nil)
					]))
			])));
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$viewLockedEntry = F2(
	function (extraStyles, entryConfig) {
		return A4(
			$tesk9$accessible_html_with_css$Accessibility$Styled$styled,
			$rtfeldman$elm_css$Html$Styled$button,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$batch($NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$sharedEntryStyles),
					$rtfeldman$elm_css$Css$important(
					$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray45)),
					$rtfeldman$elm_css$Css$borderWidth($rtfeldman$elm_css$Css$zero),
					$rtfeldman$elm_css$Css$batch(extraStyles)
				]),
			function () {
				var _v0 = entryConfig.onLockedContent;
				if (_v0.$ === 'Just') {
					var event = _v0.a;
					return A2(
						$elm$core$List$cons,
						$rtfeldman$elm_css$Html$Styled$Events$onClick(event),
						entryConfig.customAttributes);
				} else {
					return entryConfig.customAttributes;
				}
			}(),
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
					A2(
						$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$marginRight(
								$rtfeldman$elm_css$Css$px(10)),
								$rtfeldman$elm_css$Css$minWidth(
								$rtfeldman$elm_css$Css$px(17))
							]),
						A2(
							$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight,
							$rtfeldman$elm_css$Css$px(25),
							A2(
								$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth,
								$rtfeldman$elm_css$Css$px(17),
								$NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$premiumLock)))),
					$tesk9$accessible_html_with_css$Accessibility$Styled$text(entryConfig.title)
				]));
	});
var $rtfeldman$elm_css$Html$Styled$a = $rtfeldman$elm_css$Html$Styled$node('a');
var $rtfeldman$elm_css$Html$Styled$Attributes$href = function (url) {
	return A2($rtfeldman$elm_css$Html$Styled$Attributes$stringProperty, 'href', url);
};
var $elm$virtual_dom$VirtualDom$MayPreventDefault = function (a) {
	return {$: 'MayPreventDefault', a: a};
};
var $rtfeldman$elm_css$Html$Styled$Events$preventDefaultOn = F2(
	function (event, decoder) {
		return A2(
			$rtfeldman$elm_css$VirtualDom$Styled$on,
			event,
			$elm$virtual_dom$VirtualDom$MayPreventDefault(decoder));
	});
var $NoRedInk$noredink_ui$EventExtras$onClickPreventDefaultForLinkWithHref = function (msg) {
	var succeedIfFalse = F2(
		function (msg_, preventDefault) {
			if (!preventDefault) {
				return $elm$json$Json$Decode$succeed(msg_);
			} else {
				return $elm$json$Json$Decode$fail('succeedIfFalse: condition was True');
			}
		});
	var isSpecialClick = A3(
		$elm$json$Json$Decode$map2,
		F2(
			function (isCtrl, isMeta) {
				return isCtrl || isMeta;
			}),
		A2($elm$json$Json$Decode$field, 'ctrlKey', $elm$json$Json$Decode$bool),
		A2($elm$json$Json$Decode$field, 'metaKey', $elm$json$Json$Decode$bool));
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$preventDefaultOn,
		'click',
		A2(
			$elm$json$Json$Decode$map,
			function (a) {
				return _Utils_Tuple2(a, true);
			},
			A2(
				$elm$json$Json$Decode$andThen,
				succeedIfFalse(msg),
				isSpecialClick)));
};
var $rtfeldman$elm_css$Html$Styled$Attributes$target = $rtfeldman$elm_css$Html$Styled$Attributes$stringProperty('target');
var $rtfeldman$elm_css$Html$Styled$Attributes$rel = $rtfeldman$elm_css$VirtualDom$Styled$attribute('rel');
var $NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$targetBlank = _List_fromArray(
	[
		$rtfeldman$elm_css$Html$Styled$Attributes$target('_blank'),
		$rtfeldman$elm_css$Html$Styled$Attributes$rel('noopener noreferrer')
	]);
var $NoRedInk$noredink_ui$ClickableAttributes$toLinkAttributes = F2(
	function (routeToString, clickableAttributes) {
		var stringUrl = function () {
			var _v4 = _Utils_Tuple2(clickableAttributes.urlString, clickableAttributes.url);
			if (_v4.a.$ === 'Just') {
				var url = _v4.a.a;
				return url;
			} else {
				if (_v4.b.$ === 'Just') {
					var route = _v4.b.a;
					return routeToString(route);
				} else {
					var _v5 = _v4.a;
					var _v6 = _v4.b;
					return '#';
				}
			}
		}();
		var _v0 = clickableAttributes.linkType;
		switch (_v0.$) {
			case 'Default':
				return _Utils_Tuple2(
					'link',
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$href(stringUrl),
							$rtfeldman$elm_css$Html$Styled$Attributes$target('_self')
						]));
			case 'SinglePageApp':
				return _Utils_Tuple2(
					'linkSpa',
					function () {
						var _v1 = clickableAttributes.onClick;
						if (_v1.$ === 'Just') {
							var handler = _v1.a;
							return _List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$Attributes$href(stringUrl),
									$NoRedInk$noredink_ui$EventExtras$onClickPreventDefaultForLinkWithHref(handler)
								]);
						} else {
							return _List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$Attributes$href(stringUrl)
								]);
						}
					}());
			case 'WithMethod':
				var method = _v0.a;
				return _Utils_Tuple2(
					'linkWithMethod',
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$href(stringUrl),
							A2($rtfeldman$elm_css$Html$Styled$Attributes$attribute, 'data-method', method)
						]));
			case 'WithTracking':
				return _Utils_Tuple2(
					'linkWithTracking',
					function () {
						var _v2 = clickableAttributes.onClick;
						if (_v2.$ === 'Just') {
							var track = _v2.a;
							return _List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$Attributes$href(stringUrl),
									A2(
									$rtfeldman$elm_css$Html$Styled$Events$preventDefaultOn,
									'click',
									$elm$json$Json$Decode$succeed(
										_Utils_Tuple2(track, true)))
								]);
						} else {
							return _List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$Attributes$href(stringUrl)
								]);
						}
					}());
			case 'External':
				return _Utils_Tuple2(
					'linkExternal',
					A2(
						$elm$core$List$cons,
						$rtfeldman$elm_css$Html$Styled$Attributes$href(stringUrl),
						$NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$targetBlank));
			default:
				return _Utils_Tuple2(
					'linkExternalWithTracking',
					function () {
						var _v3 = clickableAttributes.onClick;
						if (_v3.$ === 'Just') {
							var handler = _v3.a;
							return _Utils_ap(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Html$Styled$Attributes$href(stringUrl),
										$rtfeldman$elm_css$Html$Styled$Events$onClick(handler),
										A2(
										$rtfeldman$elm_css$Html$Styled$Events$on,
										'auxclick',
										$elm$json$Json$Decode$succeed(handler))
									]),
								$NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$targetBlank);
						} else {
							return A2(
								$elm$core$List$cons,
								$rtfeldman$elm_css$Html$Styled$Attributes$href(stringUrl),
								$NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$targetBlank);
						}
					}());
		}
	});
var $NoRedInk$noredink_ui$Nri$Ui$Html$V3$viewJust = F2(
	function (view, maybe) {
		if (maybe.$ === 'Just') {
			var whatever = maybe.a;
			return view(whatever);
		} else {
			return $rtfeldman$elm_css$Html$Styled$text('');
		}
	});
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$viewSidebarLeaf = F3(
	function (config, extraStyles, entryConfig) {
		var _v0 = A2($NoRedInk$noredink_ui$ClickableAttributes$toLinkAttributes, config.routeToString, entryConfig.clickableAttributes);
		var linkFunctionName = _v0.a;
		var attributes = _v0.b;
		return A5(
			$NoRedInk$noredink_ui$Nri$Ui$styled,
			$rtfeldman$elm_css$Html$Styled$a,
			'Nri-Ui-SideNav-' + linkFunctionName,
			_Utils_ap(
				$NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$sharedEntryStyles,
				_Utils_ap(
					extraStyles,
					_Utils_ap(
						A2($NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$isCurrentRoute, config, entryConfig) ? _List_fromArray(
							[
								$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$glacier),
								$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy),
								$rtfeldman$elm_css$Css$fontWeight($rtfeldman$elm_css$Css$bold),
								$rtfeldman$elm_css$Css$visited(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy)
									]))
							]) : _List_Nil,
						entryConfig.customStyles))),
			_Utils_ap(attributes, entryConfig.customAttributes),
			_List_fromArray(
				[
					A2(
					$NoRedInk$noredink_ui$Nri$Ui$Html$V3$viewJust,
					function (icon_) {
						return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
							A2(
								$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$marginRight(
										$rtfeldman$elm_css$Css$px(5))
									]),
								A2(
									$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight,
									$rtfeldman$elm_css$Css$px(20),
									A2(
										$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth,
										$rtfeldman$elm_css$Css$px(20),
										icon_))));
					},
					entryConfig.icon),
					$tesk9$accessible_html_with_css$Accessibility$Styled$text(entryConfig.title)
				]));
	});
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$viewSidebarEntry = F3(
	function (config, extraStyles, entry_) {
		if (entry_.$ === 'Entry') {
			var children = entry_.a;
			var entryConfig = entry_.b;
			return _Utils_eq(entryConfig.premiumDisplay, $NoRedInk$noredink_ui$Nri$Ui$Data$PremiumDisplay$PremiumLocked) ? A2($NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$viewLockedEntry, extraStyles, entryConfig) : (A2(
				$NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$anyLinkDescendants,
				$NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$isCurrentRoute(config),
				children) ? A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$div,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$css(extraStyles)
					]),
				A2(
					$elm$core$List$cons,
					A4(
						$tesk9$accessible_html_with_css$Accessibility$Styled$styled,
						$tesk9$accessible_html_with_css$Accessibility$Styled$span,
						_Utils_ap(
							$NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$sharedEntryStyles,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray92),
									$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy),
									$rtfeldman$elm_css$Css$fontWeight($rtfeldman$elm_css$Css$bold),
									$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$default),
									$rtfeldman$elm_css$Css$marginBottom(
									$rtfeldman$elm_css$Css$px(10))
								])),
						_List_Nil,
						_List_fromArray(
							[
								$tesk9$accessible_html_with_css$Accessibility$Styled$text(entryConfig.title)
							])),
					A2(
						$elm$core$List$map,
						A2(
							$NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$viewSidebarEntry,
							config,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$marginLeft(
									$rtfeldman$elm_css$Css$px(20))
								])),
						children))) : A3($NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$viewSidebarLeaf, config, extraStyles, entryConfig));
		} else {
			var html_ = entry_.a;
			return A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$div,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$css(extraStyles)
					]),
				html_);
		}
	});
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$arrowPointingRight = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 25 20')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M24.48 11.136l-8.093 8.092a1.784 1.784 0 0 1-2.522 0 1.781 1.781 0 0 1 0-2.52l5.05-5.05H1.782a1.782 1.782 0 1 1 0-3.565h17.133l-5.05-5.05A1.781 1.781 0 0 1 15.126 0c.457 0 .913.174 1.26.522l8.094 8.092a1.784 1.784 0 0 1 0 2.522z')
					]),
				_List_Nil)
			])));
var $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$icon = function (icon_) {
	return $NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$set(
		function (attributes) {
			return _Utils_update(
				attributes,
				{
					icon: $elm$core$Maybe$Just(icon_)
				});
		});
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Style$invisibleStyle = $rtfeldman$elm_css$Css$batch(
	_List_fromArray(
		[
			A2($rtfeldman$elm_css$Css$property, 'clip', 'rect(1px, 1px, 1px, 1px)'),
			$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
			$rtfeldman$elm_css$Css$height(
			$rtfeldman$elm_css$Css$px(1)),
			$rtfeldman$elm_css$Css$width(
			$rtfeldman$elm_css$Css$px(1)),
			$rtfeldman$elm_css$Css$overflow($rtfeldman$elm_css$Css$hidden),
			$rtfeldman$elm_css$Css$margin(
			$rtfeldman$elm_css$Css$px(-1)),
			$rtfeldman$elm_css$Css$padding($rtfeldman$elm_css$Css$zero),
			$rtfeldman$elm_css$Css$border($rtfeldman$elm_css$Css$zero)
		]));
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$viewSkipLink = function (onSkip) {
	return A2(
		$NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$button,
		'Skip to main content',
		_List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$arrowPointingRight),
				$NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$small,
				$NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$css(
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Css$pseudoClass,
						'not(:focus)',
						_List_fromArray(
							[$tesk9$accessible_html_with_css$Accessibility$Styled$Style$invisibleStyle]))
					])),
				$NoRedInk$noredink_ui$Nri$Ui$ClickableText$V3$onClick(onSkip)
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$view = F3(
	function (config, navAttributes, entries) {
		var appliedNavAttributes = A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, b) {
					var f = _v0.a;
					return f(b);
				}),
			$NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$defaultNavAttributeConfig,
			navAttributes);
		return A4(
			$tesk9$accessible_html_with_css$Accessibility$Styled$styled,
			$tesk9$accessible_html_with_css$Accessibility$Styled$nav,
			appliedNavAttributes.css,
			A2(
				$elm$core$List$filterMap,
				$elm$core$Basics$identity,
				_List_fromArray(
					[
						A2($elm$core$Maybe$map, $tesk9$accessible_html_with_css$Accessibility$Styled$Widget$label, appliedNavAttributes.navLabel)
					])),
			A2(
				$elm$core$List$cons,
				$NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$viewSkipLink(config.onSkipNav),
				A2(
					$elm$core$List$map,
					A2($NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$viewSidebarEntry, config, _List_Nil),
					entries)));
	});
var $author$project$ProfessorPage$ActivityAssignmentsPage$navigation = F3(
	function (activities, activityTypes, activityId) {
		var activityTypeName = function (typeId) {
			return A2(
				$elm$core$Maybe$withDefault,
				'',
				A2(
					$elm$core$Maybe$map,
					function ($) {
						return $.name;
					},
					A2($elm$core$Dict$get, typeId, activityTypes)));
		};
		var activityName = function (activity) {
			return _Utils_ap(
				activityTypeName(activity.activityTypeId),
				activity.isSignup ? ' - Prijava' : '');
		};
		var activityNavLinks = A2(
			$elm$core$List$map,
			function (activity) {
				return A2(
					$NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$entry,
					activityName(activity),
					_List_fromArray(
						[
							$NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$linkSpa(
							$author$project$ProfessorPage$ActivityAssignmentsPage$activityAssignmentsRoute(activity.id))
						]));
			},
			activities);
		return A3(
			$NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$view,
			{
				isCurrentRoute: $elm$core$Basics$eq(
					$author$project$ProfessorPage$ActivityAssignmentsPage$activityAssignmentsRoute(activityId)),
				onSkipNav: $author$project$ProfessorPage$ActivityAssignmentsPage$SkipNav,
				routeToString: $author$project$Route$toString
			},
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$SideNav$V3$navCss(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white),
							$rtfeldman$elm_css$Css$marginLeft(
							$rtfeldman$elm_css$Css$px(5)),
							$rtfeldman$elm_css$Css$maxWidth($rtfeldman$elm_css$Css$fitContent)
						]))
				]),
			activityNavLinks);
	});
var $author$project$ProfessorPage$ActivityAssignmentsPage$view = F3(
	function (model, activityId, params) {
		var activities = params.activities;
		var activityTypes = params.activityTypes;
		return A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$div,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$height(
							$rtfeldman$elm_css$Css$pct(100))
						]))
				]),
			_List_fromArray(
				[
					A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$div,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$css(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$height(
									$rtfeldman$elm_css$Css$pct(100)),
									$rtfeldman$elm_css$Css$displayFlex,
									$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center)
								]))
						]),
					_List_fromArray(
						[
							A3(
							$author$project$ProfessorPage$ActivityAssignmentsPage$navigation,
							$elm$core$Dict$values(activities),
							activityTypes,
							activityId),
							A3($author$project$ProfessorPage$ActivityAssignmentsPage$assignmentView, model, activityId, params)
						]))
				]));
	});
var $author$project$Group$view = function (_v0) {
	var topic = _v0.topic;
	var students = _v0.students;
	var topicView = function () {
		if (topic.$ === 'Just') {
			var t = topic.a;
			return A2(
				$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h4,
				_List_Nil,
				_List_fromArray(
					[
						$tesk9$accessible_html_with_css$Accessibility$Styled$text(
						$author$project$Topic$toString(t))
					]));
		} else {
			return $author$project$Util$emptyHtmlNode;
		}
	}();
	var studentsView = A2(
		$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h5,
		_List_Nil,
		A3(
			$elm$core$Basics$composeL,
			$elm$core$List$singleton,
			$tesk9$accessible_html_with_css$Accessibility$Styled$text,
			A2(
				$elm$core$String$join,
				', ',
				A2(
					$elm$core$List$map,
					$author$project$Student$toString(false),
					students))));
	return A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$div,
		_List_Nil,
		_List_fromArray(
			[topicView, studentsView]));
};
var $author$project$ProfessorPage$GroupsPage$view = A2(
	$elm$core$Basics$composeL,
	$tesk9$accessible_html_with_css$Accessibility$Styled$div(
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$css(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$displayFlex,
						$rtfeldman$elm_css$Css$flexDirection($rtfeldman$elm_css$Css$column),
						$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$auto),
						$rtfeldman$elm_css$Css$height(
						$rtfeldman$elm_css$Css$pct(100)),
						$rtfeldman$elm_css$Css$width(
						$rtfeldman$elm_css$Css$pct(75)),
						$rtfeldman$elm_css$Css$maxWidth(
						$rtfeldman$elm_css$Css$rem(70)),
						$rtfeldman$elm_css$Css$minWidth(
						$rtfeldman$elm_css$Css$rem(30))
					]))
			])),
	$elm$core$List$map($author$project$Group$view));
var $author$project$ProfessorPage$RegistrationRequestsPage$Accept = function (a) {
	return {$: 'Accept', a: a};
};
var $author$project$ProfessorPage$RegistrationRequestsPage$Accepted = {$: 'Accepted'};
var $NoRedInk$noredink_ui$Nri$Ui$SegmentedControl$V14$Center = {$: 'Center'};
var $author$project$ProfessorPage$RegistrationRequestsPage$CloseModal = {$: 'CloseModal'};
var $author$project$ProfessorPage$RegistrationRequestsPage$Dismiss = {$: 'Dismiss'};
var $author$project$ProfessorPage$RegistrationRequestsPage$Focus = function (a) {
	return {$: 'Focus', a: a};
};
var $author$project$ProfessorPage$RegistrationRequestsPage$FocusAndSelectTab = function (a) {
	return {$: 'FocusAndSelectTab', a: a};
};
var $author$project$ProfessorPage$RegistrationRequestsPage$OpenModal = F2(
	function (a, b) {
		return {$: 'OpenModal', a: a, b: b};
	});
var $author$project$ProfessorPage$RegistrationRequestsPage$Reject = function (a) {
	return {$: 'Reject', a: a};
};
var $author$project$ProfessorPage$RegistrationRequestsPage$Rejected = {$: 'Rejected'};
var $author$project$ProfessorPage$RegistrationRequestsPage$UpdateRequest = {$: 'UpdateRequest'};
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$checkmark = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 21.7 17.1')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M7.6,17.1c-0.5,0-1-0.2-1.4-0.6l-5.6-5.4c-0.8-0.8-0.8-2-0.1-2.8c0.8-0.8,2-0.8,2.8-0.1l4.1,4L18.2,0.7c0.8-0.8,2-0.9,2.8-0.1s0.9,2,0.1,2.8l-12,13C8.7,16.9,8.2,17.1,7.6,17.1C7.7,17.1,7.6,17.1,7.6,17.1')
					]),
				_List_Nil)
			])));
var $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$hideTitle = $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$Attribute(
	function (attrs) {
		return _Utils_update(
			attrs,
			{visibleTitle: false});
	});
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$secondaryColors = {
	background: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white,
	border: $elm$core$Maybe$Just($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure),
	hover: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$glacier,
	shadow: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure,
	text: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure
};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$secondary = $NoRedInk$noredink_ui$Nri$Ui$Button$V10$set(
	function (attributes) {
		return _Utils_update(
			attributes,
			{style: $NoRedInk$noredink_ui$Nri$Ui$Button$V10$secondaryColors});
	});
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$Attribute = function (a) {
	return {$: 'Attribute', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$containerCss = function (styles) {
	return $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$Attribute(
		function (config) {
			return _Utils_update(
				config,
				{
					containerStyles: _Utils_ap(config.containerStyles, styles)
				});
		});
};
var $rtfeldman$elm_css$Css$prop5 = F6(
	function (key, argA, argB, argC, argD, argE) {
		return A2($rtfeldman$elm_css$Css$property, key, argA.value + (' ' + (argB.value + (' ' + (argC.value + (' ' + (argD.value + (' ' + argE.value))))))));
	});
var $rtfeldman$elm_css$Css$boxShadow5 = $rtfeldman$elm_css$Css$prop5('box-shadow');
var $NoRedInk$noredink_ui$Nri$Ui$SegmentedControl$V14$focusedSegmentStyles = $rtfeldman$elm_css$Css$batch(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$glacier),
			A5(
			$rtfeldman$elm_css$Css$boxShadow5,
			$rtfeldman$elm_css$Css$inset,
			$rtfeldman$elm_css$Css$zero,
			$rtfeldman$elm_css$Css$px(3),
			$rtfeldman$elm_css$Css$zero,
			A2($NoRedInk$noredink_ui$Nri$Ui$Colors$Extra$withAlpha, 0.2, $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray20)),
			$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy)
		]));
var $rtfeldman$elm_css$Css$borderLeft = $rtfeldman$elm_css$Css$prop1('border-left');
var $NoRedInk$noredink_ui$Nri$Ui$SegmentedControl$V14$sharedSegmentStyles = F2(
	function (numEntries, index) {
		return $rtfeldman$elm_css$Css$batch(
			_Utils_ap(
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Css$padding2,
						$rtfeldman$elm_css$Css$px(6),
						$rtfeldman$elm_css$Css$px(15)),
						$rtfeldman$elm_css$Css$height(
						$rtfeldman$elm_css$Css$px(45)),
						$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont,
						$rtfeldman$elm_css$Css$fontSize(
						$rtfeldman$elm_css$Css$px(15)),
						$rtfeldman$elm_css$Css$fontWeight($rtfeldman$elm_css$Css$bold),
						$rtfeldman$elm_css$Css$lineHeight(
						$rtfeldman$elm_css$Css$px(30)),
						$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$zero),
						A3(
						$rtfeldman$elm_css$Css$border3,
						$rtfeldman$elm_css$Css$px(1),
						$rtfeldman$elm_css$Css$solid,
						$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure),
						$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
						$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer),
						A2($rtfeldman$elm_css$Css$property, 'transition', 'background-color 0.2s, color 0.2s, box-shadow 0.2s, border 0.2s, border-width 0s'),
						$rtfeldman$elm_css$Css$textDecoration($rtfeldman$elm_css$Css$none),
						$rtfeldman$elm_css$Css$hover(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$textDecoration($rtfeldman$elm_css$Css$none)
							])),
						$rtfeldman$elm_css$Css$focus(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$textDecoration($rtfeldman$elm_css$Css$none)
							]))
					]),
				(!index) ? _List_fromArray(
					[
						$rtfeldman$elm_css$Css$borderTopLeftRadius(
						$rtfeldman$elm_css$Css$px(8)),
						$rtfeldman$elm_css$Css$borderBottomLeftRadius(
						$rtfeldman$elm_css$Css$px(8))
					]) : (_Utils_eq(index, numEntries - 1) ? _List_fromArray(
					[
						$rtfeldman$elm_css$Css$borderTopRightRadius(
						$rtfeldman$elm_css$Css$px(8)),
						$rtfeldman$elm_css$Css$borderBottomRightRadius(
						$rtfeldman$elm_css$Css$px(8)),
						$rtfeldman$elm_css$Css$borderLeft(
						$rtfeldman$elm_css$Css$px(0))
					]) : _List_fromArray(
					[
						$rtfeldman$elm_css$Css$borderLeft(
						$rtfeldman$elm_css$Css$px(0))
					]))));
	});
var $NoRedInk$noredink_ui$Nri$Ui$SegmentedControl$V14$unFocusedSegmentStyles = $rtfeldman$elm_css$Css$batch(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white),
			A5(
			$rtfeldman$elm_css$Css$boxShadow5,
			$rtfeldman$elm_css$Css$inset,
			$rtfeldman$elm_css$Css$zero,
			$rtfeldman$elm_css$Css$px(-2),
			$rtfeldman$elm_css$Css$zero,
			$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure),
			$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure),
			$rtfeldman$elm_css$Css$hover(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$frost)
				]))
		]));
var $NoRedInk$noredink_ui$Nri$Ui$SegmentedControl$V14$styles = F4(
	function (positioning, numEntries, index, isSelected) {
		return _List_fromArray(
			[
				A2($NoRedInk$noredink_ui$Nri$Ui$SegmentedControl$V14$sharedSegmentStyles, numEntries, index),
				isSelected ? $NoRedInk$noredink_ui$Nri$Ui$SegmentedControl$V14$focusedSegmentStyles : $NoRedInk$noredink_ui$Nri$Ui$SegmentedControl$V14$unFocusedSegmentStyles,
				$rtfeldman$elm_css$Css$batch(
				function () {
					if ((positioning.$ === 'Left') && (positioning.a.$ === 'FillContainer')) {
						var _v1 = positioning.a;
						return _List_fromArray(
							[
								$rtfeldman$elm_css$Css$width(
								$rtfeldman$elm_css$Css$pct(100)),
								$rtfeldman$elm_css$Css$flexGrow(
								$rtfeldman$elm_css$Css$int(1)),
								$rtfeldman$elm_css$Css$textAlign($rtfeldman$elm_css$Css$center)
							]);
					} else {
						return _List_Nil;
					}
				}())
			]);
	});
var $rtfeldman$elm_css$Css$textTop = $rtfeldman$elm_css$Css$prop1('text-top');
var $NoRedInk$noredink_ui$Nri$Ui$SegmentedControl$V14$viewIcon = function (icon) {
	if (icon.$ === 'Nothing') {
		return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
	} else {
		var svg = icon.a;
		return $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
			A2(
				$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineBlock),
						$rtfeldman$elm_css$Css$verticalAlign($rtfeldman$elm_css$Css$textTop),
						$rtfeldman$elm_css$Css$lineHeight(
						$rtfeldman$elm_css$Css$px(15)),
						$rtfeldman$elm_css$Css$marginRight(
						$rtfeldman$elm_css$Css$px(8))
					]),
				A2(
					$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withHeight,
					$rtfeldman$elm_css$Css$px(18),
					A2(
						$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withWidth,
						$rtfeldman$elm_css$Css$px(18),
						svg))));
	}
};
var $rtfeldman$elm_css$VirtualDom$Styled$keyedNode = $rtfeldman$elm_css$VirtualDom$Styled$KeyedNode;
var $rtfeldman$elm_css$Html$Styled$Keyed$node = $rtfeldman$elm_css$VirtualDom$Styled$keyedNode;
var $NoRedInk$noredink_ui$TabsInternal$V2$tabToId = function (tab) {
	return $NoRedInk$noredink_ui$Nri$Ui$Util$dashify(
		$elm$core$String$toLower(tab));
};
var $NoRedInk$noredink_ui$TabsInternal$V2$tabToKeyedNode = function (tab) {
	return 'tabs-internal-keyed-node-' + $NoRedInk$noredink_ui$TabsInternal$V2$tabToId(tab);
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Tabpanel = {$: 'Tabpanel'};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Role$tabPanel = $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$role($tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Tabpanel);
var $NoRedInk$noredink_ui$TabsInternal$V2$tabToBodyId = function (tab) {
	return 'tab-body-' + $NoRedInk$noredink_ui$TabsInternal$V2$tabToId(tab);
};
var $rtfeldman$elm_css$Html$Styled$Attributes$tabindex = function (n) {
	return A2(
		$rtfeldman$elm_css$VirtualDom$Styled$attribute,
		'tabIndex',
		$elm$core$String$fromInt(n));
};
var $NoRedInk$noredink_ui$TabsInternal$V2$viewTabPanel = F2(
	function (tab, selected) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$div,
			_Utils_ap(
				_List_fromArray(
					[
						$tesk9$accessible_html_with_css$Accessibility$Styled$Role$tabPanel,
						$tesk9$accessible_html_with_css$Accessibility$Styled$Aria$labelledBy(
						$NoRedInk$noredink_ui$TabsInternal$V2$tabToId(tab.idString)),
						$rtfeldman$elm_css$Html$Styled$Attributes$id(
						$NoRedInk$noredink_ui$TabsInternal$V2$tabToBodyId(tab.idString))
					]),
				selected ? _List_fromArray(
					[
						$tesk9$accessible_html_with_css$Accessibility$Styled$Widget$hidden(false),
						$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(0)
					]) : _List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$none)
							])),
						$tesk9$accessible_html_with_css$Accessibility$Styled$Widget$hidden(true),
						$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(-1)
					])),
			_List_fromArray(
				[tab.panelView]));
	});
var $NoRedInk$noredink_ui$TabsInternal$V2$viewTabPanels = function (config) {
	return A3(
		$rtfeldman$elm_css$Html$Styled$Keyed$node,
		'div',
		_List_Nil,
		A2(
			$elm$core$List$map,
			function (tab) {
				return _Utils_Tuple2(
					$NoRedInk$noredink_ui$TabsInternal$V2$tabToKeyedNode(tab.idString),
					A2(
						$NoRedInk$noredink_ui$TabsInternal$V2$viewTabPanel,
						tab,
						_Utils_eq(tab.id, config.selected)));
			},
			config.tabs));
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Tablist = {$: 'Tablist'};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Role$tabList = $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$role($tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Tablist);
var $tesk9$accessible_html_with_css$Accessibility$Styled$Aria$currentPage = A2($tesk9$accessible_html_with_css$Accessibility$Styled$Utils$aria, 'current', 'page');
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$FitToContent = {$: 'FitToContent'};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$withWidth = function (width) {
	return $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$Attribute(
		function (config) {
			return _Utils_update(
				config,
				{width: width});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$fitToContent = $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$withWidth($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$FitToContent);
var $rtfeldman$elm_css$Html$Styled$Events$keyCode = A2($elm$json$Json$Decode$field, 'keyCode', $elm$json$Json$Decode$int);
var $elm$core$Tuple$second = function (_v0) {
	var y = _v0.b;
	return y;
};
var $NoRedInk$noredink_ui$TabsInternal$V2$keyEvents = F3(
	function (_v0, thisTab, keyCode) {
		var focusAndSelect = _v0.focusAndSelect;
		var tabs = _v0.tabs;
		var findAdjacentTab = F2(
			function (tab, acc) {
				if (acc.b.$ === 'Just') {
					return acc;
				} else {
					if (acc.a) {
						var _v5 = acc.b;
						return _Utils_Tuple2(
							true,
							tab.disabled ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
								{
									focus: $elm$core$Maybe$Just(
										$NoRedInk$noredink_ui$TabsInternal$V2$tabToId(tab.idString)),
									select: tab.id
								}));
					} else {
						var _v6 = acc.b;
						return _Utils_Tuple2(
							_Utils_eq(tab.id, thisTab.id),
							$elm$core$Maybe$Nothing);
					}
				}
			});
		var nextTab = A3(
			$elm$core$List$foldl,
			findAdjacentTab,
			_Utils_Tuple2(false, $elm$core$Maybe$Nothing),
			tabs).b;
		var previousTab = A3(
			$elm$core$List$foldr,
			findAdjacentTab,
			_Utils_Tuple2(false, $elm$core$Maybe$Nothing),
			tabs).b;
		switch (keyCode) {
			case 39:
				if (nextTab.$ === 'Just') {
					var next = nextTab.a;
					return $elm$json$Json$Decode$succeed(
						focusAndSelect(next));
				} else {
					return $elm$json$Json$Decode$fail('No next tab');
				}
			case 37:
				if (previousTab.$ === 'Just') {
					var previous = previousTab.a;
					return $elm$json$Json$Decode$succeed(
						focusAndSelect(previous));
				} else {
					return $elm$json$Json$Decode$fail('No previous tab');
				}
			default:
				return $elm$json$Json$Decode$fail('Upsupported key event');
		}
	});
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$OnBottom = {$: 'OnBottom'};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$withPosition = function (direction) {
	return $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$Attribute(
		function (config) {
			return _Utils_update(
				config,
				{direction: direction});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$onBottom = $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$withPosition($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$OnBottom);
var $tesk9$accessible_html_with_css$Accessibility$Styled$Widget$selected = A2(
	$elm$core$Basics$composeL,
	$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$aria('selected'),
	$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$toBoolString);
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$SmallPadding = {$: 'SmallPadding'};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$withPadding = function (padding) {
	return $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$Attribute(
		function (config) {
			return _Utils_update(
				config,
				{padding: padding});
		});
};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$smallPadding = $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$withPadding($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$SmallPadding);
var $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Tab = {$: 'Tab'};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Role$tab = $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$role($tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Tab);
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$Exactly = function (a) {
	return {$: 'Exactly', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$Middle = {$: 'Middle'};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$NormalPadding = {$: 'NormalPadding'};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$OnTop = {$: 'OnTop'};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$PrimaryLabel = {$: 'PrimaryLabel'};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$WithTail = {$: 'WithTail'};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$buildAttributes = function () {
	var defaultTooltip = {
		alignment: $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$Middle,
		attributes: _List_Nil,
		containerStyles: _List_fromArray(
			[
				$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
				$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineBlock),
				$rtfeldman$elm_css$Css$textAlign($rtfeldman$elm_css$Css$left),
				$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$relative)
			]),
		content: _List_Nil,
		direction: $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$OnTop,
		isOpen: false,
		padding: $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$NormalPadding,
		purpose: $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$PrimaryLabel,
		tail: $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$WithTail,
		tooltipStyleOverrides: _List_Nil,
		trigger: $elm$core$Maybe$Nothing,
		triggerAttributes: _List_Nil,
		width: $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$Exactly(320)
	};
	return A2(
		$elm$core$List$foldl,
		F2(
			function (_v0, acc) {
				var applyAttr = _v0.a;
				return applyAttr(acc);
			}),
		defaultTooltip);
}();
var $rtfeldman$elm_css$Css$bottom = $rtfeldman$elm_css$Css$prop1('bottom');
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize = 8;
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$hoverBridge = function (_v0) {
	var isOpen = _v0.isOpen;
	var direction = _v0.direction;
	var bridgeLength = $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize + 5;
	return isOpen ? A5(
		$NoRedInk$noredink_ui$Nri$Ui$styled,
		$tesk9$accessible_html_with_css$Accessibility$Styled$div,
		'tooltip-hover-bridge',
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
				$rtfeldman$elm_css$Css$padding(
				$rtfeldman$elm_css$Css$px($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize)),
				$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
				$rtfeldman$elm_css$Css$batch(
				function () {
					switch (direction.$) {
						case 'OnTop':
							return _List_fromArray(
								[
									$rtfeldman$elm_css$Css$top(
									$rtfeldman$elm_css$Css$px(-bridgeLength)),
									$rtfeldman$elm_css$Css$left($rtfeldman$elm_css$Css$zero),
									$rtfeldman$elm_css$Css$width(
									$rtfeldman$elm_css$Css$pct(100)),
									$rtfeldman$elm_css$Css$height(
									$rtfeldman$elm_css$Css$px($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize))
								]);
						case 'OnRight':
							return _List_fromArray(
								[
									$rtfeldman$elm_css$Css$right(
									$rtfeldman$elm_css$Css$px(-bridgeLength)),
									$rtfeldman$elm_css$Css$top($rtfeldman$elm_css$Css$zero),
									$rtfeldman$elm_css$Css$width(
									$rtfeldman$elm_css$Css$px($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize)),
									$rtfeldman$elm_css$Css$height(
									$rtfeldman$elm_css$Css$pct(100))
								]);
						case 'OnBottom':
							return _List_fromArray(
								[
									$rtfeldman$elm_css$Css$bottom(
									$rtfeldman$elm_css$Css$px(-bridgeLength)),
									$rtfeldman$elm_css$Css$left($rtfeldman$elm_css$Css$zero),
									$rtfeldman$elm_css$Css$width(
									$rtfeldman$elm_css$Css$pct(100)),
									$rtfeldman$elm_css$Css$height(
									$rtfeldman$elm_css$Css$px($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize))
								]);
						default:
							return _List_fromArray(
								[
									$rtfeldman$elm_css$Css$left(
									$rtfeldman$elm_css$Css$px(-bridgeLength)),
									$rtfeldman$elm_css$Css$top($rtfeldman$elm_css$Css$zero),
									$rtfeldman$elm_css$Css$width(
									$rtfeldman$elm_css$Css$px($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize)),
									$rtfeldman$elm_css$Css$height(
									$rtfeldman$elm_css$Css$pct(100))
								]);
					}
				}())
			]),
		_List_Nil,
		_List_Nil) : $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
};
var $NoRedInk$noredink_ui$EventExtras$onWithStopPropagation = F2(
	function (name, msg) {
		return A2(
			$rtfeldman$elm_css$Html$Styled$Events$stopPropagationOn,
			name,
			$elm$json$Json$Decode$succeed(
				_Utils_Tuple2(msg, true)));
	});
var $NoRedInk$noredink_ui$EventExtras$onClickStopPropagation = function (msg) {
	return A2($NoRedInk$noredink_ui$EventExtras$onWithStopPropagation, 'click', msg);
};
var $rtfeldman$elm_css$Html$Styled$Events$onMouseEnter = function (msg) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$on,
		'mouseenter',
		$elm$json$Json$Decode$succeed(msg));
};
var $rtfeldman$elm_css$Html$Styled$Events$onMouseLeave = function (msg) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$Events$on,
		'mouseleave',
		$elm$json$Json$Decode$succeed(msg));
};
var $rtfeldman$elm_css$Css$Addition = {$: 'Addition'};
var $rtfeldman$elm_css$Css$plus = $rtfeldman$elm_css$Css$Addition;
var $tesk9$accessible_html_with_css$Accessibility$Styled$Key$tabbable = function (isTabbable) {
	return isTabbable ? $rtfeldman$elm_css$Html$Styled$Attributes$tabindex(0) : $rtfeldman$elm_css$Html$Styled$Attributes$tabindex(-1);
};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$viewCloseTooltipOverlay = function (msg) {
	return A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$button,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$css(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$width(
						$rtfeldman$elm_css$Css$pct(100)),
						$rtfeldman$elm_css$Css$height(
						A3(
							$rtfeldman$elm_css$Css$calc,
							$rtfeldman$elm_css$Css$px(1000),
							$rtfeldman$elm_css$Css$plus,
							A3(
								$rtfeldman$elm_css$Css$calc,
								$rtfeldman$elm_css$Css$pct(100),
								$rtfeldman$elm_css$Css$plus,
								$rtfeldman$elm_css$Css$px(1000)))),
						$rtfeldman$elm_css$Css$left($rtfeldman$elm_css$Css$zero),
						$rtfeldman$elm_css$Css$top(
						$rtfeldman$elm_css$Css$px(-1000)),
						$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer),
						$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$fixed),
						$rtfeldman$elm_css$Css$zIndex(
						$rtfeldman$elm_css$Css$int(90)),
						$rtfeldman$elm_css$Css$backgroundColor($rtfeldman$elm_css$Css$transparent),
						$rtfeldman$elm_css$Css$border($rtfeldman$elm_css$Css$zero),
						$rtfeldman$elm_css$Css$outline($rtfeldman$elm_css$Css$none)
					])),
				$NoRedInk$noredink_ui$EventExtras$onClickStopPropagation(msg),
				$tesk9$accessible_html_with_css$Accessibility$Styled$Key$tabbable(false)
			]),
		_List_Nil);
};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$viewOverlay = function (_v0) {
	var isOpen = _v0.isOpen;
	var trigger = _v0.trigger;
	var _v1 = _Utils_Tuple2(isOpen, trigger);
	if ((_v1.a && (_v1.b.$ === 'Just')) && (_v1.b.a.$ === 'OnClick')) {
		var msg = _v1.b.a.a;
		return $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$viewCloseTooltipOverlay(
			msg(false));
	} else {
		return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
	}
};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$paddingToStyle = function (padding) {
	switch (padding.$) {
		case 'SmallPadding':
			return A2(
				$rtfeldman$elm_css$Css$padding2,
				$rtfeldman$elm_css$Css$px(10),
				$rtfeldman$elm_css$Css$px(13));
		case 'NormalPadding':
			return $rtfeldman$elm_css$Css$padding(
				$rtfeldman$elm_css$Css$px(20));
		default:
			var padding_ = padding.a;
			return $rtfeldman$elm_css$Css$padding(
				$rtfeldman$elm_css$Css$px(padding_));
	}
};
var $rtfeldman$elm_css$Css$after = $rtfeldman$elm_css$Css$pseudoElement('after');
var $rtfeldman$elm_css$Css$before = $rtfeldman$elm_css$Css$pseudoElement('before');
var $rtfeldman$elm_css$Css$pointerEvents = $rtfeldman$elm_css$Css$prop1('pointer-events');
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$positionTail = function (_v0) {
	var xAlignment = _v0.xAlignment;
	var yAlignment = _v0.yAlignment;
	return _List_fromArray(
		[
			xAlignment,
			yAlignment,
			A2($rtfeldman$elm_css$Css$property, 'border', 'solid transparent'),
			A2($rtfeldman$elm_css$Css$property, 'content', '\" \"'),
			$rtfeldman$elm_css$Css$height($rtfeldman$elm_css$Css$zero),
			$rtfeldman$elm_css$Css$width($rtfeldman$elm_css$Css$zero),
			$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
			$rtfeldman$elm_css$Css$pointerEvents($rtfeldman$elm_css$Css$none)
		]);
};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$getTailPositioning = function (config) {
	return $rtfeldman$elm_css$Css$batch(
		_List_fromArray(
			[
				$rtfeldman$elm_css$Css$before(
				$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$positionTail(config)),
				$rtfeldman$elm_css$Css$after(
				$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$positionTail(config))
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$offCenterOffset = 20;
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$positioning = F2(
	function (direction, alignment) {
		var topBottomAlignment = function () {
			switch (alignment.$) {
				case 'Start':
					return $rtfeldman$elm_css$Css$left(
						$rtfeldman$elm_css$Css$px($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$offCenterOffset));
				case 'Middle':
					return $rtfeldman$elm_css$Css$left(
						$rtfeldman$elm_css$Css$pct(50));
				default:
					return $rtfeldman$elm_css$Css$right(
						$rtfeldman$elm_css$Css$px($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$offCenterOffset));
			}
		}();
		var rightLeftAlignment = function () {
			switch (alignment.$) {
				case 'Start':
					return A2(
						$rtfeldman$elm_css$Css$property,
						'top',
						'calc(-' + ($elm$core$String$fromFloat($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize) + ('px + ' + ($elm$core$String$fromFloat($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$offCenterOffset) + 'px)'))));
				case 'Middle':
					return A2(
						$rtfeldman$elm_css$Css$property,
						'top',
						'calc(-' + ($elm$core$String$fromFloat($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize) + 'px + 50%)'));
				default:
					return A2(
						$rtfeldman$elm_css$Css$property,
						'bottom',
						'calc(-' + ($elm$core$String$fromFloat($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize) + ('px + ' + ($elm$core$String$fromFloat($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$offCenterOffset) + 'px)'))));
			}
		}();
		switch (direction.$) {
			case 'OnTop':
				return $rtfeldman$elm_css$Css$batch(
					_List_fromArray(
						[
							A2($rtfeldman$elm_css$Css$property, 'transform', 'translate(-50%, -100%)'),
							$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$getTailPositioning(
							{
								xAlignment: topBottomAlignment,
								yAlignment: $rtfeldman$elm_css$Css$top(
									$rtfeldman$elm_css$Css$pct(100))
							})
						]));
			case 'OnBottom':
				return $rtfeldman$elm_css$Css$batch(
					_List_fromArray(
						[
							A2($rtfeldman$elm_css$Css$property, 'transform', 'translate(-50%, 0)'),
							$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$getTailPositioning(
							{
								xAlignment: topBottomAlignment,
								yAlignment: $rtfeldman$elm_css$Css$bottom(
									$rtfeldman$elm_css$Css$pct(100))
							})
						]));
			case 'OnRight':
				return $rtfeldman$elm_css$Css$batch(
					_List_fromArray(
						[
							A2($rtfeldman$elm_css$Css$property, 'transform', 'translate(0, -50%)'),
							$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$getTailPositioning(
							{
								xAlignment: $rtfeldman$elm_css$Css$right(
									$rtfeldman$elm_css$Css$pct(100)),
								yAlignment: rightLeftAlignment
							})
						]));
			default:
				return $rtfeldman$elm_css$Css$batch(
					_List_fromArray(
						[
							A2($rtfeldman$elm_css$Css$property, 'transform', 'translate(-100%, -50%)'),
							$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$getTailPositioning(
							{
								xAlignment: $rtfeldman$elm_css$Css$left(
									$rtfeldman$elm_css$Css$pct(100)),
								yAlignment: rightLeftAlignment
							})
						]));
		}
	});
var $rtfeldman$elm_css$Css$borderTopColor = function (c) {
	return A2($rtfeldman$elm_css$Css$property, 'border-top-color', c.value);
};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tooltipColor = $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy;
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$bottomTail = $rtfeldman$elm_css$Css$batch(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$before(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$borderTopColor($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tooltipColor),
					A2(
					$rtfeldman$elm_css$Css$property,
					'border-width',
					$elm$core$String$fromFloat($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize + 1) + 'px'),
					$rtfeldman$elm_css$Css$marginLeft(
					$rtfeldman$elm_css$Css$px((-$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize) - 1))
				])),
			$rtfeldman$elm_css$Css$after(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$borderTopColor($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tooltipColor),
					A2(
					$rtfeldman$elm_css$Css$property,
					'border-width',
					$elm$core$String$fromFloat($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize) + 'px'),
					$rtfeldman$elm_css$Css$marginLeft(
					$rtfeldman$elm_css$Css$px(-$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize))
				]))
		]));
var $rtfeldman$elm_css$Css$borderRightColor = function (c) {
	return A2($rtfeldman$elm_css$Css$property, 'border-right-color', c.value);
};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$leftTail = $rtfeldman$elm_css$Css$batch(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$before(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$borderRightColor($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tooltipColor),
					A2(
					$rtfeldman$elm_css$Css$property,
					'border-width',
					$elm$core$String$fromFloat($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize + 1) + 'px')
				])),
			$rtfeldman$elm_css$Css$after(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$borderRightColor($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tooltipColor),
					A2(
					$rtfeldman$elm_css$Css$property,
					'border-width',
					$elm$core$String$fromFloat($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize) + 'px'),
					$rtfeldman$elm_css$Css$marginTop(
					$rtfeldman$elm_css$Css$px(1)),
					$rtfeldman$elm_css$Css$marginLeft(
					$rtfeldman$elm_css$Css$px(2))
				]))
		]));
var $rtfeldman$elm_css$Css$borderLeftColor = function (c) {
	return A2($rtfeldman$elm_css$Css$property, 'border-left-color', c.value);
};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$rightTail = $rtfeldman$elm_css$Css$batch(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$before(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$borderLeftColor($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tooltipColor),
					A2(
					$rtfeldman$elm_css$Css$property,
					'border-width',
					$elm$core$String$fromFloat($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize + 1) + 'px')
				])),
			$rtfeldman$elm_css$Css$after(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$borderLeftColor($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tooltipColor),
					A2(
					$rtfeldman$elm_css$Css$property,
					'border-width',
					$elm$core$String$fromFloat($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize) + 'px'),
					$rtfeldman$elm_css$Css$marginTop(
					$rtfeldman$elm_css$Css$px(1)),
					$rtfeldman$elm_css$Css$marginRight(
					$rtfeldman$elm_css$Css$px(2))
				]))
		]));
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$topTail = $rtfeldman$elm_css$Css$batch(
	_List_fromArray(
		[
			$rtfeldman$elm_css$Css$before(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$borderBottomColor($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tooltipColor),
					A2(
					$rtfeldman$elm_css$Css$property,
					'border-width',
					$elm$core$String$fromFloat($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize + 1) + 'px'),
					$rtfeldman$elm_css$Css$marginLeft(
					$rtfeldman$elm_css$Css$px((-$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize) - 1))
				])),
			$rtfeldman$elm_css$Css$after(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$borderBottomColor($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tooltipColor),
					A2(
					$rtfeldman$elm_css$Css$property,
					'border-width',
					$elm$core$String$fromFloat($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize) + 'px'),
					$rtfeldman$elm_css$Css$marginLeft(
					$rtfeldman$elm_css$Css$px(-$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize))
				]))
		]));
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailForDirection = function (direction) {
	switch (direction.$) {
		case 'OnTop':
			return $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$bottomTail;
		case 'OnBottom':
			return $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$topTail;
		case 'OnRight':
			return $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$leftTail;
		default:
			return $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$rightTail;
	}
};
var $rtfeldman$elm_css$Css$underline = {textDecorationLine: $rtfeldman$elm_css$Css$Structure$Compatible, value: 'underline'};
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$pointerBox = F3(
	function (tail, direction, alignment) {
		return $rtfeldman$elm_css$Html$Styled$Attributes$css(
			_List_fromArray(
				[
					$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy),
					A3(
					$rtfeldman$elm_css$Css$border3,
					$rtfeldman$elm_css$Css$px(1),
					$rtfeldman$elm_css$Css$solid,
					$NoRedInk$noredink_ui$Nri$Ui$Colors$V1$navy),
					A2($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$positioning, direction, alignment),
					function () {
					if (tail.$ === 'WithTail') {
						return $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailForDirection(direction);
					} else {
						return $rtfeldman$elm_css$Css$batch(_List_Nil);
					}
				}(),
					$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont,
					$rtfeldman$elm_css$Css$fontSize(
					$rtfeldman$elm_css$Css$px(16)),
					$rtfeldman$elm_css$Css$fontWeight(
					$rtfeldman$elm_css$Css$int(600)),
					$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white),
					$NoRedInk$noredink_ui$Nri$Ui$Shadows$V1$high,
					$rtfeldman$elm_css$Css$Global$descendants(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$Global$a(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$textDecoration($rtfeldman$elm_css$Css$underline)
								]))
						])),
					$rtfeldman$elm_css$Css$Global$descendants(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$Global$a(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white)
								]))
						]))
				]));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$positionTooltip = F2(
	function (direction, alignment) {
		var topToBottomPosition = function () {
			switch (alignment.$) {
				case 'Start':
					var customOffset = alignment.a;
					return $rtfeldman$elm_css$Css$top(customOffset);
				case 'Middle':
					return $rtfeldman$elm_css$Css$top(
						$rtfeldman$elm_css$Css$pct(50));
				default:
					var customOffset = alignment.a;
					return $rtfeldman$elm_css$Css$bottom(customOffset);
			}
		}();
		var ltrPosition = function () {
			switch (alignment.$) {
				case 'Start':
					var customOffset = alignment.a;
					return $rtfeldman$elm_css$Css$left(customOffset);
				case 'Middle':
					return $rtfeldman$elm_css$Css$left(
						$rtfeldman$elm_css$Css$pct(50));
				default:
					var customOffset = alignment.a;
					return $rtfeldman$elm_css$Css$right(customOffset);
			}
		}();
		return $rtfeldman$elm_css$Css$batch(
			function () {
				switch (direction.$) {
					case 'OnTop':
						return _List_fromArray(
							[
								ltrPosition,
								$rtfeldman$elm_css$Css$top(
								A3(
									$rtfeldman$elm_css$Css$calc,
									$rtfeldman$elm_css$Css$px(-$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize),
									$rtfeldman$elm_css$Css$minus,
									$rtfeldman$elm_css$Css$px(2)))
							]);
					case 'OnBottom':
						return _List_fromArray(
							[
								ltrPosition,
								$rtfeldman$elm_css$Css$bottom(
								A3(
									$rtfeldman$elm_css$Css$calc,
									$rtfeldman$elm_css$Css$px(-$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize),
									$rtfeldman$elm_css$Css$minus,
									$rtfeldman$elm_css$Css$px(2)))
							]);
					case 'OnLeft':
						return _List_fromArray(
							[
								topToBottomPosition,
								$rtfeldman$elm_css$Css$left(
								A3(
									$rtfeldman$elm_css$Css$calc,
									$rtfeldman$elm_css$Css$px(-$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize),
									$rtfeldman$elm_css$Css$minus,
									$rtfeldman$elm_css$Css$px(2)))
							]);
					default:
						return _List_fromArray(
							[
								topToBottomPosition,
								$rtfeldman$elm_css$Css$right(
								A3(
									$rtfeldman$elm_css$Css$calc,
									$rtfeldman$elm_css$Css$px(-$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$tailSize),
									$rtfeldman$elm_css$Css$minus,
									$rtfeldman$elm_css$Css$px(2)))
							]);
				}
			}());
	});
var $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Tooltip = {$: 'Tooltip'};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Role$toolTip = $tesk9$accessible_html_with_css$Accessibility$Styled$Utils$role($tesk9$accessible_html_with_css$Accessibility$Styled$Utils$Tooltip);
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$viewOpenTooltip = F2(
	function (tooltipId, config) {
		return A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$div,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
							A2($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$positionTooltip, config.direction, config.alignment),
							$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox)
						]))
				]),
			_List_fromArray(
				[
					A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$div,
					_Utils_ap(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$Attributes$css(
								_Utils_ap(
									_List_fromArray(
										[
											$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
											$rtfeldman$elm_css$Css$borderRadius(
											$rtfeldman$elm_css$Css$px(8)),
											function () {
											var _v0 = config.width;
											if (_v0.$ === 'Exactly') {
												var width = _v0.a;
												return $rtfeldman$elm_css$Css$width(
													$rtfeldman$elm_css$Css$px(width));
											} else {
												return $rtfeldman$elm_css$Css$whiteSpace($rtfeldman$elm_css$Css$noWrap);
											}
										}(),
											$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$paddingToStyle(config.padding),
											$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$absolute),
											$rtfeldman$elm_css$Css$zIndex(
											$rtfeldman$elm_css$Css$int(100))
										]),
									config.tooltipStyleOverrides)),
								A3($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$pointerBox, config.tail, config.direction, config.alignment),
								$rtfeldman$elm_css$Html$Styled$Attributes$class('dont-disable-animation'),
								$tesk9$accessible_html_with_css$Accessibility$Styled$Role$toolTip
							]),
						_Utils_ap(
							config.attributes,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$Attributes$id(tooltipId)
								]))),
					config.content)
				]));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$viewTooltip = F2(
	function (tooltipId, config) {
		return config.isOpen ? A2($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$viewOpenTooltip, tooltipId, config) : $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
	});
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$viewTooltip_ = F2(
	function (_v0, tooltip) {
		var trigger = _v0.trigger;
		var id = _v0.id;
		var _v1 = function () {
			var _v2 = tooltip.trigger;
			if (_v2.$ === 'Just') {
				if (_v2.a.$ === 'OnClick') {
					var msg = _v2.a.a;
					return _Utils_Tuple2(
						_List_Nil,
						_List_fromArray(
							[
								$NoRedInk$noredink_ui$EventExtras$onClickStopPropagation(
								msg(!tooltip.isOpen))
							]));
				} else {
					var msg = _v2.a.a;
					return _Utils_Tuple2(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$Events$onMouseEnter(
								msg(true)),
								$rtfeldman$elm_css$Html$Styled$Events$onMouseLeave(
								msg(false))
							]),
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$Events$onFocus(
								msg(true)),
								$rtfeldman$elm_css$Html$Styled$Events$onBlur(
								msg(false)),
								$rtfeldman$elm_css$Html$Styled$Events$onClick(
								msg(true))
							]));
				}
			} else {
				return _Utils_Tuple2(_List_Nil, _List_Nil);
			}
		}();
		var containerEvents = _v1.a;
		var buttonEvents = _v1.b;
		return A5(
			$NoRedInk$noredink_ui$Nri$Ui$styled,
			$rtfeldman$elm_css$Html$Styled$div,
			'Nri-Ui-Tooltip-V2',
			tooltip.containerStyles,
			containerEvents,
			_List_fromArray(
				[
					A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$div,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$css(
							_List_fromArray(
								[$rtfeldman$elm_css$Css$displayFlex]))
						]),
					_List_fromArray(
						[
							trigger(
							A2(
								$elm$core$List$cons,
								function () {
									if (tooltip.isOpen) {
										var _v3 = tooltip.purpose;
										if (_v3.$ === 'PrimaryLabel') {
											return $tesk9$accessible_html_with_css$Accessibility$Styled$Aria$labeledBy(id);
										} else {
											return $tesk9$accessible_html_with_css$Accessibility$Styled$Aria$describedBy(
												_List_fromArray(
													[id]));
										}
									} else {
										return A2($rtfeldman$elm_css$Html$Styled$Attributes$property, 'data-closed-tooltip', $elm$json$Json$Encode$null);
									}
								}(),
								_Utils_ap(buttonEvents, tooltip.triggerAttributes))),
							$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$hoverBridge(tooltip)
						])),
					$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$viewOverlay(tooltip),
					A2($NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$viewTooltip, id, tooltip)
				]));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$view = F2(
	function (config, attributes) {
		return A2(
			$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$viewTooltip_,
			config,
			$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$buildAttributes(attributes));
	});
var $NoRedInk$noredink_ui$TabsInternal$V2$viewTab_ = F3(
	function (config, index, tab) {
		var isSelected = _Utils_eq(config.selected, tab.id);
		var tabIndex = isSelected ? 0 : (-1);
		var _v0 = function () {
			var _v1 = tab.spaHref;
			if (_v1.$ === 'Just') {
				var href = _v1.a;
				return _Utils_Tuple2(
					$rtfeldman$elm_css$Html$Styled$a,
					_List_fromArray(
						[
							isSelected ? $tesk9$accessible_html_with_css$Accessibility$Styled$Aria$currentPage : $NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$none,
							$rtfeldman$elm_css$Html$Styled$Attributes$href(href),
							$NoRedInk$noredink_ui$EventExtras$onClickPreventDefaultForLinkWithHref(
							config.focusAndSelect(
								{focus: $elm$core$Maybe$Nothing, select: tab.id}))
						]));
			} else {
				return _Utils_Tuple2(
					$rtfeldman$elm_css$Html$Styled$button,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Events$onClick(
							config.focusAndSelect(
								{focus: $elm$core$Maybe$Nothing, select: tab.id}))
						]));
			}
		}();
		var tag = _v0.a;
		var tagSpecificAttributes = _v0.b;
		var buttonOrLink = function (tooltipAttributes) {
			return A4(
				$rtfeldman$elm_css$Html$Styled$styled,
				tag,
				A2(config.tabStyles, index, isSelected),
				_Utils_ap(
					tooltipAttributes,
					_Utils_ap(
						tagSpecificAttributes,
						_Utils_ap(
							tab.tabAttributes,
							_Utils_ap(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Html$Styled$Attributes$tabindex(tabIndex),
										$rtfeldman$elm_css$Html$Styled$Attributes$disabled((!isSelected) && tab.disabled),
										$tesk9$accessible_html_with_css$Accessibility$Styled$Widget$selected(isSelected),
										$tesk9$accessible_html_with_css$Accessibility$Styled$Role$tab,
										$rtfeldman$elm_css$Html$Styled$Attributes$id(
										$NoRedInk$noredink_ui$TabsInternal$V2$tabToId(tab.idString)),
										A2(
										$rtfeldman$elm_css$Html$Styled$Events$on,
										'keyup',
										A2(
											$elm$json$Json$Decode$andThen,
											A2($NoRedInk$noredink_ui$TabsInternal$V2$keyEvents, config, tab),
											$rtfeldman$elm_css$Html$Styled$Events$keyCode))
									]),
								_Utils_ap(
									function () {
										var _v4 = tab.labelledBy;
										if (_v4.$ === 'Nothing') {
											return _List_Nil;
										} else {
											var labelledById = _v4.a;
											return _List_fromArray(
												[
													$tesk9$accessible_html_with_css$Accessibility$Styled$Aria$labelledBy(labelledById)
												]);
										}
									}(),
									function () {
										var _v5 = tab.describedBy;
										if (!_v5.b) {
											return _List_Nil;
										} else {
											var ids = _v5;
											return _List_fromArray(
												[
													$tesk9$accessible_html_with_css$Accessibility$Styled$Aria$describedBy(ids)
												]);
										}
									}()))))),
				tab.tabView);
		};
		var _v2 = _Utils_Tuple2(tab.labelledBy, tab.tabTooltip);
		if (_v2.a.$ === 'Just') {
			return buttonOrLink(_List_Nil);
		} else {
			var _v3 = _v2.a;
			var tooltipAttributes = _v2.b;
			return A2(
				$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$view,
				{
					id: 'tab-tooltip__' + $NoRedInk$noredink_ui$TabsInternal$V2$tabToId(tab.idString),
					trigger: function (eventHandlers) {
						return buttonOrLink(eventHandlers);
					}
				},
				_Utils_ap(
					_List_fromArray(
						[$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$smallPadding, $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$onBottom, $NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$fitToContent]),
					tooltipAttributes));
		}
	});
var $NoRedInk$noredink_ui$TabsInternal$V2$viewTabs = function (config) {
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_fromArray(
			[
				$tesk9$accessible_html_with_css$Accessibility$Styled$Role$tabList,
				$rtfeldman$elm_css$Html$Styled$Attributes$css(config.tabListStyles)
			]),
		A2(
			$elm$core$List$indexedMap,
			$NoRedInk$noredink_ui$TabsInternal$V2$viewTab_(config),
			config.tabs));
};
var $NoRedInk$noredink_ui$TabsInternal$V2$views = function (config) {
	return {
		tabList: $NoRedInk$noredink_ui$TabsInternal$V2$viewTabs(config),
		tabPanels: $NoRedInk$noredink_ui$TabsInternal$V2$viewTabPanels(config)
	};
};
var $NoRedInk$noredink_ui$Nri$Ui$SegmentedControl$V14$view = function (config) {
	var toInternalTab = function (option) {
		return {
			describedBy: _List_Nil,
			disabled: false,
			id: option.value,
			idString: option.idString,
			labelledBy: $elm$core$Maybe$Nothing,
			panelView: option.content,
			spaHref: A2(
				$elm$core$Maybe$map,
				function (toUrl) {
					return toUrl(option.value);
				},
				config.toUrl),
			tabAttributes: option.attributes,
			tabTooltip: function () {
				var _v2 = config.positioning;
				if ((_v2.$ === 'Left') && (_v2.a.$ === 'FillContainer')) {
					var _v3 = _v2.a;
					return A2(
						$elm$core$List$cons,
						$NoRedInk$noredink_ui$Nri$Ui$Tooltip$V2$containerCss(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$width(
									$rtfeldman$elm_css$Css$pct(100))
								])),
						option.tabTooltip);
				} else {
					return option.tabTooltip;
				}
			}(),
			tabView: _List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$SegmentedControl$V14$viewIcon(option.icon),
					option.label
				])
		};
	};
	var _v0 = $NoRedInk$noredink_ui$TabsInternal$V2$views(
		{
			focusAndSelect: config.focusAndSelect,
			selected: config.selected,
			tabListStyles: _List_fromArray(
				[
					$rtfeldman$elm_css$Css$displayFlex,
					$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer),
					$rtfeldman$elm_css$Css$marginBottom(
					$rtfeldman$elm_css$Css$px(10)),
					function () {
					var _v1 = config.positioning;
					if (_v1.$ === 'Left') {
						return $rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$flexStart);
					} else {
						return $rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center);
					}
				}()
				]),
			tabStyles: A2(
				$NoRedInk$noredink_ui$Nri$Ui$SegmentedControl$V14$styles,
				config.positioning,
				$elm$core$List$length(config.options)),
			tabs: A2($elm$core$List$map, toInternalTab, config.options)
		});
	var tabList = _v0.tabList;
	var tabPanels = _v0.tabPanels;
	return A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$div,
		_List_Nil,
		_List_fromArray(
			[tabList, tabPanels]));
};
var $author$project$ProfessorPage$RegistrationRequestsPage$view = function (model) {
	var rejectButtonId = function (id) {
		return 'reject-btn-' + $elm$core$String$fromInt(id);
	};
	var modalContent = function () {
		var _v0 = model.modalAction;
		switch (_v0.$) {
			case 'Accept':
				var firstName = _v0.a.firstName;
				var lastName = _v0.a.lastName;
				var index = _v0.a.index;
				return _List_fromArray(
					[
						A2(
						$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h5,
						_List_Nil,
						_List_fromArray(
							[
								$tesk9$accessible_html_with_css$Accessibility$Styled$text('Potvrdite da prihvatate zahtev za registraciju studenta:')
							])),
						A2(
						$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h4,
						_List_Nil,
						_List_fromArray(
							[
								$tesk9$accessible_html_with_css$Accessibility$Styled$text(firstName + (' ' + (lastName + (' ' + index))))
							]))
					]);
			case 'Reject':
				var firstName = _v0.a.firstName;
				var lastName = _v0.a.lastName;
				var index = _v0.a.index;
				return _List_fromArray(
					[
						A2(
						$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h5,
						_List_Nil,
						_List_fromArray(
							[
								$tesk9$accessible_html_with_css$Accessibility$Styled$text('Potvrdite da odbijate zahtev za registraciju studenta:')
							])),
						A2(
						$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h4,
						_List_Nil,
						_List_fromArray(
							[
								$tesk9$accessible_html_with_css$Accessibility$Styled$text(firstName + (' ' + (lastName + (' ' + index))))
							]))
					]);
			default:
				return _List_fromArray(
					[
						$tesk9$accessible_html_with_css$Accessibility$Styled$text('')
					]);
		}
	}();
	var footer = model.updatingRequest ? $author$project$Util$loadingSpinner : (model.hasProcessingError ? $NoRedInk$noredink_ui$Nri$Ui$Message$V3$view(
		_List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$alert,
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$large,
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$onDismiss($author$project$ProfessorPage$RegistrationRequestsPage$Dismiss),
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$plaintext('Došlo je do neočekivane greške 😞')
			])) : A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$div,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
				'Potvrdi',
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$primary,
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick($author$project$ProfessorPage$RegistrationRequestsPage$UpdateRequest)
					])),
				A2(
				$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
				'Odusani',
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$secondary,
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick($author$project$ProfessorPage$RegistrationRequestsPage$CloseModal)
					]))
			])));
	var confirmModalButtonId = 'confirm-modal-button';
	var cancelModalButtonId = 'cancel-modal-button';
	var acceptButtonId = function (id) {
		return 'accept-btn-' + $elm$core$String$fromInt(id);
	};
	var controlView = F2(
		function (tab, request) {
			return _Utils_eq(tab, $author$project$ProfessorPage$RegistrationRequestsPage$Pending) ? _List_fromArray(
				[
					A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$div,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
							'Prihvati',
							_List_fromArray(
								[
									$NoRedInk$noredink_ui$Nri$Ui$Button$V10$primary,
									$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$checkmark),
									$NoRedInk$noredink_ui$Nri$Ui$Button$V10$id(
									acceptButtonId(request.id)),
									$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
									A2(
										$author$project$ProfessorPage$RegistrationRequestsPage$OpenModal,
										$author$project$ProfessorPage$RegistrationRequestsPage$Accept(request),
										{
											returnFocusTo: acceptButtonId(request.id),
											startFocusOn: confirmModalButtonId
										}))
								])),
							A2(
							$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
							'Odbaci',
							_List_fromArray(
								[
									$NoRedInk$noredink_ui$Nri$Ui$Button$V10$secondary,
									$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$x),
									$NoRedInk$noredink_ui$Nri$Ui$Button$V10$css(
									_List_fromArray(
										[
											$rtfeldman$elm_css$Css$marginLeft(
											$rtfeldman$elm_css$Css$px(5))
										])),
									$NoRedInk$noredink_ui$Nri$Ui$Button$V10$id(
									rejectButtonId(request.id)),
									$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
									A2(
										$author$project$ProfessorPage$RegistrationRequestsPage$OpenModal,
										$author$project$ProfessorPage$RegistrationRequestsPage$Reject(request),
										{
											returnFocusTo: rejectButtonId(request.id),
											startFocusOn: cancelModalButtonId
										}))
								]))
						]))
				]) : _List_Nil;
		});
	var requestView = F2(
		function (tab, request) {
			var email = request.email;
			var firstName = request.firstName;
			var lastName = request.lastName;
			var index = request.index;
			return $NoRedInk$noredink_ui$Nri$Ui$Container$V2$view(
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$Container$V2$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$displayFlex,
								$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceBetween),
								A2(
								$rtfeldman$elm_css$Css$margin2,
								$rtfeldman$elm_css$Css$px(0),
								$rtfeldman$elm_css$Css$px(20))
							])),
						$NoRedInk$noredink_ui$Nri$Ui$Container$V2$html(
						A2(
							$elm$core$List$cons,
							A2(
								$tesk9$accessible_html_with_css$Accessibility$Styled$div,
								_List_Nil,
								_List_fromArray(
									[
										A2(
										$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h4,
										_List_Nil,
										_List_fromArray(
											[
												$tesk9$accessible_html_with_css$Accessibility$Styled$text(firstName + (' ' + (lastName + (' ' + index))))
											])),
										A2(
										$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h5,
										_List_Nil,
										_List_fromArray(
											[
												$tesk9$accessible_html_with_css$Accessibility$Styled$text(email)
											]))
									])),
							A2(controlView, tab, request)))
					]));
		});
	var requestsView = F2(
		function (tab, requests) {
			return A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$div,
				_List_Nil,
				A2(
					$elm$core$List$map,
					requestView(tab),
					requests));
		});
	var options = _List_fromArray(
		[
			{
			attributes: _List_Nil,
			content: A2(requestsView, $author$project$ProfessorPage$RegistrationRequestsPage$Pending, model.pendingRequests),
			icon: $elm$core$Maybe$Just(
				A2($NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withColor, $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$yellow, $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$plus)),
			idString: $author$project$ProfessorPage$RegistrationRequestsPage$statusPending,
			label: $tesk9$accessible_html_with_css$Accessibility$Styled$text('Novi zahtevi'),
			tabTooltip: _List_Nil,
			value: $author$project$ProfessorPage$RegistrationRequestsPage$Pending
		},
			{
			attributes: _List_Nil,
			content: A2(requestsView, $author$project$ProfessorPage$RegistrationRequestsPage$Accepted, model.acceptedRequests),
			icon: $elm$core$Maybe$Just(
				A2($NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withColor, $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$greenDark, $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$checkmark)),
			idString: $author$project$ProfessorPage$RegistrationRequestsPage$statusAccepted,
			label: $tesk9$accessible_html_with_css$Accessibility$Styled$text('Prihvaćeni'),
			tabTooltip: _List_Nil,
			value: $author$project$ProfessorPage$RegistrationRequestsPage$Accepted
		},
			{
			attributes: _List_Nil,
			content: A2(requestsView, $author$project$ProfessorPage$RegistrationRequestsPage$Rejected, model.rejectedRequests),
			icon: $elm$core$Maybe$Just(
				A2($NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withColor, $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$redDark, $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$x)),
			idString: $author$project$ProfessorPage$RegistrationRequestsPage$statusRejected,
			label: $tesk9$accessible_html_with_css$Accessibility$Styled$text('Odbijeni'),
			tabTooltip: _List_Nil,
			value: $author$project$ProfessorPage$RegistrationRequestsPage$Rejected
		}
		]);
	return A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$div,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$css(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$displayFlex,
						$rtfeldman$elm_css$Css$flexDirection($rtfeldman$elm_css$Css$column),
						$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$auto),
						$rtfeldman$elm_css$Css$height(
						$rtfeldman$elm_css$Css$pct(100)),
						$rtfeldman$elm_css$Css$width(
						$rtfeldman$elm_css$Css$pct(75)),
						$rtfeldman$elm_css$Css$maxWidth(
						$rtfeldman$elm_css$Css$rem(70)),
						$rtfeldman$elm_css$Css$minWidth(
						$rtfeldman$elm_css$Css$rem(30))
					]))
			]),
		_List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$SegmentedControl$V14$view(
				{focusAndSelect: $author$project$ProfessorPage$RegistrationRequestsPage$FocusAndSelectTab, options: options, positioning: $NoRedInk$noredink_ui$Nri$Ui$SegmentedControl$V14$Center, selected: model.tab, toUrl: $elm$core$Maybe$Nothing}),
				A3(
				$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$view,
				{
					content: modalContent,
					focusTrap: {firstId: confirmModalButtonId, focus: $author$project$ProfessorPage$RegistrationRequestsPage$Focus, lastId: cancelModalButtonId},
					footer: _List_fromArray(
						[footer]),
					title: '',
					wrapMsg: $author$project$ProfessorPage$RegistrationRequestsPage$ModalMsg
				},
				_List_fromArray(
					[$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$hideTitle]),
				model.modalState)
			]));
};
var $author$project$ProfessorPage$TopicsPage$AddTopic = {$: 'AddTopic'};
var $author$project$ProfessorPage$TopicsPage$DeleteTopic = function (a) {
	return {$: 'DeleteTopic', a: a};
};
var $author$project$ProfessorPage$TopicsPage$Dismiss = {$: 'Dismiss'};
var $author$project$ProfessorPage$TopicsPage$Title = function (a) {
	return {$: 'Title', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$danger = $NoRedInk$noredink_ui$Nri$Ui$Button$V10$set(
	function (attributes) {
		return _Utils_update(
			attributes,
			{
				style: {background: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$red, border: $elm$core$Maybe$Nothing, hover: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$redDark, shadow: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$redDark, text: $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white}
			});
	});
var $rtfeldman$elm_css$Css$end = $rtfeldman$elm_css$Css$prop1('end');
var $author$project$ProfessorPage$TopicsPage$view = function (model) {
	var topicView = function (_v0) {
		var id = _v0.id;
		var title = _v0.title;
		return $NoRedInk$noredink_ui$Nri$Ui$Container$V2$view(
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$Container$V2$gray,
					$NoRedInk$noredink_ui$Nri$Ui$Container$V2$css(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$marginBottom(
							$rtfeldman$elm_css$Css$px(2))
						])),
					$NoRedInk$noredink_ui$Nri$Ui$Container$V2$html(
					_List_fromArray(
						[
							A2(
							$tesk9$accessible_html_with_css$Accessibility$Styled$div,
							_List_fromArray(
								[
									$rtfeldman$elm_css$Html$Styled$Attributes$css(
									_List_fromArray(
										[
											$rtfeldman$elm_css$Css$displayFlex,
											$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceBetween),
											$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center)
										]))
								]),
							_List_fromArray(
								[
									A2(
									$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h5,
									_List_Nil,
									_List_fromArray(
										[
											$tesk9$accessible_html_with_css$Accessibility$Styled$text(title)
										])),
									A2(
									$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
									'',
									_List_fromArray(
										[
											$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
											$author$project$ProfessorPage$TopicsPage$DeleteTopic(id)),
											$NoRedInk$noredink_ui$Nri$Ui$Button$V10$small,
											$NoRedInk$noredink_ui$Nri$Ui$Button$V10$danger,
											$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$x)
										]))
								]))
						]))
				]));
	};
	var topicsView = $NoRedInk$noredink_ui$Nri$Ui$Container$V2$view(
		_List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Container$V2$css(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$flexGrow(
						$rtfeldman$elm_css$Css$int(1))
					])),
				$NoRedInk$noredink_ui$Nri$Ui$Container$V2$html(
				model.loadingTopics ? _List_fromArray(
					[$author$project$Util$loadingSpinner]) : _List_fromArray(
					[
						A2(
						$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h3,
						_List_fromArray(
							[
								$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$css(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$marginBottom(
										$rtfeldman$elm_css$Css$px(20))
									]))
							]),
						_List_fromArray(
							[
								$tesk9$accessible_html_with_css$Accessibility$Styled$text('Trenutne teme')
							])),
						A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$div,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$Attributes$css(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$displayFlex,
										$rtfeldman$elm_css$Css$flexDirection($rtfeldman$elm_css$Css$column)
									]))
							]),
						A2($elm$core$List$map, topicView, model.topics))
					]))
			]));
	var newTopicView = $NoRedInk$noredink_ui$Nri$Ui$Container$V2$view(
		_List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Container$V2$css(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$marginBottom(
						$rtfeldman$elm_css$Css$px(10))
					])),
				$NoRedInk$noredink_ui$Nri$Ui$Container$V2$html(
				_List_fromArray(
					[
						A2(
						$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h3,
						_List_fromArray(
							[
								$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$css(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$marginBottom(
										$rtfeldman$elm_css$Css$px(20))
									]))
							]),
						_List_fromArray(
							[
								$tesk9$accessible_html_with_css$Accessibility$Styled$text('Nova tema')
							])),
						A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$div,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$Attributes$css(
								_List_fromArray(
									[$rtfeldman$elm_css$Css$displayFlex]))
							]),
						_List_fromArray(
							[
								A2(
								$tesk9$accessible_html_with_css$Accessibility$Styled$div,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Html$Styled$Attributes$css(
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$flexGrow(
												$rtfeldman$elm_css$Css$int(1)),
												$rtfeldman$elm_css$Css$marginRight(
												$rtfeldman$elm_css$Css$px(10))
											]))
									]),
								_List_fromArray(
									[
										A2(
										$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$view,
										'Naslov teme',
										_List_fromArray(
											[
												$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$text($author$project$ProfessorPage$TopicsPage$Title),
												$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$value(model.topicTitle)
											]))
									])),
								A2(
								$tesk9$accessible_html_with_css$Accessibility$Styled$div,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Html$Styled$Attributes$css(
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$alignSelf($rtfeldman$elm_css$Css$end)
											]))
									]),
								_List_fromArray(
									[
										A2(
										$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
										'Dodaj temu',
										_Utils_ap(
											_List_fromArray(
												[
													$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick($author$project$ProfessorPage$TopicsPage$AddTopic),
													$NoRedInk$noredink_ui$Nri$Ui$Button$V10$secondary,
													$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$plus)
												]),
											($elm$core$String$isEmpty(model.topicTitle) || model.loadingTopics) ? _List_fromArray(
												[$NoRedInk$noredink_ui$Nri$Ui$Button$V10$disabled]) : _List_Nil))
									]))
							]))
					]))
			]));
	var errorView = model.hasProcessingError ? $NoRedInk$noredink_ui$Nri$Ui$Message$V3$view(
		_List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$alert,
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$css(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$marginBottom(
						$rtfeldman$elm_css$Css$px(10))
					])),
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$large,
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$onDismiss($author$project$ProfessorPage$TopicsPage$Dismiss),
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$plaintext('Došlo je do neočekivane greške 😞')
			])) : $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
	return A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$div,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$css(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$displayFlex,
						$rtfeldman$elm_css$Css$flexDirection($rtfeldman$elm_css$Css$column),
						$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$auto),
						$rtfeldman$elm_css$Css$height(
						$rtfeldman$elm_css$Css$pct(100)),
						$rtfeldman$elm_css$Css$width(
						$rtfeldman$elm_css$Css$pct(75)),
						$rtfeldman$elm_css$Css$maxWidth(
						$rtfeldman$elm_css$Css$rem(70)),
						$rtfeldman$elm_css$Css$minWidth(
						$rtfeldman$elm_css$Css$rem(30))
					]))
			]),
		_List_fromArray(
			[newTopicView, errorView, topicsView]));
};
var $author$project$ProfessorPage$view = F2(
	function (model, currentRoute) {
		var requstesModel = model.requstesModel;
		var activitiesModel = model.activitiesModel;
		var activityAssignmentsModel = model.activityAssignmentsModel;
		var activitiesProjection = {
			activities: $elm$core$Dict$values(model.activities),
			activityTypes: $elm$core$Dict$values(model.activityTypes),
			loading: model.loadingActivities || model.loadingActivityTypes,
			zone: model.zone
		};
		if (currentRoute.$ === 'Professor') {
			switch (currentRoute.a.$) {
				case 'RegistrationRequests':
					var _v1 = currentRoute.a;
					return A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$map,
						$author$project$ProfessorPage$GotRequestsMsg,
						$author$project$ProfessorPage$RegistrationRequestsPage$view(requstesModel));
				case 'Activities':
					var _v2 = currentRoute.a;
					return A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$map,
						$author$project$ProfessorPage$GotActivitiesMsg,
						A2($author$project$ProfessorPage$ActivitiesPage$view, activitiesProjection, activitiesModel));
				case 'ActivityAssignments':
					var activityId = currentRoute.a.a;
					return A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$map,
						$author$project$ProfessorPage$GotActivityAssignmentsMsg,
						A3($author$project$ProfessorPage$ActivityAssignmentsPage$view, activityAssignmentsModel, activityId, model));
				case 'Topics':
					var _v3 = currentRoute.a;
					return A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$map,
						$author$project$ProfessorPage$GotTopicsMsg,
						$author$project$ProfessorPage$TopicsPage$view(model.topicsModel));
				default:
					var _v4 = currentRoute.a;
					return $author$project$ProfessorPage$GroupsPage$view(
						$elm$core$Dict$values(model.groups));
			}
		} else {
			return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
		}
	});
var $author$project$RegistrationPage$Dissmis = {$: 'Dissmis'};
var $author$project$RegistrationPage$Email = function (a) {
	return {$: 'Email', a: a};
};
var $author$project$RegistrationPage$FirstName = function (a) {
	return {$: 'FirstName', a: a};
};
var $author$project$RegistrationPage$IndexNumber = function (a) {
	return {$: 'IndexNumber', a: a};
};
var $author$project$RegistrationPage$LastName = function (a) {
	return {$: 'LastName', a: a};
};
var $author$project$RegistrationPage$SubmittedForm = {$: 'SubmittedForm'};
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$loading = A2(
	$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$Attribute,
	$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$emptyEventsAndValues,
	function (config) {
		return _Utils_update(
			config,
			{loading: true});
	});
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Success = {$: 'Success'};
var $NoRedInk$noredink_ui$Nri$Ui$Message$V3$success = $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Attribute(
	function (config) {
		return _Utils_update(
			config,
			{theme: $NoRedInk$noredink_ui$Nri$Ui$Message$V3$Success});
	});
var $author$project$RegistrationPage$view = function (_v0) {
	var email = _v0.email;
	var firstName = _v0.firstName;
	var lastName = _v0.lastName;
	var indexNumber = _v0.indexNumber;
	var state = _v0.state;
	var dismissedMsg = _v0.dismissedMsg;
	var msgViewAttrs = function (text) {
		return _List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$large,
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$onDismiss($author$project$RegistrationPage$Dissmis),
				$NoRedInk$noredink_ui$Nri$Ui$Message$V3$plaintext(text)
			]);
	};
	var stateView = function () {
		var _v2 = _Utils_Tuple2(state, dismissedMsg);
		_v2$3:
		while (true) {
			switch (_v2.a.$) {
				case 'Loading':
					var _v3 = _v2.a;
					return $author$project$Util$loadingSpinner;
				case 'CreatedRequest':
					if (!_v2.b) {
						var msg = _v2.a.a;
						return $NoRedInk$noredink_ui$Nri$Ui$Message$V3$view(
							A2(
								$elm$core$List$cons,
								$NoRedInk$noredink_ui$Nri$Ui$Message$V3$success,
								msgViewAttrs(msg)));
					} else {
						break _v2$3;
					}
				case 'Error':
					if (!_v2.b) {
						var msg = _v2.a.a;
						return $NoRedInk$noredink_ui$Nri$Ui$Message$V3$view(
							A2(
								$elm$core$List$cons,
								$NoRedInk$noredink_ui$Nri$Ui$Message$V3$alert,
								msgViewAttrs(msg)));
					} else {
						break _v2$3;
					}
				default:
					break _v2$3;
			}
		}
		return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
	}();
	var addLoadingAttr = function (otherAttrs) {
		if (state.$ === 'Loading') {
			return A2($elm$core$List$cons, $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$loading, otherAttrs);
		} else {
			return otherAttrs;
		}
	};
	var textInputView = F4(
		function (label, type_, msg, val) {
			return A2(
				$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$view,
				label,
				addLoadingAttr(
					_List_fromArray(
						[
							type_(msg),
							$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$value(val)
						])));
		});
	return $NoRedInk$noredink_ui$Nri$Ui$Container$V2$view(
		_List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Container$V2$css(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$width(
						$rtfeldman$elm_css$Css$pct(33)),
						$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$auto)
					])),
				$NoRedInk$noredink_ui$Nri$Ui$Container$V2$html(
				_List_fromArray(
					[
						A2(
						$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h3,
						_List_fromArray(
							[
								$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$css(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$marginBottom(
										$rtfeldman$elm_css$Css$px(20))
									]))
							]),
						_List_fromArray(
							[
								$tesk9$accessible_html_with_css$Accessibility$Styled$text('Zahtev za registraciju korisnika')
							])),
						A4(textInputView, 'Email', $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$email, $author$project$RegistrationPage$Email, email),
						A4(textInputView, 'Ime', $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$text, $author$project$RegistrationPage$FirstName, firstName),
						A4(textInputView, 'Prezime', $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$text, $author$project$RegistrationPage$LastName, lastName),
						A4(textInputView, 'Broj indeksa', $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$text, $author$project$RegistrationPage$IndexNumber, indexNumber),
						A2(
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
						'Podnesi prijavu',
						_List_fromArray(
							[
								$NoRedInk$noredink_ui$Nri$Ui$Button$V10$primary,
								$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick($author$project$RegistrationPage$SubmittedForm),
								$NoRedInk$noredink_ui$Nri$Ui$Button$V10$css(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$marginTop(
										$rtfeldman$elm_css$Css$px(20))
									]))
							])),
						A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$div,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$Attributes$css(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$marginTop(
										$rtfeldman$elm_css$Css$px(20))
									]))
							]),
						_List_fromArray(
							[stateView]))
					]))
			]));
};
var $author$project$SetPasswordPage$ConfirmPassword = function (a) {
	return {$: 'ConfirmPassword', a: a};
};
var $author$project$SetPasswordPage$Email = function (a) {
	return {$: 'Email', a: a};
};
var $author$project$SetPasswordPage$Password = function (a) {
	return {$: 'Password', a: a};
};
var $author$project$SetPasswordPage$SetShowPassword1 = function (a) {
	return {$: 'SetShowPassword1', a: a};
};
var $author$project$SetPasswordPage$SetShowPassword2 = function (a) {
	return {$: 'SetShowPassword2', a: a};
};
var $author$project$SetPasswordPage$SubmittedForm = {$: 'SubmittedForm'};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$enabled = $NoRedInk$noredink_ui$Nri$Ui$Button$V10$set(
	function (attributes) {
		return _Utils_update(
			attributes,
			{state: $NoRedInk$noredink_ui$Nri$Ui$Button$V10$Enabled});
	});
var $rtfeldman$elm_css$Html$Styled$form = $rtfeldman$elm_css$Html$Styled$node('form');
var $tesk9$accessible_html_with_css$Accessibility$Styled$form = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$form(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$newPassword = $NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$password('new-password');
var $author$project$SetPasswordPage$formView = function (model) {
	var notValid = $elm$core$String$isEmpty(model.email) || ($elm$core$String$isEmpty(model.password) || ($elm$core$String$isEmpty(model.confirmPassword) || (!_Utils_eq(model.password, model.confirmPassword))));
	return $NoRedInk$noredink_ui$Nri$Ui$Container$V2$view(
		_List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Container$V2$css(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$width(
						$rtfeldman$elm_css$Css$pct(33)),
						$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$auto)
					])),
				$NoRedInk$noredink_ui$Nri$Ui$Container$V2$html(
				_List_fromArray(
					[
						A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$form,
						_List_Nil,
						_List_fromArray(
							[
								A2(
								$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h3,
								_List_fromArray(
									[
										$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$css(
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$marginBottom(
												$rtfeldman$elm_css$Css$px(20))
											]))
									]),
								_List_fromArray(
									[
										$tesk9$accessible_html_with_css$Accessibility$Styled$text('Podešavanje lozinke')
									])),
								A2(
								$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$view,
								'Email',
								_List_fromArray(
									[
										$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$email($author$project$SetPasswordPage$Email),
										$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$value(model.email)
									])),
								A2(
								$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$view,
								'Lozinka',
								_List_fromArray(
									[
										$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$newPassword(
										{onInput: $author$project$SetPasswordPage$Password, setShowPassword: $author$project$SetPasswordPage$SetShowPassword1, showPassword: model.showPassword1}),
										$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$value(model.password)
									])),
								A2(
								$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$view,
								'Potvrda lozinke',
								_List_fromArray(
									[
										$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$newPassword(
										{onInput: $author$project$SetPasswordPage$ConfirmPassword, setShowPassword: $author$project$SetPasswordPage$SetShowPassword2, showPassword: model.showPassword2}),
										$NoRedInk$noredink_ui$Nri$Ui$TextInput$V7$value(model.confirmPassword)
									])),
								A2(
								$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
								'Potvrdi',
								_List_fromArray(
									[
										notValid ? $NoRedInk$noredink_ui$Nri$Ui$Button$V10$disabled : $NoRedInk$noredink_ui$Nri$Ui$Button$V10$enabled,
										$NoRedInk$noredink_ui$Nri$Ui$Button$V10$primary,
										$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick($author$project$SetPasswordPage$SubmittedForm),
										$NoRedInk$noredink_ui$Nri$Ui$Button$V10$css(
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$marginTop(
												$rtfeldman$elm_css$Css$px(20))
											]))
									]))
							]))
					]))
			]));
};
var $author$project$SetPasswordPage$view = function (model) {
	return $author$project$SetPasswordPage$formView(model);
};
var $author$project$StudentPage$Focus = function (a) {
	return {$: 'Focus', a: a};
};
var $rtfeldman$elm_css$Css$Global$section = $rtfeldman$elm_css$Css$Global$typeSelector('section');
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryClass = 'accordion-v3-entry';
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryCollapsedClass = 'accordion-v3-entry-state-collapsed';
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryExpandedClass = 'accordion-v3-entry-state-expanded';
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryHeaderClass = 'accordion-v3-entry-header';
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryHeaderCollapsedClass = 'accordion-v3-entry-header-collapsed';
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryHeaderExpandedClass = 'accordion-v3-entry-header-expanded';
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryPanelClass = 'accordion-v3-entry-panel';
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionHeaderClass = 'accordion-v3-header';
var $rtfeldman$elm_css$Css$Global$global = function (snippets) {
	return $rtfeldman$elm_css$VirtualDom$Styled$unstyledNode(
		A3(
			$elm$virtual_dom$VirtualDom$node,
			'span',
			_List_fromArray(
				[
					A2($elm$virtual_dom$VirtualDom$attribute, 'style', 'display: none;'),
					A2($elm$virtual_dom$VirtualDom$attribute, 'class', 'elm-css-style-wrapper')
				]),
			$elm$core$List$singleton(
				A3(
					$elm$virtual_dom$VirtualDom$node,
					'style',
					_List_Nil,
					$elm$core$List$singleton(
						$elm$virtual_dom$VirtualDom$text(
							$rtfeldman$elm_css$Css$Preprocess$Resolve$compile(
								$rtfeldman$elm_css$Css$Preprocess$stylesheet(snippets))))))));
};
var $rtfeldman$elm_css$Css$initial = {alignItems: $rtfeldman$elm_css$Css$Structure$Compatible, all: $rtfeldman$elm_css$Css$Structure$Compatible, backgroundAttachment: $rtfeldman$elm_css$Css$Structure$Compatible, backgroundBlendMode: $rtfeldman$elm_css$Css$Structure$Compatible, backgroundImage: $rtfeldman$elm_css$Css$Structure$Compatible, backgroundOrigin: $rtfeldman$elm_css$Css$Structure$Compatible, backgroundRepeat: $rtfeldman$elm_css$Css$Structure$Compatible, backgroundRepeatShorthand: $rtfeldman$elm_css$Css$Structure$Compatible, borderStyle: $rtfeldman$elm_css$Css$Structure$Compatible, boxSizing: $rtfeldman$elm_css$Css$Structure$Compatible, color: $rtfeldman$elm_css$Css$Structure$Compatible, cursor: $rtfeldman$elm_css$Css$Structure$Compatible, display: $rtfeldman$elm_css$Css$Structure$Compatible, flexBasis: $rtfeldman$elm_css$Css$Structure$Compatible, flexDirection: $rtfeldman$elm_css$Css$Structure$Compatible, flexDirectionOrWrap: $rtfeldman$elm_css$Css$Structure$Compatible, flexWrap: $rtfeldman$elm_css$Css$Structure$Compatible, fontFamily: $rtfeldman$elm_css$Css$Structure$Compatible, fontSize: $rtfeldman$elm_css$Css$Structure$Compatible, fontStyle: $rtfeldman$elm_css$Css$Structure$Compatible, fontVariant: $rtfeldman$elm_css$Css$Structure$Compatible, fontWeight: $rtfeldman$elm_css$Css$Structure$Compatible, intOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible, justifyContent: $rtfeldman$elm_css$Css$Structure$Compatible, keyframes: $rtfeldman$elm_css$Css$Structure$Compatible, length: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrAuto: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrAutoOrCoverOrContain: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNone: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNoneOrMinMaxDimension: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNumber: $rtfeldman$elm_css$Css$Structure$Compatible, lengthOrNumberOrAutoOrNoneOrContent: $rtfeldman$elm_css$Css$Structure$Compatible, listStylePosition: $rtfeldman$elm_css$Css$Structure$Compatible, listStyleType: $rtfeldman$elm_css$Css$Structure$Compatible, listStyleTypeOrPositionOrImage: $rtfeldman$elm_css$Css$Structure$Compatible, none: $rtfeldman$elm_css$Css$Structure$Compatible, number: $rtfeldman$elm_css$Css$Structure$Compatible, numericValue: 0, outline: $rtfeldman$elm_css$Css$Structure$Compatible, overflow: $rtfeldman$elm_css$Css$Structure$Compatible, pointerEvents: $rtfeldman$elm_css$Css$Structure$Compatible, tableLayout: $rtfeldman$elm_css$Css$Structure$Compatible, textDecorationLine: $rtfeldman$elm_css$Css$Structure$Compatible, textDecorationStyle: $rtfeldman$elm_css$Css$Structure$Compatible, textIndent: $rtfeldman$elm_css$Css$Structure$Compatible, textRendering: $rtfeldman$elm_css$Css$Structure$Compatible, textTransform: $rtfeldman$elm_css$Css$Structure$Compatible, touchAction: $rtfeldman$elm_css$Css$Structure$Compatible, unitLabel: '', units: $rtfeldman$elm_css$Css$Internal$IncompatibleUnits, value: 'initial', visibility: $rtfeldman$elm_css$Css$Structure$Compatible, whiteSpace: $rtfeldman$elm_css$Css$Structure$Compatible};
var $rtfeldman$elm_css$Css$unset = _Utils_update(
	$rtfeldman$elm_css$Css$initial,
	{value: 'unset'});
var $rtfeldman$elm_css$Css$Structure$AttributeSelector = function (a) {
	return {$: 'AttributeSelector', a: a};
};
var $rtfeldman$elm_css$Css$Global$withAttribute = function (attribute) {
	return $rtfeldman$elm_css$Css$Preprocess$ExtendSelector(
		$rtfeldman$elm_css$Css$Structure$AttributeSelector(attribute));
};
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$styleAccordion = function (styleOptions) {
	return $rtfeldman$elm_css$Css$Global$global(
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Css$Global$class,
				$NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionHeaderClass,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$zero),
						$rtfeldman$elm_css$Css$padding($rtfeldman$elm_css$Css$zero)
					])),
				A2(
				$rtfeldman$elm_css$Css$Global$class,
				$NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryHeaderClass,
				_Utils_ap(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$displayFlex,
							$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
							$rtfeldman$elm_css$Css$boxSizing($rtfeldman$elm_css$Css$borderBox),
							$rtfeldman$elm_css$Css$minWidth(
							$rtfeldman$elm_css$Css$pct(100)),
							A2(
							$rtfeldman$elm_css$Css$Global$withAttribute,
							'aria-disabled=false',
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer)
								])),
							$rtfeldman$elm_css$Css$backgroundColor($rtfeldman$elm_css$Css$unset),
							$rtfeldman$elm_css$Css$borderWidth($rtfeldman$elm_css$Css$zero),
							$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$zero),
							$rtfeldman$elm_css$Css$textAlign($rtfeldman$elm_css$Css$left),
							$NoRedInk$noredink_ui$Nri$Ui$Fonts$V1$baseFont,
							$rtfeldman$elm_css$Css$fontSize(
							$rtfeldman$elm_css$Css$px(16)),
							$rtfeldman$elm_css$Css$fontWeight(
							$rtfeldman$elm_css$Css$int(600)),
							$rtfeldman$elm_css$Css$lineHeight(
							$rtfeldman$elm_css$Css$num(1.2)),
							A2($rtfeldman$elm_css$Css$Global$withClass, $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryHeaderExpandedClass, styleOptions.headerExpandedStyles),
							A2($rtfeldman$elm_css$Css$Global$withClass, $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryHeaderCollapsedClass, styleOptions.headerClosedStyles)
						]),
					styleOptions.headerStyles)),
				A2(
				$rtfeldman$elm_css$Css$Global$class,
				$NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryClass,
				_Utils_ap(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$marginBottom(
							$rtfeldman$elm_css$Css$px(10)),
							A2($rtfeldman$elm_css$Css$Global$withClass, $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryExpandedClass, styleOptions.entryExpandedStyles),
							A2($rtfeldman$elm_css$Css$Global$withClass, $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryCollapsedClass, styleOptions.entryClosedStyles)
						]),
					styleOptions.entryStyles)),
				A2($rtfeldman$elm_css$Css$Global$class, $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryPanelClass, styleOptions.contentStyles)
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$AccordionEntry = F2(
	function (a, b) {
		return {$: 'AccordionEntry', a: a, b: b};
	});
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$H4 = {$: 'H4'};
var $author$project$StudentPage$Toggle = F3(
	function (a, b, c) {
		return {$: 'Toggle', a: a, b: b, c: c};
	});
var $author$project$Util$isActiveAssignment = F2(
	function (_v0, currentTime) {
		var activity = _v0.activity;
		return _Utils_cmp(activity.endDate, currentTime) > 0;
	});
var $author$project$StudentPage$AssignmentContent$FilesContent$DismissModal = {$: 'DismissModal'};
var $author$project$StudentPage$AssignmentContent$FilesContent$DownloadFile = function (a) {
	return {$: 'DownloadFile', a: a};
};
var $author$project$StudentPage$AssignmentContent$FilesContent$Focus = function (a) {
	return {$: 'Focus', a: a};
};
var $author$project$StudentPage$AssignmentContent$FilesContent$OpenModal = F2(
	function (a, b) {
		return {$: 'OpenModal', a: a, b: b};
	});
var $author$project$StudentPage$AssignmentContent$FilesContent$SelectModalFile = function (a) {
	return {$: 'SelectModalFile', a: a};
};
var $author$project$StudentPage$AssignmentContent$FilesContent$UpdateFile = {$: 'UpdateFile'};
var $author$project$StudentPage$AssignmentContent$FilesContent$SelectedFiles = F2(
	function (a, b) {
		return {$: 'SelectedFiles', a: a, b: b};
	});
var $author$project$StudentPage$AssignmentContent$FilesContent$Upload = function (a) {
	return {$: 'Upload', a: a};
};
var $elm$core$Dict$sizeHelp = F2(
	function (n, dict) {
		sizeHelp:
		while (true) {
			if (dict.$ === 'RBEmpty_elm_builtin') {
				return n;
			} else {
				var left = dict.d;
				var right = dict.e;
				var $temp$n = A2($elm$core$Dict$sizeHelp, n + 1, right),
					$temp$dict = left;
				n = $temp$n;
				dict = $temp$dict;
				continue sizeHelp;
			}
		}
	});
var $elm$core$Dict$size = function (dict) {
	return A2($elm$core$Dict$sizeHelp, 0, dict);
};
var $author$project$StudentPage$AssignmentContent$FilesContent$uploadFilesView = F2(
	function (id, model) {
		return A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$div,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$displayFlex,
							$rtfeldman$elm_css$Css$flexDirection($rtfeldman$elm_css$Css$column),
							A2($rtfeldman$elm_css$Css$property, 'gap', '10px')
						]))
				]),
			_List_fromArray(
				[
					A2(
					$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h4,
					_List_Nil,
					_List_fromArray(
						[
							$tesk9$accessible_html_with_css$Accessibility$Styled$text('Otpremanje datoteka')
						])),
					A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$div,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$css(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$displayFlex,
									$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceAround)
								]))
						]),
					A2(
						$elm$core$List$map,
						function (_v0) {
							var name = _v0.name;
							var extension = _v0.extension;
							return A3(
								$author$project$Util$fileInpuView,
								A2(
									$elm$core$Maybe$map,
									$elm$file$File$name,
									A2(
										$elm$core$Dict$get,
										_Utils_ap(name, extension),
										model.selectedFiles)),
								extension,
								A2(
									$elm$json$Json$Decode$map,
									$author$project$StudentPage$AssignmentContent$FilesContent$SelectedFiles(
										_Utils_ap(name, extension)),
									$author$project$Util$filesDecoder));
						},
						model.fileUploadInfoList)),
					A2(
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
					'Otpremi',
					_List_fromArray(
						[
							$NoRedInk$noredink_ui$Nri$Ui$Button$V10$small,
							$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$documents),
							$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
							$author$project$StudentPage$AssignmentContent$FilesContent$Upload(id)),
							$NoRedInk$noredink_ui$Nri$Ui$Button$V10$css(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$width(
									$rtfeldman$elm_css$Css$px(150)),
									$rtfeldman$elm_css$Css$alignSelf($rtfeldman$elm_css$Css$center)
								])),
							_Utils_eq(
							$elm$core$Dict$size(model.selectedFiles),
							$elm$core$List$length(model.fileUploadInfoList)) ? $NoRedInk$noredink_ui$Nri$Ui$Button$V10$enabled : $NoRedInk$noredink_ui$Nri$Ui$Button$V10$disabled
						]))
				]));
	});
var $author$project$StudentPage$AssignmentContent$FilesContent$view = F3(
	function (_v0, isActive, model) {
		var id = _v0.id;
		var completed = _v0.completed;
		var uploadButtonId = 'modal-upload-btn';
		var modalFooter = model.updatingFile ? $author$project$Util$loadingSpinner : (model.hasProcessingErrorModal ? $author$project$Util$errorMessage($author$project$StudentPage$AssignmentContent$FilesContent$DismissModal) : A2(
			$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
			'Otpremi',
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$id(uploadButtonId),
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$primary,
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$documents),
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick($author$project$StudentPage$AssignmentContent$FilesContent$UpdateFile),
					function () {
					var _v5 = model.modalSelectedFile;
					if (_v5.$ === 'Nothing') {
						return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$disabled;
					} else {
						return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$enabled;
					}
				}()
				])));
		var fileExtensionFrom = function (fileName) {
			var _v3 = A2($elm$core$String$split, '.', fileName);
			if ((_v3.b && _v3.b.b) && (!_v3.b.b.b)) {
				var _v4 = _v3.b;
				var extension = _v4.a;
				return '.' + extension;
			} else {
				return '*';
			}
		};
		var _v1 = function () {
			var _v2 = model.modalFileInfo;
			if (_v2.$ === 'Nothing') {
				return _Utils_Tuple2(
					'',
					$tesk9$accessible_html_with_css$Accessibility$Styled$text(''));
			} else {
				var fileName = _v2.a.fileName;
				return _Utils_Tuple2(
					'Ponovno otpremanje - ' + fileName,
					A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$div,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$Attributes$css(
								_List_fromArray(
									[
										$rtfeldman$elm_css$Css$displayFlex,
										$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceAround)
									]))
							]),
						_List_fromArray(
							[
								A3(
								$author$project$Util$fileInpuView,
								A2($elm$core$Maybe$map, $elm$file$File$name, model.modalSelectedFile),
								fileExtensionFrom(fileName),
								A2($elm$json$Json$Decode$map, $author$project$StudentPage$AssignmentContent$FilesContent$SelectModalFile, $author$project$Util$filesDecoder))
							])));
			}
		}();
		var modalTitle = _v1.a;
		var modalContent = _v1.b;
		return A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$div,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$displayFlex,
							$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceAround)
						]))
				]),
			(model.loadingFiles || model.processingFiles) ? _List_fromArray(
				[$author$project$Util$loadingSpinner]) : _List_fromArray(
				[
					A2(
					$author$project$Util$displayIf,
					isActive && (!completed),
					A2($author$project$StudentPage$AssignmentContent$FilesContent$uploadFilesView, id, model)),
					A2(
					A2($elm$core$Basics$composeL, $author$project$Util$displayIf, $elm$core$Basics$not),
					$elm$core$List$isEmpty(model.files),
					A2(
						$author$project$Util$filesView,
						{
							downloadMsg: $author$project$StudentPage$AssignmentContent$FilesContent$DownloadFile,
							editAttached: false,
							editMsg: $author$project$StudentPage$AssignmentContent$FilesContent$OpenModal(
								{returnFocusTo: '', startFocusOn: $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$closeButtonId}),
							isActive: isActive
						},
						model.files)),
					A3(
					$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$view,
					{
						content: _List_fromArray(
							[modalContent]),
						focusTrap: {firstId: $NoRedInk$noredink_ui$Nri$Ui$Modal$V11$closeButtonId, focus: $author$project$StudentPage$AssignmentContent$FilesContent$Focus, lastId: uploadButtonId},
						footer: _List_fromArray(
							[modalFooter]),
						title: modalTitle,
						wrapMsg: $author$project$StudentPage$AssignmentContent$FilesContent$ModalMsg
					},
					_List_fromArray(
						[$NoRedInk$noredink_ui$Nri$Ui$Modal$V11$closeButton]),
					model.modalState)
				]));
	});
var $author$project$StudentPage$AssignmentContent$GroupContent$Add = {$: 'Add'};
var $author$project$StudentPage$AssignmentContent$GroupContent$Remove = {$: 'Remove'};
var $author$project$StudentPage$AssignmentContent$GroupContent$SubmitGroup = function (a) {
	return {$: 'SubmitGroup', a: a};
};
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$class = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 21 21')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M2.66 20.576v-7.1l.002-.063V10.878l-.847 1.65c-.25.487-.834.689-1.304.447-.47-.24-.648-.833-.398-1.32l1.66-3.236c.03-.056.062-.109.099-.156.149-.432.56-.744 1.044-.744h2.95l-1.487 2.896c-.485.949-.16 2.151.823 2.657a1.92 1.92 0 0 0 1.85-.053l.037-.024v7.581H5.153v-6.095H4.65v6.095H2.66zm5.32 0v-7.743l.001-.072V9.968l-.933 1.817c-.276.54-.92.76-1.439.495-.518-.266-.713-.92-.438-1.457l1.83-3.566c.032-.062.068-.119.109-.172.164-.477.618-.82 1.15-.82h4.385c.534 0 .987.343 1.15.82.04.053.077.11.11.172l1.829 3.566c.277.538.08 1.191-.438 1.457-.519.265-1.162.044-1.438-.495l-.933-1.816v2.751c0 .037-.001.071-.005.106v7.75h-2.207v-6.638h-.527v6.638H7.98zm5.831 0V12.99l.043.03a1.92 1.92 0 0 0 1.85.052c.984-.506 1.308-1.708.822-2.657L15.04 7.52h2.949c.484 0 .895.312 1.044.744.036.049.07.1.099.156l1.66 3.235c.25.488.072 1.08-.398 1.321-.47.242-1.054.04-1.305-.448l-.846-1.649v2.497c0 .032-.001.064-.004.097V20.577h-1.99V14.48h-.502v6.095H13.81zM10.491 1a2.182 2.182 0 0 0 .001 4.363A2.182 2.182 0 0 0 10.494 1h-.004zM2.961 4.722a1.978 1.978 0 1 1 3.957 0 1.978 1.978 0 0 1-3.957 0zm11.096 0a1.978 1.978 0 1 1 3.957 0 1.978 1.978 0 0 1-3.957 0z')
					]),
				_List_Nil)
			])));
var $author$project$StudentPage$AssignmentContent$GroupContent$AddStudent = function (a) {
	return {$: 'AddStudent', a: a};
};
var $author$project$StudentPage$AssignmentContent$GroupContent$RemoveStudent = function (a) {
	return {$: 'RemoveStudent', a: a};
};
var $author$project$StudentPage$AssignmentContent$GroupContent$studentColumns = F2(
	function (currStudId, action) {
		var removeBtn = function (_v2) {
			var id = _v2.id;
			return (!_Utils_eq(id, currStudId)) ? A2(
				$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
				'',
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$small,
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$secondary,
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$x),
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
						$author$project$StudentPage$AssignmentContent$GroupContent$RemoveStudent(id))
					])) : $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
		};
		var addBtn = function (student) {
			return A2(
				$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
				'',
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$small,
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$secondary,
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$plus),
						$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
						$author$project$StudentPage$AssignmentContent$GroupContent$AddStudent(student))
					]));
		};
		var _v0 = function () {
			if (action.$ === 'Add') {
				return _Utils_Tuple2(
					'Studenti bez grupe',
					_List_fromArray(
						[
							$NoRedInk$noredink_ui$Nri$Ui$Table$V5$custom(
							{
								cellStyles: $elm$core$Basics$always(_List_Nil),
								header: $tesk9$accessible_html_with_css$Accessibility$Styled$text(''),
								view: addBtn,
								width: $rtfeldman$elm_css$Css$px(100)
							})
						]));
			} else {
				return _Utils_Tuple2(
					'Moja grupa',
					_List_fromArray(
						[
							$NoRedInk$noredink_ui$Nri$Ui$Table$V5$custom(
							{
								cellStyles: $elm$core$Basics$always(_List_Nil),
								header: $tesk9$accessible_html_with_css$Accessibility$Styled$text(''),
								view: removeBtn,
								width: $rtfeldman$elm_css$Css$px(100)
							})
						]));
			}
		}();
		var tableHeader = _v0.a;
		var actionBtn = _v0.b;
		return A2(
			$elm$core$List$cons,
			$NoRedInk$noredink_ui$Nri$Ui$Table$V5$string(
				{
					cellStyles: $elm$core$Basics$always(_List_Nil),
					header: tableHeader,
					value: $author$project$Student$toString(true),
					width: $rtfeldman$elm_css$Css$px(300)
				}),
			actionBtn);
	});
var $author$project$StudentPage$AssignmentContent$GroupContent$studentSelectionView = F4(
	function (semesterId, currStudId, allStudents, _v0) {
		var selectedStudents = _v0.selectedStudents;
		var tableWrapper = A2(
			$elm$core$Basics$composeL,
			$tesk9$accessible_html_with_css$Accessibility$Styled$div(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$margin(
								$rtfeldman$elm_css$Css$px(5))
							]))
					])),
			$elm$core$List$singleton);
		var sumbitBtn = A2(
			$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
			'Prijavi grupu',
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$class),
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
					$author$project$StudentPage$AssignmentContent$GroupContent$SubmitGroup(semesterId))
				]));
		var studentsWithouthGroup = A2(
			$elm$core$List$filter,
			function (_v1) {
				var id = _v1.id;
				var groupId = _v1.groupId;
				return (!A2($elm$core$Maybe$withDefault, 0, groupId)) && (!A2($elm$core$Dict$member, id, selectedStudents));
			},
			allStudents);
		return A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$div,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$css(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$displayFlex,
									$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceBetween)
								]))
						]),
					_List_fromArray(
						[
							tableWrapper(
							A2(
								$NoRedInk$noredink_ui$Nri$Ui$Table$V5$view,
								A2($author$project$StudentPage$AssignmentContent$GroupContent$studentColumns, currStudId, $author$project$StudentPage$AssignmentContent$GroupContent$Add),
								studentsWithouthGroup)),
							tableWrapper(
							A2(
								$NoRedInk$noredink_ui$Nri$Ui$Table$V5$view,
								A2($author$project$StudentPage$AssignmentContent$GroupContent$studentColumns, currStudId, $author$project$StudentPage$AssignmentContent$GroupContent$Remove),
								$elm$core$Dict$values(selectedStudents)))
						])),
					A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$div,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$css(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$displayFlex,
									$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$right)
								]))
						]),
					_List_fromArray(
						[sumbitBtn]))
				]));
	});
var $author$project$StudentPage$AssignmentContent$GroupContent$view = F3(
	function (assignment, _v0, model) {
		var loadingStudents = _v0.loadingStudents;
		var loadingGroup = _v0.loadingGroup;
		var group = _v0.group;
		var students = _v0.students;
		var studentId = _v0.studentId;
		var semesterId = _v0.semesterId;
		var currentTimeSec = _v0.currentTimeSec;
		var mainView = function () {
			if (group.$ === 'Just') {
				var group_ = group.a;
				return $author$project$Group$view(group_);
			} else {
				return A2($author$project$Util$isActiveAssignment, assignment, currentTimeSec) ? A4($author$project$StudentPage$AssignmentContent$GroupContent$studentSelectionView, semesterId, studentId, students, model) : $tesk9$accessible_html_with_css$Accessibility$Styled$text('Jos uvek niste rasporedjeni u grupu');
			}
		}();
		return (loadingStudents || (loadingGroup || model.processingRequest)) ? $author$project$Util$loadingSpinner : mainView;
	});
var $author$project$StudentPage$AssignmentContent$SignupContent$UpdateSignup = F2(
	function (a, b) {
		return {$: 'UpdateSignup', a: a, b: b};
	});
var $author$project$StudentPage$AssignmentContent$SignupContent$view = F2(
	function (_v0, model) {
		var id = _v0.id;
		var _v1 = model.isSignedUp ? _Utils_Tuple3(
			'Prijavljani ste za ovu aktivnost',
			'Odjavi se',
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$danger,
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
					A2($author$project$StudentPage$AssignmentContent$SignupContent$UpdateSignup, id, false))
				])) : _Utils_Tuple3(
			'Trenutno niste prijavljeni za ovu aktivnost',
			'Prijavi se',
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$primary,
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
					A2($author$project$StudentPage$AssignmentContent$SignupContent$UpdateSignup, id, true))
				]));
		var headingText = _v1.a;
		var buttonText = _v1.b;
		var buttonArgs = _v1.c;
		return model.processingRequest ? $author$project$Util$loadingSpinner : A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$div,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Svg$Styled$Attributes$css(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$displayFlex,
							$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceAround)
						]))
				]),
			_List_fromArray(
				[
					A2(
					$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h5,
					_List_Nil,
					_List_fromArray(
						[
							$tesk9$accessible_html_with_css$Accessibility$Styled$text(headingText)
						])),
					A2($NoRedInk$noredink_ui$Nri$Ui$Button$V10$button, buttonText, buttonArgs)
				]));
	});
var $author$project$StudentPage$AssignmentContent$TopicContent$Dismiss = {$: 'Dismiss'};
var $author$project$StudentPage$AssignmentContent$TopicContent$SelectTopic = F2(
	function (a, b) {
		return {$: 'SelectTopic', a: a, b: b};
	});
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$archive = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 25 24')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$g,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$stroke('none'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$strokeWidth('1'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$fillRule('evenodd')
					]),
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('M0.857503203,22.0742086 C0.883930262,22.308469 0.962196617,22.5345115 1.08620552,22.734862 C1.21427892,22.9403547 1.3779284,23.1201493 1.57004241,23.2660525 C1.77231506,23.4201727 1.99795989,23.5403935 2.23886351,23.6205389 C2.48992578,23.7058187 2.75421199,23.75 3.01949741,23.75 L21.9732885,23.75 C22.2385739,23.75 22.5018297,23.7058187 22.7539224,23.6205389 C22.9958382,23.5403961 23.2235257,23.4201832 23.4278176,23.2660525 C23.6189116,23.1211804 23.7835785,22.943419 23.9116545,22.7399911 C24.0356608,22.5396354 24.1139272,22.3146187 24.1403568,22.0793377 L24.989088,14.3835859 C25.0185648,14.1236379 24.9880706,13.860602 24.9006578,13.6150365 C24.8142599,13.3766649 24.6780549,13.1598619 24.5001666,12.9810799 C24.3131397,12.7940809 24.0915568,12.6471625 23.8465939,12.5495518 C23.5792788,12.4426956 23.2936449,12.3882403 23.0059813,12.3892519 L1.99912121,12.3892519 C1.71145762,12.3882377 1.42686452,12.442693 1.15952343,12.5495518 C0.914557913,12.6471599 0.691949748,12.7940888 0.505950711,12.9810799 C0.328072868,13.1598593 0.190860848,13.3766518 0.105459499,13.6150365 C0.0149944385,13.8605993 -0.017531974,14.1236326 0.00889768776,14.3835859 L0.857503203,22.0742086 Z M7.18480117,16.8740919 C7.23460822,16.7600445 7.30779264,16.6583252 7.3982551,16.5740791 C7.49481691,16.4846908 7.60662711,16.4158504 7.72960817,16.3685864 C7.86174607,16.3182397 8.00100856,16.2925548 8.1432921,16.2925548 C8.28559645,16.2935806 8.42791122,16.3192681 8.56207616,16.3685864 C8.68811731,16.4158504 8.80500683,16.4857166 8.90766279,16.5740791 C9.00727428,16.6573047 9.08960773,16.7590213 9.14957863,16.8740919 C9.20751728,16.9871136 9.24004369,17.1124635 9.24309337,17.2398624 L9.28476881,18.6156444 L15.7117277,18.6156444 L15.7534031,17.2398624 L15.7544206,17.2398624 C15.7574703,17.1124556 15.7879644,16.9871057 15.8448856,16.8740919 C15.9048565,16.759016 15.9861726,16.6572968 16.0847692,16.5740791 C16.186413,16.4857166 16.3043225,16.4158504 16.4303559,16.3685864 C16.564526,16.3192681 16.7068304,16.2935806 16.8491399,16.2925548 C16.9904269,16.2925548 17.1306885,16.3182397 17.2628238,16.3685864 C17.3847979,16.4158504 17.4976229,16.4846908 17.5931621,16.5740791 C17.6856594,16.6573047 17.7588438,16.7600497 17.8096657,16.8740919 C17.8584553,16.9891679 17.8808179,17.1145178 17.8747185,17.2398624 L17.7629083,19.5228899 C17.7557916,19.645157 17.7222503,19.7653726 17.6643117,19.8722209 C17.6043408,19.9821598 17.525057,20.0777136 17.4295126,20.1568201 C17.3299011,20.2390172 17.2160587,20.3027206 17.0940742,20.3458734 C16.964986,20.3931374 16.827774,20.4167681 16.6905385,20.4167681 L8.30678806,20.4167681 C8.16956823,20.4167681 8.0323432,20.3931348 7.90325238,20.3458734 C7.77721123,20.3068291 7.65930428,20.2451826 7.55462128,20.1650398 C7.45907429,20.0859255 7.37979051,19.9893432 7.32083704,19.8804406 C7.26188356,19.772556 7.22833972,19.6533715 7.22122555,19.5311096 L7.10941535,17.2480821 C7.10535085,17.118621 7.13076309,16.9912169 7.18463203,16.8740788 L7.18480117,16.8740919 Z M18.6340984,2.18645837 L16.4517843,2.18645837 L16.5168371,1.22371345 C16.5422493,0.839451916 16.4853281,0.453112443 16.3501405,0.0924710683 C16.3501405,0.0606206824 16.3237135,0.0318503859 16.3115148,2.98427949e-13 L19.8051117,0.00102581968 C20.3926167,0.00102581968 20.8937317,0.428450686 20.9923257,1.01308899 L22.6084721,10.561366 L20.1750801,10.561366 L18.8170894,2.3571758 C18.8018436,2.26367629 18.7215424,2.19483589 18.6270128,2.19483589 L18.6340984,2.18645837 Z M8.93316089,0.0822128715 L8.93417832,0.0822128715 C8.79797332,0.444905886 8.7410521,0.833296998 8.76748176,1.22063599 L8.83253458,2.18338091 L6.64920565,2.18338091 C6.55467609,2.18338091 6.47437488,2.25324712 6.4591291,2.34674664 L5.10113837,10.561195 L2.66774638,10.561195 L4.28389274,1.01607176 C4.3824894,0.430407634 4.88563137,0.00195694831 5.47313644,0.00298092987 L8.96569251,0.00298092987 C8.95247898,0.0399701432 8.93621577,0.0605207308 8.92605192,0.0923711167 L8.93316089,0.0822128715 Z M8.79492364,6.48753616 L8.79594107,6.48753616 C8.75935015,6.40431062 8.73800242,6.31492227 8.73088824,6.22450547 C8.72580632,6.12997751 8.73800242,6.03545217 8.76747916,5.94503537 C8.79898814,5.84948158 8.84879519,5.76009323 8.91283059,5.68200468 C8.95958795,5.62446672 9.01447432,5.5730942 9.07444522,5.52994138 C9.1374658,5.48473167 9.2055683,5.44774429 9.2777353,5.41897399 C9.35091973,5.38917788 9.42816866,5.3655472 9.50643761,5.35116205 C9.58673622,5.33574846 9.66906968,5.32752875 9.75140313,5.32752875 L10.9111649,5.32752875 L10.779027,1.23214095 C10.7749599,1.10267988 10.7973225,0.974247252 10.8461121,0.856085977 C10.8949017,0.738955782 10.9650364,0.633125385 11.0544841,0.545788675 C11.1469814,0.455371877 11.2557419,0.383448766 11.3746741,0.335158962 C11.5007126,0.282757988 11.6359002,0.256044592 11.7731096,0.256044592 L13.5030984,0.256044592 C13.6393034,0.256044592 13.7744988,0.282757988 13.901534,0.335158962 C14.0204583,0.383448766 14.1292189,0.455371877 14.221724,0.545788675 C14.3111716,0.633122754 14.3813064,0.738953151 14.430096,0.856085977 C14.4788856,0.974244622 14.5012482,1.10267725 14.4971811,1.23214095 L14.3640257,5.32963299 L15.5766624,5.32963299 C15.6722094,5.32963299 15.766739,5.34093542 15.8582111,5.36354028 C15.9486761,5.38511668 16.0360889,5.41902397 16.1184224,5.46423105 C16.1946565,5.5053296 16.2647912,5.55773057 16.3267944,5.61937708 C16.3857478,5.67896931 16.4365697,5.74883815 16.4751955,5.82384135 C16.5077219,5.88754475 16.5310993,5.95432824 16.5453302,6.02419708 C16.5514296,6.05913019 16.5565115,6.0940633 16.5585437,6.12899903 C16.560576,6.16393214 16.560576,6.19989369 16.5585437,6.2348268 C16.5544766,6.28106233 16.546345,6.32627205 16.5351664,6.37147913 C16.5229677,6.41668885 16.5067045,6.46086748 16.4873942,6.50299447 C16.4690961,6.54614729 16.4457187,6.58724583 16.4203091,6.62629011 C16.3928646,6.66738865 16.3623704,6.70643293 16.3288292,6.74239448 L13.4126412,9.96662465 C13.3669012,10.0179972 13.3150619,10.0632069 13.2591581,10.1012227 C13.2012195,10.1412928 13.1392163,10.1741716 13.0741635,10.2008877 C13.0070784,10.2286295 12.9369437,10.2502059 12.8657915,10.2645911 C12.7184052,10.2933614 12.56595,10.2933614 12.4185403,10.2645911 C12.3463733,10.2502059 12.2752212,10.2286295 12.2071187,10.2008877 C12.1420658,10.1741743 12.0790453,10.1412954 12.0200918,10.1012227 C11.9631706,10.0632069 11.9103138,10.0179972 11.8635591,9.96662465 L8.95231505,6.75054844 C8.88421255,6.6755426 8.82830875,6.5902628 8.78765074,6.49779173 L8.79492364,6.48753616 Z')
							]),
						_List_Nil)
					]))
			])));
var $author$project$StudentPage$AssignmentContent$TopicContent$view = F3(
	function (_v0, _v1, model) {
		var loading = _v1.loading;
		var topic = _v1.topic;
		var topics = _v1.topics;
		var groupId = _v1.groupId;
		var topicView = F2(
			function (groupId_, t) {
				return $NoRedInk$noredink_ui$Nri$Ui$Container$V2$view(
					_List_fromArray(
						[
							$NoRedInk$noredink_ui$Nri$Ui$Container$V2$css(
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$marginBottom(
									$rtfeldman$elm_css$Css$px(2))
								])),
							$NoRedInk$noredink_ui$Nri$Ui$Container$V2$html(
							_List_fromArray(
								[
									A2(
									$tesk9$accessible_html_with_css$Accessibility$Styled$div,
									_List_fromArray(
										[
											$rtfeldman$elm_css$Html$Styled$Attributes$css(
											_List_fromArray(
												[
													$rtfeldman$elm_css$Css$displayFlex,
													$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceBetween),
													$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center)
												]))
										]),
									_List_fromArray(
										[
											A2(
											$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h5,
											_List_Nil,
											_List_fromArray(
												[
													$tesk9$accessible_html_with_css$Accessibility$Styled$text(t.title)
												])),
											A2(
											$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
											'Odaberi',
											_List_fromArray(
												[
													$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick(
													A2($author$project$StudentPage$AssignmentContent$TopicContent$SelectTopic, t, groupId_)),
													$NoRedInk$noredink_ui$Nri$Ui$Button$V10$small,
													$NoRedInk$noredink_ui$Nri$Ui$Button$V10$secondary,
													$NoRedInk$noredink_ui$Nri$Ui$Button$V10$icon($NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$archive)
												]))
										]))
								]))
						]));
			});
		var errorMsgView = function (textMsg) {
			return $NoRedInk$noredink_ui$Nri$Ui$Message$V3$view(
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$Message$V3$alert,
						$NoRedInk$noredink_ui$Nri$Ui$Message$V3$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$marginBottom(
								$rtfeldman$elm_css$Css$px(10))
							])),
						$NoRedInk$noredink_ui$Nri$Ui$Message$V3$large,
						$NoRedInk$noredink_ui$Nri$Ui$Message$V3$onDismiss($author$project$StudentPage$AssignmentContent$TopicContent$Dismiss),
						$NoRedInk$noredink_ui$Nri$Ui$Message$V3$plaintext(textMsg)
					]));
		};
		var errorView = function () {
			var _v4 = model.processingError;
			if (_v4.$ === 'Just') {
				if (_v4.a.$ === 'ReservedTopic') {
					var _v5 = _v4.a;
					return errorMsgView('Temu je u međuvremenu uzeo drugi tim 😞. Probajte sa nekom drugom...');
				} else {
					var _v6 = _v4.a;
					return errorMsgView('Došlo je do neočekivane greške 😞');
				}
			} else {
				return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
			}
		}();
		if (groupId.$ === 'Just') {
			var id = groupId.a;
			if (loading || model.processingRequest) {
				return A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$div,
					_List_Nil,
					_List_fromArray(
						[$author$project$Util$loadingSpinner]));
			} else {
				if (topic.$ === 'Just') {
					var title = topic.a.title;
					return $tesk9$accessible_html_with_css$Accessibility$Styled$text(title);
				} else {
					return A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$div,
						_List_Nil,
						_List_fromArray(
							[
								A2(
								$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h3,
								_List_fromArray(
									[
										$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$css(
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$marginBottom(
												$rtfeldman$elm_css$Css$px(20))
											]))
									]),
								_List_fromArray(
									[
										$tesk9$accessible_html_with_css$Accessibility$Styled$text('Dostupne teme')
									])),
								errorView,
								A2(
								$tesk9$accessible_html_with_css$Accessibility$Styled$div,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Html$Styled$Attributes$css(
										_List_fromArray(
											[
												$rtfeldman$elm_css$Css$displayFlex,
												$rtfeldman$elm_css$Css$flexDirection($rtfeldman$elm_css$Css$column)
											]))
									]),
								A2(
									$elm$core$List$map,
									topicView(id),
									topics))
							]));
				}
			}
		} else {
			return $tesk9$accessible_html_with_css$Accessibility$Styled$text('Ne možete izabrati temu ukoliko nemate grupu');
		}
	});
var $author$project$StudentPage$AssignmentContent$view = F2(
	function (index, model) {
		var _v0 = _Utils_Tuple2(
			A2($elm$core$Array$get, index, model.assignments),
			A2($elm$core$Array$get, index, model.assignmentsModels));
		if ((_v0.a.$ === 'Just') && (_v0.b.$ === 'Just')) {
			var assignment = _v0.a.a;
			var assignmentModel = _v0.b.a;
			var isActive = A2($author$project$Util$isActiveAssignment, assignment, model.currentTimeSec);
			switch (assignmentModel.$) {
				case 'Files':
					var filesModel = assignmentModel.a;
					return A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$map,
						$author$project$StudentPage$AssignmentContent$GotFilesMsg,
						A3($author$project$StudentPage$AssignmentContent$FilesContent$view, assignment, isActive, filesModel));
				case 'Group':
					var groupModel = assignmentModel.a;
					return A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$map,
						$author$project$StudentPage$AssignmentContent$GotGroupMsg,
						A3($author$project$StudentPage$AssignmentContent$GroupContent$view, assignment, model, groupModel));
				case 'Topic':
					var topicModel = assignmentModel.a;
					return A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$map,
						$author$project$StudentPage$AssignmentContent$GotTopicsMsg,
						A3(
							$author$project$StudentPage$AssignmentContent$TopicContent$view,
							assignment,
							{
								groupId: model.groupId,
								loading: model.loadingGroup || model.loadingTopics,
								topic: A2(
									$elm$core$Maybe$andThen,
									function ($) {
										return $.topic;
									},
									model.group),
								topics: model.topics
							},
							topicModel));
				case 'Signup':
					var signupModel = assignmentModel.a;
					return A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$map,
						$author$project$StudentPage$AssignmentContent$GotSignupMsg,
						A2($author$project$StudentPage$AssignmentContent$SignupContent$view, assignment, signupModel));
				default:
					return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
			}
		} else {
			return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
		}
	});
var $author$project$StudentPage$contentView = F2(
	function (studActIndex, model) {
		return A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$map,
			$author$project$StudentPage$GotAssignmentContentMsg(studActIndex),
			A2($author$project$StudentPage$AssignmentContent$view, studActIndex, model));
	});
var $tesk9$accessible_html_with_css$Accessibility$Styled$h2 = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$h2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$h4 = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$h4(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $elm$svg$Svg$Attributes$fillRule = _VirtualDom_attribute('fill-rule');
var $NoRedInk$noredink_ui$Nri$Ui$SpriteSheet$arrowLeft = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	$rtfeldman$elm_css$Html$Styled$fromUnstyled(
		A2(
			$elm$svg$Svg$svg,
			_List_fromArray(
				[
					$elm$svg$Svg$Attributes$viewBox('0 0 25 25'),
					$elm$svg$Svg$Attributes$width('100%'),
					$elm$svg$Svg$Attributes$height('100%'),
					$elm$svg$Svg$Attributes$fill('currentcolor')
				]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$path,
					_List_fromArray(
						[
							$elm$svg$Svg$Attributes$fillRule('evenodd'),
							$elm$svg$Svg$Attributes$d('M19.2677026,20.7322696 C20.2443584,21.7070736 20.2443584,23.2915005 19.2677026,24.2677859 C18.7788191,24.7555583 18.139567,25 17.4999444,25 C16.8603219,25 16.2210698,24.7555583 15.7321863,24.2677859 L5.73229742,14.267897 C4.7556416,13.293093 4.7556416,11.7086662 5.73229742,10.7323808 L15.7321863,0.732491861 C16.7084718,-0.244163954 18.2914171,-0.244163954 19.2677026,0.732491861 C20.2443584,1.70729584 20.2443584,3.29172268 19.2677026,4.26800813 L11.0359422,12.5001389 L19.2677026,20.7322696 Z')
						]),
					_List_Nil)
				]))));
var $NoRedInk$noredink_ui$Nri$Ui$DisclosureIndicator$V2$view = function (_v0) {
	var styles = _v0.styles;
	var size = _v0.size;
	var isOpen = _v0.isOpen;
	return A2(
		$rtfeldman$elm_css$Html$Styled$div,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$css(
				_Utils_ap(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$display($rtfeldman$elm_css$Css$inlineBlock),
							$rtfeldman$elm_css$Css$cursor($rtfeldman$elm_css$Css$pointer),
							$rtfeldman$elm_css$Css$minWidth(size),
							$rtfeldman$elm_css$Css$minHeight(size),
							$rtfeldman$elm_css$Css$maxWidth(size),
							$rtfeldman$elm_css$Css$maxHeight(size)
						]),
					styles))
			]),
		_List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
				A2(
					$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withCss,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$displayFlex,
							$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center),
							$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
							$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$azure),
							A2($rtfeldman$elm_css$Css$property, 'transition', 'transform 0.1s'),
							isOpen ? $rtfeldman$elm_css$Css$transform(
							$rtfeldman$elm_css$Css$rotate(
								$rtfeldman$elm_css$Css$deg(-90))) : $rtfeldman$elm_css$Css$transform(
							$rtfeldman$elm_css$Css$rotate(
								$rtfeldman$elm_css$Css$deg(-180)))
						]),
					$NoRedInk$noredink_ui$Nri$Ui$SpriteSheet$arrowLeft))
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$DisclosureIndicator$V2$large = F2(
	function (styles, isOpen) {
		return $NoRedInk$noredink_ui$Nri$Ui$DisclosureIndicator$V2$view(
			{
				isOpen: isOpen,
				size: $rtfeldman$elm_css$Css$px(17),
				styles: styles
			});
	});
var $elm$core$Set$member = F2(
	function (key, _v0) {
		var dict = _v0.a;
		return A2($elm$core$Dict$member, key, dict);
	});
var $author$project$StudentPage$toAccordionEntry = F3(
	function (model, arrIndex, assignment) {
		var displayDate = A2($author$project$Util$dateView, $author$project$Util$DisplayMode, model.zone);
		return A2(
			$NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$AccordionEntry,
			{
				caret: $NoRedInk$noredink_ui$Nri$Ui$DisclosureIndicator$V2$large(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$marginRight(
							$rtfeldman$elm_css$Css$px(8))
						])),
				content: function (_v0) {
					return A2($author$project$StudentPage$contentView, arrIndex, model);
				},
				entryClass: 'fixed-positioning-accordion-example',
				headerContent: A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$div,
					_List_Nil,
					_List_fromArray(
						[
							A2(
							$tesk9$accessible_html_with_css$Accessibility$Styled$h2,
							_List_Nil,
							_List_fromArray(
								[
									$tesk9$accessible_html_with_css$Accessibility$Styled$text(
									_Utils_ap(
										assignment.activityType.name,
										assignment.activity.isSignup ? ' - Prijava' : ''))
								])),
							A2(
							$tesk9$accessible_html_with_css$Accessibility$Styled$h4,
							_List_Nil,
							_List_fromArray(
								[
									$tesk9$accessible_html_with_css$Accessibility$Styled$text(assignment.activityType.description)
								])),
							A2(
							$tesk9$accessible_html_with_css$Accessibility$Styled$div,
							_List_Nil,
							_List_fromArray(
								[
									A2(
									$tesk9$accessible_html_with_css$Accessibility$Styled$span,
									_List_Nil,
									_List_fromArray(
										[
											$tesk9$accessible_html_with_css$Accessibility$Styled$text(
											displayDate(assignment.activity.startDate) + (' - ' + displayDate(assignment.activity.endDate)))
										])),
									function () {
									var _v1 = assignment.grade;
									if (_v1.$ === 'Just') {
										var g = _v1.a;
										return A2(
											$tesk9$accessible_html_with_css$Accessibility$Styled$span,
											_List_fromArray(
												[
													$rtfeldman$elm_css$Html$Styled$Attributes$css(
													_List_fromArray(
														[
															$rtfeldman$elm_css$Css$marginLeft(
															$rtfeldman$elm_css$Css$px(20))
														]))
												]),
											_List_fromArray(
												[
													$tesk9$accessible_html_with_css$Accessibility$Styled$text(
													'Ocena: ' + $elm$core$String$fromInt(g))
												]));
									} else {
										return $author$project$Util$emptyHtmlNode;
									}
								}()
								]))
						])),
				headerId: 'accordion-entry-' + $elm$core$String$fromInt(assignment.id),
				headerLevel: $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$H4,
				isExpanded: A2($elm$core$Set$member, assignment.id, model.assignmentsState),
				toggle: $elm$core$Maybe$Just(
					A2($author$project$StudentPage$Toggle, arrIndex, assignment))
			},
			_List_Nil);
	});
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionClass = 'accordion-v3';
var $rtfeldman$elm_css$Html$Styled$Attributes$classList = function (classes) {
	return $rtfeldman$elm_css$Html$Styled$Attributes$class(
		A3(
			$rtfeldman$elm_css$Css$String$mapJoin,
			$elm$core$Tuple$first,
			' ',
			A2($elm$core$List$filter, $elm$core$Tuple$second, classes)));
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Key$forKeyCode = F3(
	function (key, msg, keyCode) {
		return _Utils_eq(keyCode, key) ? $elm$json$Json$Decode$succeed(msg) : $elm$json$Json$Decode$fail(
			$elm$core$String$fromInt(keyCode));
	});
var $tesk9$accessible_html_with_css$Accessibility$Styled$Key$succeedForKeyCode = F2(
	function (key, msg) {
		return A2(
			$elm$json$Json$Decode$andThen,
			A2($tesk9$accessible_html_with_css$Accessibility$Styled$Key$forKeyCode, key, msg),
			$rtfeldman$elm_css$Html$Styled$Events$keyCode);
	});
var $tesk9$accessible_html_with_css$Accessibility$Styled$Key$down = function (msg) {
	return A2($tesk9$accessible_html_with_css$Accessibility$Styled$Key$succeedForKeyCode, 40, msg);
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Widget$expanded = A2(
	$elm$core$Basics$composeL,
	$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$aria('expanded'),
	$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$toBoolString);
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$getHeaderId = function (entry) {
	var headerId = entry.a.headerId;
	return headerId;
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$h3 = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$h3(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$h5 = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$h5(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $rtfeldman$elm_css$Html$Styled$h6 = $rtfeldman$elm_css$Html$Styled$node('h6');
var $tesk9$accessible_html_with_css$Accessibility$Styled$h6 = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$h6(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$header = F2(
	function (headerLevel, content) {
		switch (headerLevel.$) {
			case 'H1':
				return A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$h1,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$class($NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionHeaderClass)
						]),
					_List_fromArray(
						[content]));
			case 'H2':
				return A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$h2,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$class($NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionHeaderClass)
						]),
					_List_fromArray(
						[content]));
			case 'H3':
				return A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$h3,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$class($NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionHeaderClass)
						]),
					_List_fromArray(
						[content]));
			case 'H4':
				return A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$h4,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$class($NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionHeaderClass)
						]),
					_List_fromArray(
						[content]));
			case 'H5':
				return A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$h5,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$class($NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionHeaderClass)
						]),
					_List_fromArray(
						[content]));
			default:
				return A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$h6,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$class($NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionHeaderClass)
						]),
					_List_fromArray(
						[content]));
		}
	});
var $rtfeldman$elm_css$Html$Styled$Attributes$hidden = $rtfeldman$elm_css$Html$Styled$Attributes$boolProperty('hidden');
var $tesk9$accessible_html_with_css$Accessibility$Styled$Key$left = function (msg) {
	return A2($tesk9$accessible_html_with_css$Accessibility$Styled$Key$succeedForKeyCode, 37, msg);
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Key$right = function (msg) {
	return A2($tesk9$accessible_html_with_css$Accessibility$Styled$Key$succeedForKeyCode, 39, msg);
};
var $tesk9$accessible_html_with_css$Accessibility$Styled$Key$up = function (msg) {
	return A2($tesk9$accessible_html_with_css$Accessibility$Styled$Key$succeedForKeyCode, 38, msg);
};
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$viewEntry = F4(
	function (focus, arrows, config, children) {
		var headerId = config.headerId;
		var headerLevel = config.headerLevel;
		var caret = config.caret;
		var headerContent = config.headerContent;
		var entryClass = config.entryClass;
		var content = config.content;
		var isExpanded = config.isExpanded;
		var panelId = 'accordion-panel__' + headerId;
		return A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$div,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$classList(
					_List_fromArray(
						[
							_Utils_Tuple2($NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryClass, true),
							_Utils_Tuple2(entryClass, true),
							_Utils_Tuple2($NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryExpandedClass, isExpanded),
							_Utils_Tuple2($NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryCollapsedClass, !isExpanded)
						]))
				]),
			_List_fromArray(
				[
					A2(
					$NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$header,
					headerLevel,
					A2(
						$tesk9$accessible_html_with_css$Accessibility$Styled$button,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Html$Styled$Attributes$id(headerId),
								$rtfeldman$elm_css$Html$Styled$Attributes$classList(
								_List_fromArray(
									[
										_Utils_Tuple2($NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryHeaderClass, true),
										_Utils_Tuple2(entryClass, true),
										_Utils_Tuple2($NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryHeaderExpandedClass, isExpanded),
										_Utils_Tuple2($NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryHeaderCollapsedClass, !isExpanded)
									])),
								$tesk9$accessible_html_with_css$Accessibility$Styled$Widget$disabled(
								_Utils_eq(config.toggle, $elm$core$Maybe$Nothing)),
								$tesk9$accessible_html_with_css$Accessibility$Styled$Widget$expanded(isExpanded),
								$tesk9$accessible_html_with_css$Accessibility$Styled$Aria$controls(panelId),
								A2(
								$elm$core$Maybe$withDefault,
								$NoRedInk$noredink_ui$Nri$Ui$Html$Attributes$V2$none,
								A2(
									$elm$core$Maybe$map,
									function (toggle) {
										return $rtfeldman$elm_css$Html$Styled$Events$onClick(
											toggle(!isExpanded));
									},
									config.toggle)),
								A2(
								$rtfeldman$elm_css$Html$Styled$Events$custom,
								'keydown',
								A2(
									$elm$json$Json$Decode$map,
									function (event) {
										return {message: event, preventDefault: true, stopPropagation: false};
									},
									$elm$json$Json$Decode$oneOf(
										A2(
											$elm$core$List$filterMap,
											$elm$core$Basics$identity,
											_List_fromArray(
												[
													A2(
													$elm$core$Maybe$map,
													function (id) {
														return $tesk9$accessible_html_with_css$Accessibility$Styled$Key$up(
															focus(id));
													},
													arrows.up),
													A2(
													$elm$core$Maybe$map,
													function (id) {
														return $tesk9$accessible_html_with_css$Accessibility$Styled$Key$down(
															focus(id));
													},
													arrows.down),
													A2(
													$elm$core$Maybe$map,
													function (id) {
														return $tesk9$accessible_html_with_css$Accessibility$Styled$Key$right(
															focus(id));
													},
													arrows.right),
													A2(
													$elm$core$Maybe$map,
													function (id) {
														return $tesk9$accessible_html_with_css$Accessibility$Styled$Key$left(
															focus(id));
													},
													arrows.left)
												])))))
							]),
						_List_fromArray(
							[
								caret(isExpanded),
								headerContent
							]))),
					A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$section,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$id(panelId),
							$tesk9$accessible_html_with_css$Accessibility$Styled$Aria$labelledBy(headerId),
							$rtfeldman$elm_css$Html$Styled$Attributes$classList(
							_List_fromArray(
								[
									_Utils_Tuple2($NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionEntryPanelClass, true),
									_Utils_Tuple2(entryClass, true)
								])),
							$rtfeldman$elm_css$Html$Styled$Attributes$hidden(!isExpanded)
						]),
					isExpanded ? _List_fromArray(
						[
							content(_Utils_Tuple0),
							$NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$view_(
							{
								entries: children,
								focus: focus,
								leftId: $elm$core$Maybe$Just(headerId)
							})
						]) : _List_Nil)
				]));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$view_ = function (_v0) {
	var entries = _v0.entries;
	var focus = _v0.focus;
	var leftId = _v0.leftId;
	var headerIds = A2($elm$core$List$map, $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$getHeaderId, entries);
	var lastHeaderId = $elm$core$List$head(
		$elm$core$List$reverse(headerIds));
	var firstHeaderId = $elm$core$List$head(headerIds);
	var arrowUpIds = A2(
		$elm$core$List$cons,
		lastHeaderId,
		A2($elm$core$List$map, $elm$core$Maybe$Just, headerIds));
	return A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$div,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$class($NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$accordionClass),
				A2($rtfeldman$elm_css$Html$Styled$Attributes$attribute, 'aria-live', 'polite')
			]),
		_List_fromArray(
			[
				A3(
				$rtfeldman$elm_css$Html$Styled$Keyed$node,
				'div',
				_List_Nil,
				A3(
					$elm$core$List$foldr,
					F2(
						function (_v1, _v3) {
							var previousId = _v1.a;
							var _v2 = _v1.b;
							var entry_ = _v2.a;
							var children = _v2.b;
							var nextId = _v3.a;
							var acc = _v3.b;
							var node = _Utils_Tuple2(
								'keyed-section__' + entry_.headerId,
								A4(
									$NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$viewEntry,
									focus,
									{
										down: nextId,
										left: leftId,
										right: A2(
											$elm$core$Maybe$map,
											$NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$getHeaderId,
											$elm$core$List$head(children)),
										up: previousId
									},
									entry_,
									children));
							return _Utils_Tuple2(
								$elm$core$Maybe$Just(entry_.headerId),
								A2($elm$core$List$cons, node, acc));
						}),
					_Utils_Tuple2(firstHeaderId, _List_Nil),
					A3(
						$elm$core$List$map2,
						F2(
							function (id, nextEntry) {
								return _Utils_Tuple2(id, nextEntry);
							}),
						arrowUpIds,
						entries)).b)
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$view = function (_v0) {
	var entries = _v0.entries;
	var focus = _v0.focus;
	return $NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$view_(
		{entries: entries, focus: focus, leftId: $elm$core$Maybe$Nothing});
};
var $author$project$StudentPage$assignmentsView = function (model) {
	var assignments = model.assignments;
	return A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$div,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$css(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$displayFlex,
						$rtfeldman$elm_css$Css$flexDirection($rtfeldman$elm_css$Css$column),
						$rtfeldman$elm_css$Css$margin($rtfeldman$elm_css$Css$auto),
						$rtfeldman$elm_css$Css$height(
						$rtfeldman$elm_css$Css$pct(100)),
						$rtfeldman$elm_css$Css$width(
						$rtfeldman$elm_css$Css$pct(75)),
						$rtfeldman$elm_css$Css$maxWidth(
						$rtfeldman$elm_css$Css$rem(70)),
						$rtfeldman$elm_css$Css$minWidth(
						$rtfeldman$elm_css$Css$rem(30))
					]))
			]),
		_List_fromArray(
			[
				$NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$view(
				{
					entries: A2(
						$elm$core$List$indexedMap,
						$author$project$StudentPage$toAccordionEntry(model),
						$elm$core$Array$toList(assignments)),
					focus: $author$project$StudentPage$Focus
				}),
				$NoRedInk$noredink_ui$Nri$Ui$Accordion$V3$styleAccordion(
				{
					contentStyles: _List_Nil,
					entryClosedStyles: _List_Nil,
					entryExpandedStyles: _List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Css$Global$withClass,
							'fixed-positioning-accordion-example',
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$Global$children(
									_List_fromArray(
										[
											$rtfeldman$elm_css$Css$Global$section(
											_List_fromArray(
												[
													$rtfeldman$elm_css$Css$minHeight(
													$rtfeldman$elm_css$Css$px(100)),
													$rtfeldman$elm_css$Css$padding(
													$rtfeldman$elm_css$Css$px(20))
												]))
										]))
								]))
						]),
					entryStyles: _List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Css$Global$withClass,
							'fixed-positioning-accordion-example',
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$marginLeft(
									$rtfeldman$elm_css$Css$px(-20)),
									$rtfeldman$elm_css$Css$position($rtfeldman$elm_css$Css$relative),
									$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white)
								]))
						]),
					headerClosedStyles: _List_Nil,
					headerExpandedStyles: _List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Css$Global$withClass,
							'fixed-positioning-accordion-example',
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray96),
									$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white),
									$rtfeldman$elm_css$Css$borderRadius(
									$rtfeldman$elm_css$Css$px(8)),
									A5(
									$rtfeldman$elm_css$Css$boxShadow5,
									$rtfeldman$elm_css$Css$zero,
									$rtfeldman$elm_css$Css$zero,
									$rtfeldman$elm_css$Css$px(10),
									$rtfeldman$elm_css$Css$zero,
									A2($NoRedInk$noredink_ui$Nri$Ui$Colors$Extra$withAlpha, 0.2, $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray20))
								]))
						]),
					headerStyles: _List_fromArray(
						[
							A2(
							$rtfeldman$elm_css$Css$Global$withClass,
							'fixed-positioning-accordion-example',
							_List_fromArray(
								[
									$rtfeldman$elm_css$Css$padding(
									$rtfeldman$elm_css$Css$px(10)),
									$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white)
								]))
						])
				})
			]));
};
var $author$project$StudentPage$view = function (model) {
	return model.loading ? $author$project$Util$loadingSpinner : $author$project$StudentPage$assignmentsView(model);
};
var $author$project$Main$Logout = {$: 'Logout'};
var $tesk9$accessible_html_with_css$Accessibility$Styled$a = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$a(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $rtfeldman$elm_css$Html$Styled$header = $rtfeldman$elm_css$Html$Styled$node('header');
var $tesk9$accessible_html_with_css$Accessibility$Styled$header = function (attributes) {
	return $rtfeldman$elm_css$Html$Styled$header(
		$tesk9$accessible_html_with_css$Accessibility$Styled$Utils$nonInteractive(attributes));
};
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$home = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 20 18'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$g,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$fillRule('evenodd')
					]),
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('M10.5916711,0.1316206 L10.67853,0.20566 L19.77453,9.411066 C20.1884706,9.82499711 19.9187834,10.5322989 19.3794595,10.6096104 L19.28157,10.616526 L17.30891,10.616526 L17.30891,17.082125 C17.30891,17.4337583 17.0325426,17.7394285 16.6910117,17.7879316 L16.59641,17.794625 L11.93943,17.794625 L11.93943,11.767226 L7.994034,11.767226 L7.994034,17.739825 C7.9524255,17.780925 7.8805005,17.7912 7.82406703,17.7937688 L7.774494,17.794625 L3.007294,17.794625 C2.65566067,17.794625 2.34999053,17.5181635 2.3014874,17.1766169 L2.294794,17.082013 L2.294794,10.616414 L0.7059516,10.616526 C0.0854307467,10.616526 -0.193638248,9.88344717 0.146485604,9.47884123 L0.2129916,9.411066 L9.69259,0.20566 C9.938686,-0.041138 10.3183024,-0.0658178 10.5916711,0.1316206 Z')
							]),
						_List_Nil)
					]))
			])));
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$renderLink = function (link_) {
	var config = link_.a;
	var colorPalette = $NoRedInk$noredink_ui$Nri$Ui$Button$V10$getColorPalette(link_);
	var _v0 = A2($NoRedInk$noredink_ui$ClickableAttributes$toLinkAttributes, $elm$core$Basics$identity, config.clickableAttributes);
	var linkFunctionName = _v0.a;
	var attributes = _v0.b;
	return A5(
		$NoRedInk$noredink_ui$Nri$Ui$styled,
		$rtfeldman$elm_css$Html$Styled$a,
		$NoRedInk$noredink_ui$Nri$Ui$Button$V10$styledName(linkFunctionName),
		_List_fromArray(
			[
				A4($NoRedInk$noredink_ui$Nri$Ui$Button$V10$buttonStyles, config.size, config.width, colorPalette, config.customStyles)
			]),
		_Utils_ap(attributes, config.customAttributes),
		_List_fromArray(
			[
				A3($NoRedInk$noredink_ui$Nri$Ui$Button$V10$viewLabel, config.size, config.icon, config.label)
			]));
};
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$link = F2(
	function (name, attributes) {
		return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$renderLink(
			A3(
				$elm$core$List$foldl,
				F2(
					function (_v0, l) {
						var attribute = _v0.a;
						return attribute(l);
					}),
				$NoRedInk$noredink_ui$Nri$Ui$Button$V10$build,
				A2(
					$elm$core$List$cons,
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$label(name),
					attributes)));
	});
var $NoRedInk$noredink_ui$Nri$Ui$Button$V10$linkSpa = function (url) {
	return $NoRedInk$noredink_ui$Nri$Ui$Button$V10$setClickableAttributes(
		$NoRedInk$noredink_ui$ClickableAttributes$linkSpa(url));
};
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$calendar = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 21 21')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$fillRule('evenodd'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M19.483 5.097v13.709c-.151 1.053-.848 1.909-1.756 2.194H2.7C1.67 20.677.913 19.621.913 18.376V5.526c0-1.5 1.101-2.725 2.449-2.725h2.515V.725c0-.4.293-.725.652-.725.36 0 .652.326.652.725v2.076h6.065V.725c0-.4.293-.725.652-.725.359 0 .651.326.651.725v2.076h2.516c1.216 0 2.232.998 2.418 2.296zM3.362 4.25h2.515v1c0 .4.293.725.652.725.36 0 .652-.325.652-.725v-1h6.043v1c0 .4.292.725.652.725.359 0 .651-.325.651-.725v-1h2.516c.629 0 1.145.576 1.145 1.275v2.424H2.217V5.525c0-.7.515-1.275 1.145-1.275zm13.703 15.401H3.362c-.63 0-1.145-.575-1.145-1.275v-8.95H18.21v8.95c0 .7-.516 1.275-1.145 1.275z')
					]),
				_List_Nil),
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$fillRule('nonzero'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M3.652 10.957h1.826v1.826H3.652z')
					]),
				_List_Nil),
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$fillRule('nonzero'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M3.652 13.696h1.826v1.826H3.652zM6.391 10.957h1.826v1.826H6.391zM6.391 13.696h1.826v1.826H6.391zM9.13 10.957h1.826v1.826H9.13zM9.13 13.696h1.826v1.826H9.13zM11.87 10.957h1.826v1.826H11.87zM11.87 13.696h1.826v1.826H11.87zM14.609 10.957h1.826v1.826h-1.826zM14.609 13.696h1.826v1.826h-1.826zM3.652 16.435h1.826v1.826H3.652zM6.391 16.435h1.826v1.826H6.391zM9.13 16.435h1.826v1.826H9.13zM11.87 16.435h1.826v1.826H11.87zM14.609 16.435h1.826v1.826h-1.826z')
					]),
				_List_Nil)
			])));
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$couple = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 100 100')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$g,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('m43 30.398c0 8.5625-6.9414 15.5-15.5 15.5s-15.5-6.9375-15.5-15.5c0-8.5586 6.9414-15.5 15.5-15.5s15.5 6.9414 15.5 15.5')
							]),
						_List_Nil),
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('m85.699 40.301c0 7.9531-6.4453 14.398-14.398 14.398s-14.402-6.4453-14.402-14.398 6.4492-14.402 14.402-14.402 14.398 6.4492 14.398 14.402')
							]),
						_List_Nil),
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('m90.102 48.699c-0.60156-0.30078-1.1992-0.39844-1.8008-0.19922-0.60156 0.19922-1.1016 0.69922-1.3984 1.1992-2.7031 6.3008-8.9023 10.301-15.602 10.301-6.8008 0-12.898-4-15.602-10.301-0.30078-0.60156-0.80078-1-1.3984-1.1992-0.60156-0.19922-1.3008-0.10156-1.8008 0.19922-5 3.1016-8 8.3984-8 14.199v5.5c0 9.2031 7.5 16.602 16.699 16.602h20.199c9.1016 0 16.602-7.3984 16.602-16.602v-5.5c0-5.7969-3-11.098-7.8984-14.199z')
							]),
						_List_Nil),
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('m40.102 67.301v-5.5c0-6.6016 3.3984-12.602 9-16.102 0.30078-0.19922 0.5-0.30078 0.80078-0.39844-0.90234-1.3008-1.9023-2.5-3.2031-3.5-0.69922-0.60156-1.8984-0.39844-2.3008 0.5-3.1992 6-9.6016 10.102-16.898 10.102-7.3008 0-13.602-4.1016-16.898-10.102-0.5-0.80078-1.6016-1.1016-2.3008-0.5-3.1992 2.5977-5.3008 6.5977-5.3008 11.199v4c0 8.8008 7.1992 16 16 16h18.602c0.5 0 1 0 1.5-0.10156 0.89844-0.10156 1.5-0.89844 1.3008-1.8008-0.20312-1.2969-0.30078-2.4961-0.30078-3.7969z')
							]),
						_List_Nil)
					]))
			])));
var $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$performance = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 25 25')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$path,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$d('M2.575,22.5 L2.55333333,2.47096774 L2.55333333,5.68434189e-14 L1.53166667,5.68434189e-14 C0.275833333,5.68434189e-14 0,0.345967742 0,1.48225806 L0.0216666667,23.4887097 C0.0216666667,24.7185484 0.3275,24.9709677 1.55333333,24.9709677 L23.4891667,24.9709677 C24.7191667,24.9709677 25.0216667,24.7483871 25.0216667,23.4887097 L25.0216667,22.5 L22.4675,22.5 L2.575,22.5 Z')
					]),
				_List_Nil),
				A2(
				$rtfeldman$elm_css$Svg$Styled$rect,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$x('4.224'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$y('11.9331996'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$width('3.55583333'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$height('9.42432817'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$rx('1')
					]),
				_List_Nil),
				A2(
				$rtfeldman$elm_css$Svg$Styled$rect,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$x('9.47510076'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$y('5.31243234'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$width('3.55583333'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$height('16.0450955'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$rx('1')
					]),
				_List_Nil),
				A2(
				$rtfeldman$elm_css$Svg$Styled$rect,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$x('14.7262015'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$y('8.69585911'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$width('3.55583333'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$height('12.6616687'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$rx('1')
					]),
				_List_Nil),
				A2(
				$rtfeldman$elm_css$Svg$Styled$rect,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$x('19.9773023'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$y('3.19919812'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$width('3.55583333'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$height('18.1583297'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$rx('1')
					]),
				_List_Nil)
			])));
var $NoRedInk$noredink_ui$Nri$Ui$AssignmentIcon$V2$writing = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 70 70'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$g,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$fillRule('evenodd')
					]),
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('M35,69.3211972 C54.33,69.3211972 70,53.8719014 70,34.8141549 C70,15.7564085 54.33,0.307112676 35,0.307112676 C15.67,0.307112676 0,15.7564085 0,34.8141549 C0,53.8719014 15.67,69.3211972 35,69.3211972'),
								$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor')
							]),
						_List_Nil),
						A2(
						$rtfeldman$elm_css$Svg$Styled$g,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$transform('translate(16.500000, 17.877535)'),
								$rtfeldman$elm_css$Svg$Styled$Attributes$fill('#FFFFFF')
							]),
						_List_fromArray(
							[
								A2(
								$rtfeldman$elm_css$Svg$Styled$path,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Svg$Styled$Attributes$d('M2.08125,0.183695707 L6.031,0.190211268 C7.08814286,0.20193662 7.95103571,1.06700704 7.94839891,2.11577465 L7.94839891,2.11577465 L7.90214286,26.4536972 C7.90214286,26.839331 7.80303571,27.2171479 7.61803571,27.5532746 L7.61803571,27.5532746 L4.54703571,33.0120775 C4.43207143,33.2114085 4.21932143,33.3390845 3.98807143,33.3455986 C3.75153571,33.3416901 3.53482143,33.2127113 3.42117857,33.0094718 L3.42117857,33.0094718 L0.367357143,27.536338 C0.183678571,27.2015141 0.0872142857,26.8223944 0.0898042575,26.440669 L0.0898042575,26.440669 L0.137428571,2.10014085 C0.137428571,1.04355634 1.00957143,0.182394366 2.08125,0.183695707 L2.08125,0.183695707 Z M2.38385714,2.24084507 C2.33760714,2.24084507 2.29003571,2.24605634 2.257,2.25257042 C1.92796429,2.32552817 1.69275,2.61605634 1.69671429,2.9521831 L1.71125,26.4849648 C1.71125,26.6295775 1.76146429,26.7728873 1.85,26.8862324 L1.88435714,26.9292254 L3.26525,29.4176056 L4.78092857,29.4176056 L6.26357143,26.7715845 C6.31775,26.6764789 6.34682143,26.5605282 6.34682143,26.4458803 L6.34682143,25.9729577 C5.65042857,26.1358099 4.93685714,26.2178873 4.22328571,26.2178873 L4.08717857,26.2165845 C3.96164286,26.2165845 3.84667857,26.2126761 3.76210714,26.2087676 L3.05778571,26.2074648 L3.05778571,2.91179577 C3.06042857,2.73330986 2.99039286,2.5665493 2.86221429,2.44017606 C2.73007143,2.30989437 2.56489286,2.24084507 2.38385714,2.24084507 Z')
									]),
								_List_Nil),
								A2(
								$rtfeldman$elm_css$Svg$Styled$path,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Svg$Styled$Attributes$d('M12.35615,31.837588 C11.57915,31.837588 10.9461857,31.2122359 10.9461857,30.4435739 C10.9461857,29.6788204 11.5765071,29.0534683 12.3521857,29.0534683 L20.8740786,29.0534683 C21.9140429,29.0534683 22.2840429,29.8038908 22.2840429,30.4461796 C22.2840429,31.0884683 21.9140429,31.837588 20.8740786,31.837588 L12.35615,31.837588 Z')
									]),
								_List_Nil),
								A2(
								$rtfeldman$elm_css$Svg$Styled$path,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Svg$Styled$Attributes$d('M12.35615,23.2128099 C11.5804714,23.2128099 10.9475071,22.5887606 10.9461857,21.8187958 C10.9461857,21.0540423 11.5765071,20.429993 12.3521857,20.429993 L35.5155071,20.429993 C36.5554714,20.429993 36.9254714,21.1791127 36.9254714,21.8214014 C36.9254714,22.4636901 36.5554714,23.2128099 35.5155071,23.2128099 L12.35615,23.2128099 Z')
									]),
								_List_Nil),
								A2(
								$rtfeldman$elm_css$Svg$Styled$path,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Svg$Styled$Attributes$d('M12.35615,14.2444789 C11.5804714,14.2444789 10.9475071,13.6204296 10.9461857,12.8504648 C10.9461857,12.0857113 11.5765071,11.461662 12.3521857,11.461662 L35.5155071,11.461662 C36.5554714,11.461662 36.9254714,12.2107817 36.9254714,12.8530704 C36.9254714,13.4953592 36.5554714,14.2444789 35.5155071,14.2444789 L12.35615,14.2444789 Z')
									]),
								_List_Nil),
								A2(
								$rtfeldman$elm_css$Svg$Styled$path,
								_List_fromArray(
									[
										$rtfeldman$elm_css$Svg$Styled$Attributes$d('M12.35615,5.62347887 C11.6227571,5.62347887 11.0188643,5.06717606 10.9527929,4.35974648 L10.9527929,4.23207042 C10.9527929,3.46471127 11.5831143,2.83935915 12.3587929,2.83935915 L35.5155071,2.83935915 C36.5554714,2.83935915 36.9254714,3.58978169 36.9254714,4.23207042 C36.9254714,4.87435915 36.5554714,5.62347887 35.5155071,5.62347887 L12.35615,5.62347887 Z')
									]),
								_List_Nil)
							]))
					]))
			])));
var $author$project$ProfessorPage$navIcons = _List_fromArray(
	[
		{icon: $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$class, route: $author$project$Route$RegistrationRequests},
		{icon: $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$calendar, route: $author$project$Route$Activities},
		{icon: $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$couple, route: $author$project$Route$Groups},
		{icon: $NoRedInk$noredink_ui$Nri$Ui$AssignmentIcon$V2$writing, route: $author$project$Route$Topics},
		{
		icon: $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$performance,
		route: $author$project$Route$ActivityAssignments(0)
	}
	]);
var $NoRedInk$noredink_ui$Nri$Ui$AssignmentIcon$V2$quiz = $NoRedInk$noredink_ui$Nri$Ui$Svg$V1$fromHtml(
	A2(
		$rtfeldman$elm_css$Svg$Styled$svg,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Svg$Styled$Attributes$width('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$height('100%'),
				$rtfeldman$elm_css$Svg$Styled$Attributes$viewBox('0 0 50 46')
			]),
		_List_fromArray(
			[
				A2(
				$rtfeldman$elm_css$Svg$Styled$g,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Svg$Styled$Attributes$fill('currentcolor'),
						$rtfeldman$elm_css$Svg$Styled$Attributes$fillRule('evenodd')
					]),
				_List_fromArray(
					[
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('M14.4982462,6.96082729 C13.4489636,6.96082729 12.5824213,6.1479217 12.4861388,5.1109714 L12.4881038,4.92459792 C12.4881038,3.80040897 13.3919801,2.88638585 14.5021761,2.88638585 L47.6862288,2.88638585 C49.1756598,2.88638585 49.704231,3.98479975 49.704231,4.92459792 C49.704231,5.86241339 49.1756598,6.96082729 47.6862288,6.96082729 L14.4982462,6.96082729 Z')
							]),
						_List_Nil),
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('M3.62821246,8.16759261 C3.38347867,8.16759261 3.14731533,8.07246622 2.97019283,7.90095044 L0.294309819,5.31860507 C-0.0861226584,4.95203214 -0.0994544599,4.34379972 0.264313266,3.96041152 C0.626652585,3.57702331 1.2299166,3.56309066 1.61034908,3.93014403 L3.58583638,5.83603502 L8.64192208,0.309575707 C8.99902391,-0.0810190436 9.60133565,-0.105040861 9.98748176,0.254805964 C10.374104,0.615133225 10.3983869,1.2228852 10.0417612,1.61251908 L4.32813204,7.85819161 C4.15434248,8.04796396 3.91341778,8.15894476 3.65773288,8.16711218 C3.64821016,8.16759261 3.63821131,8.16759261 3.62821246,8.16759261')
							]),
						_List_Nil),
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('M3.62821246,20.0385604 C3.38347867,20.0385604 3.14731533,19.943434 2.97019283,19.7719182 L0.294309819,17.1895728 C-0.0861226584,16.8229999 -0.0994544599,16.2147675 0.264313266,15.8313793 C0.626652585,15.4479911 1.2299166,15.4340584 1.61034908,15.8011118 L3.58583638,17.7070028 L8.64192208,12.1805434 C8.99902391,11.7899487 9.60133565,11.7659269 9.98748176,12.1257737 C10.374104,12.486101 10.3983869,13.0938529 10.0417612,13.4834868 L4.32813204,19.7291593 C4.15434248,19.9189317 3.91341778,20.0299125 3.65773288,20.0380799 C3.64821016,20.0385604 3.63821131,20.0385604 3.62821246,20.0385604')
							]),
						_List_Nil),
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('M3.62821246,44.6876696 C3.38347867,44.6876696 3.14731533,44.5925432 2.97019283,44.4210274 L0.294309819,41.838682 C-0.0861226584,41.4721091 -0.0994544599,40.8638767 0.264313266,40.4804885 C0.626652585,40.0971003 1.2299166,40.0831676 1.61034908,40.450221 L3.58583638,42.356112 L8.64192208,36.8296527 C8.99902391,36.4390579 9.60133565,36.4150361 9.98748176,36.7748829 C10.374104,37.1352102 10.3983869,37.7429622 10.0417612,38.132596 L4.32813204,44.3782686 C4.15434248,44.5680409 3.91341778,44.6790217 3.65773288,44.6871891 C3.64821016,44.6876696 3.63821131,44.6876696 3.62821246,44.6876696')
							]),
						_List_Nil),
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('M1.44800241,26.6191349 C0.987920766,26.1548977 0.987920766,25.4678266 1.44800241,25.0035894 C1.90808405,24.5393522 2.58900489,24.5393522 3.04908653,25.0035894 L5.11025229,27.0833722 L7.17141806,25.0035894 C7.6314997,24.5393522 8.39523523,24.5393522 8.84611524,25.0035894 C9.30619688,25.4678266 9.30619688,26.2384604 8.84611524,26.6934129 L6.78494947,28.7731956 L8.84611524,30.8529784 C9.30619688,31.3172156 9.30619688,32.0042867 8.84611524,32.4685239 C8.38603359,32.9327611 7.70511276,32.9327611 7.24503112,32.4685239 L5.18386536,30.3887412 L3.12269959,32.4685239 C2.66261795,32.9327611 1.89888242,32.9327611 1.44800241,32.4685239 C0.987920766,32.0042867 0.987920766,31.2336529 1.44800241,30.7787004 L3.50916817,28.7731956 L1.44800241,26.6191349 Z')
							]),
						_List_Nil),
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('M14.4982462,18.8670523 C13.4489636,18.8670523 12.5824213,18.0561294 12.4861388,17.0191791 L12.4881038,16.8328057 C12.4881038,15.7086167 13.3919801,14.7926109 14.5021761,14.7926109 L47.6862288,14.7926109 C49.1756598,14.7926109 49.704231,15.8910248 49.704231,16.8328057 C49.704231,17.7706211 49.1756598,18.8670523 47.6862288,18.8670523 L14.4982462,18.8670523 Z')
							]),
						_List_Nil),
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('M14.4982462,42.6795024 C13.3880502,42.6795024 12.480244,41.7654793 12.478279,40.6393077 C12.478279,39.5210668 13.3821554,38.605061 14.4923514,38.605061 L47.6862288,38.605061 C49.1756598,38.605061 49.704231,39.7034749 49.704231,40.6452558 C49.704231,41.5830712 49.1756598,42.6795024 47.6862288,42.6795024 L14.4982462,42.6795024 Z')
							]),
						_List_Nil),
						A2(
						$rtfeldman$elm_css$Svg$Styled$path,
						_List_fromArray(
							[
								$rtfeldman$elm_css$Svg$Styled$Attributes$d('M14.4982462,30.7732774 C13.3880502,30.7732774 12.480244,29.8572716 12.478279,28.7330826 C12.478279,27.6128591 13.3821554,26.6988359 14.4923514,26.6988359 L47.6862288,26.6988359 C49.1756598,26.6988359 49.704231,27.7952671 49.704231,28.737048 C49.704231,29.6748635 49.1756598,30.7732774 47.6862288,30.7732774 L14.4982462,30.7732774 Z')
							]),
						_List_Nil)
					]))
			])));
var $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$textHighlightBlue = $rtfeldman$elm_css$Css$hex('#3d81ff');
var $author$project$Main$viewHeader = function (_v0) {
	var currentUser = _v0.currentUser;
	var currentRoute = _v0.currentRoute;
	var navIcon = function (_v4) {
		var route = _v4.route;
		var icon = _v4.icon;
		var isActive = function () {
			var _v3 = _Utils_Tuple2(route, currentRoute);
			if ((((_v3.a.$ === 'Professor') && (_v3.a.a.$ === 'ActivityAssignments')) && (_v3.b.$ === 'Professor')) && (_v3.b.a.$ === 'ActivityAssignments')) {
				return true;
			} else {
				return _Utils_eq(route, currentRoute);
			}
		}();
		var color = isActive ? $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$textHighlightBlue : $NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray45;
		return A2(
			$tesk9$accessible_html_with_css$Accessibility$Styled$div,
			_List_fromArray(
				[
					$rtfeldman$elm_css$Html$Styled$Attributes$css(
					_List_fromArray(
						[
							$rtfeldman$elm_css$Css$height(
							$rtfeldman$elm_css$Css$px(32)),
							$rtfeldman$elm_css$Css$width(
							$rtfeldman$elm_css$Css$px(32)),
							$rtfeldman$elm_css$Css$marginLeft(
							$rtfeldman$elm_css$Css$rem(1)),
							$rtfeldman$elm_css$Css$marginRight(
							$rtfeldman$elm_css$Css$rem(1))
						]))
				]),
			_List_fromArray(
				[
					A2(
					$tesk9$accessible_html_with_css$Accessibility$Styled$a,
					_List_fromArray(
						[
							$rtfeldman$elm_css$Html$Styled$Attributes$href(
							$author$project$Route$toString(route))
						]),
					_List_fromArray(
						[
							$NoRedInk$noredink_ui$Nri$Ui$Svg$V1$toHtml(
							A2($NoRedInk$noredink_ui$Nri$Ui$Svg$V1$withColor, color, icon))
						]))
				]));
	};
	var navbar = function () {
		var navItems = A2(
			$elm$core$Basics$composeL,
			$tesk9$accessible_html_with_css$Accessibility$Styled$nav(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$displayFlex,
								$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$center)
							]))
					])),
			$elm$core$List$cons(
				navIcon(
					{icon: $NoRedInk$noredink_ui$Nri$Ui$UiIcon$V1$home, route: $author$project$Route$Home})));
		switch (currentUser.$) {
			case 'Student':
				return navItems(
					_List_fromArray(
						[
							navIcon(
							{icon: $NoRedInk$noredink_ui$Nri$Ui$AssignmentIcon$V2$quiz, route: $author$project$Route$Student})
						]));
			case 'Professor':
				return navItems(
					A2(
						$elm$core$List$map,
						function (_v2) {
							var icon = _v2.icon;
							var route = _v2.route;
							return navIcon(
								{
									icon: icon,
									route: $author$project$Route$Professor(route)
								});
						},
						$author$project$ProfessorPage$navIcons));
			default:
				return $tesk9$accessible_html_with_css$Accessibility$Styled$text('');
		}
	}();
	var loginButtons = _Utils_eq(currentUser, $author$project$UserType$Guest) ? _List_fromArray(
		[
			A2(
			$NoRedInk$noredink_ui$Nri$Ui$Button$V10$link,
			'Napravi nalog',
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$secondary,
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$linkSpa(
					$author$project$Route$toString($author$project$Route$Registration))
				])),
			A2(
			$NoRedInk$noredink_ui$Nri$Ui$Button$V10$link,
			'Prijavi se',
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$primary,
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$linkSpa(
					$author$project$Route$toString($author$project$Route$Login))
				]))
		]) : _List_fromArray(
		[
			A2(
			$NoRedInk$noredink_ui$Nri$Ui$Button$V10$button,
			'Odjavi se',
			_List_fromArray(
				[
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$primary,
					$NoRedInk$noredink_ui$Nri$Ui$Button$V10$onClick($author$project$Main$Logout)
				]))
		]);
	return A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$header,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$css(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$white),
						$rtfeldman$elm_css$Css$displayFlex,
						$rtfeldman$elm_css$Css$justifyContent($rtfeldman$elm_css$Css$spaceBetween),
						$rtfeldman$elm_css$Css$alignItems($rtfeldman$elm_css$Css$center),
						$rtfeldman$elm_css$Css$margin(
						$rtfeldman$elm_css$Css$px(8))
					]))
			]),
		_List_fromArray(
			[
				A2(
				$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$h2,
				_List_fromArray(
					[
						$NoRedInk$noredink_ui$Nri$Ui$Heading$V2$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$color($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$textHighlightBlue)
							]))
					]),
				_List_fromArray(
					[
						$tesk9$accessible_html_with_css$Accessibility$Styled$text('MSNR')
					])),
				navbar,
				A2($tesk9$accessible_html_with_css$Accessibility$Styled$div, _List_Nil, loginButtons)
			]));
};
var $author$project$Main$view_ = function (model) {
	var content = function () {
		if (model.initalLoading) {
			return $NoRedInk$noredink_ui$Nri$Ui$Loading$V1$fadeInPage;
		} else {
			var _v0 = _Utils_Tuple2(model.currentPage, model.mainContent);
			_v0$6:
			while (true) {
				switch (_v0.a.$) {
					case 'HomePage':
						var _v1 = _v0.a;
						return $author$project$Main$homePageView;
					case 'StudentPage':
						if (_v0.b.$ === 'StudentModel') {
							var _v2 = _v0.a;
							var studentModel = _v0.b.a;
							return A2(
								$tesk9$accessible_html_with_css$Accessibility$Styled$map,
								$author$project$Main$GotStudentMsg,
								$author$project$StudentPage$view(studentModel));
						} else {
							break _v0$6;
						}
					case 'ProfessorPage':
						if (_v0.b.$ === 'ProfessorModel') {
							var _v3 = _v0.a;
							var profModel = _v0.b.a;
							return A2(
								$tesk9$accessible_html_with_css$Accessibility$Styled$map,
								$author$project$Main$GotProfessorMsg,
								A2($author$project$ProfessorPage$view, profModel, model.currentRoute));
						} else {
							break _v0$6;
						}
					case 'LoginPage':
						var loginModel = _v0.a.a;
						return A2(
							$tesk9$accessible_html_with_css$Accessibility$Styled$map,
							$author$project$Main$GotLoginMsg,
							$author$project$LoginPage$view(loginModel));
					case 'RegistrationPage':
						var regModel = _v0.a.a;
						return A2(
							$tesk9$accessible_html_with_css$Accessibility$Styled$map,
							$author$project$Main$GotRegistrationMsg,
							$author$project$RegistrationPage$view(regModel));
					case 'SetPasswordPage':
						var setPwsModel = _v0.a.a;
						return A2(
							$tesk9$accessible_html_with_css$Accessibility$Styled$map,
							$author$project$Main$GotPasswordMsg,
							$author$project$SetPasswordPage$view(setPwsModel));
					default:
						break _v0$6;
				}
			}
			return $author$project$Main$notFoundPageView;
		}
	}();
	return A2(
		$tesk9$accessible_html_with_css$Accessibility$Styled$div,
		_List_fromArray(
			[
				$rtfeldman$elm_css$Html$Styled$Attributes$css(
				_List_fromArray(
					[
						$rtfeldman$elm_css$Css$height(
						$rtfeldman$elm_css$Css$vh(100)),
						$rtfeldman$elm_css$Css$displayFlex,
						$rtfeldman$elm_css$Css$flexDirection($rtfeldman$elm_css$Css$column)
					]))
			]),
		_List_fromArray(
			[
				$author$project$Main$viewHeader(model),
				A2(
				$tesk9$accessible_html_with_css$Accessibility$Styled$main_,
				_List_fromArray(
					[
						$rtfeldman$elm_css$Html$Styled$Attributes$css(
						_List_fromArray(
							[
								$rtfeldman$elm_css$Css$backgroundColor($NoRedInk$noredink_ui$Nri$Ui$Colors$V1$gray96),
								$rtfeldman$elm_css$Css$flexGrow(
								$rtfeldman$elm_css$Css$int(1)),
								A4(
								$rtfeldman$elm_css$Css$margin4,
								$rtfeldman$elm_css$Css$px(0),
								$rtfeldman$elm_css$Css$px(8),
								$rtfeldman$elm_css$Css$px(8),
								$rtfeldman$elm_css$Css$px(8)),
								A4(
								$rtfeldman$elm_css$Css$padding4,
								$rtfeldman$elm_css$Css$px(8),
								$rtfeldman$elm_css$Css$px(0),
								$rtfeldman$elm_css$Css$px(0),
								$rtfeldman$elm_css$Css$px(0))
							]))
					]),
				_List_fromArray(
					[content]))
			]));
};
var $author$project$Main$view = function (model) {
	return {
		body: _List_fromArray(
			[
				$tesk9$accessible_html_with_css$Accessibility$Styled$toUnstyled(
				$author$project$Main$view_(model))
			]),
		title: 'MSNR'
	};
};
var $author$project$Main$main = $elm$browser$Browser$application(
	{init: $author$project$Main$init, onUrlChange: $author$project$Main$ChangedUrl, onUrlRequest: $author$project$Main$ClickedLink, subscriptions: $author$project$Main$subscriptions, update: $author$project$Main$update, view: $author$project$Main$view});
_Platform_export({'Main':{'init':$author$project$Main$main(
	A2(
		$elm$json$Json$Decode$andThen,
		function (apiBaseUrl) {
			return $elm$json$Json$Decode$succeed(
				{apiBaseUrl: apiBaseUrl});
		},
		A2($elm$json$Json$Decode$field, 'apiBaseUrl', $elm$json$Json$Decode$string)))(0)}});}(this));